{"id":"ae932be177f230edc3a3349f6e53b03c","_format":"hh-sol-build-info-1","solcVersion":"0.8.4","solcLongVersion":"0.8.4+commit.c7e474f2","input":{"language":"Solidity","sources":{"contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/draft-EIP712.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/cryptography/draft-EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n */\nabstract contract EIP712 {\n    /* solhint-disable var-name-mixedcase */\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n    address private immutable _CACHED_THIS;\n\n    bytes32 private immutable _HASHED_NAME;\n    bytes32 private immutable _HASHED_VERSION;\n    bytes32 private immutable _TYPE_HASH;\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        bytes32 typeHash = keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n        _CACHED_CHAIN_ID = block.chainid;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\n        _CACHED_THIS = address(this);\n        _TYPE_HASH = typeHash;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _CACHED_THIS && block.chainid == _CACHED_CHAIN_ID) {\n            return _CACHED_DOMAIN_SEPARATOR;\n        } else {\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\n        }\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.3) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        } else if (error == RecoverError.InvalidSignatureV) {\n            revert(\"ECDSA: invalid signature 'v' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n        if (v != 27 && v != 28) {\n            return (address(0), RecoverError.InvalidSignatureV);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/extensions/ERC20Snapshot.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Arrays.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev This contract extends an ERC20 token with a snapshot mechanism. When a snapshot is created, the balances and\n * total supply at the time are recorded for later access.\n *\n * This can be used to safely create mechanisms based on token balances such as trustless dividends or weighted voting.\n * In naive implementations it's possible to perform a \"double spend\" attack by reusing the same balance from different\n * accounts. By using snapshots to calculate dividends or voting power, those attacks no longer apply. It can also be\n * used to create an efficient ERC20 forking mechanism.\n *\n * Snapshots are created by the internal {_snapshot} function, which will emit the {Snapshot} event and return a\n * snapshot id. To get the total supply at the time of a snapshot, call the function {totalSupplyAt} with the snapshot\n * id. To get the balance of an account at the time of a snapshot, call the {balanceOfAt} function with the snapshot id\n * and the account address.\n *\n * NOTE: Snapshot policy can be customized by overriding the {_getCurrentSnapshotId} method. For example, having it\n * return `block.number` will trigger the creation of snapshot at the beginning of each new block. When overriding this\n * function, be careful about the monotonicity of its result. Non-monotonic snapshot ids will break the contract.\n *\n * Implementing snapshots for every block using this method will incur significant gas costs. For a gas-efficient\n * alternative consider {ERC20Votes}.\n *\n * ==== Gas Costs\n *\n * Snapshots are efficient. Snapshot creation is _O(1)_. Retrieval of balances or total supply from a snapshot is _O(log\n * n)_ in the number of snapshots that have been created, although _n_ for a specific account will generally be much\n * smaller since identical balances in subsequent snapshots are stored as a single entry.\n *\n * There is a constant overhead for normal ERC20 transfers due to the additional snapshot bookkeeping. This overhead is\n * only significant for the first transfer that immediately follows a snapshot for a particular account. Subsequent\n * transfers will have normal cost until the next snapshot, and so on.\n */\n\nabstract contract ERC20Snapshot is ERC20 {\n    // Inspired by Jordi Baylina's MiniMeToken to record historical balances:\n    // https://github.com/Giveth/minime/blob/ea04d950eea153a04c51fa510b068b9dded390cb/contracts/MiniMeToken.sol\n\n    using Arrays for uint256[];\n    using Counters for Counters.Counter;\n\n    // Snapshotted values have arrays of ids and the value corresponding to that id. These could be an array of a\n    // Snapshot struct, but that would impede usage of functions that work on an array.\n    struct Snapshots {\n        uint256[] ids;\n        uint256[] values;\n    }\n\n    mapping(address => Snapshots) private _accountBalanceSnapshots;\n    Snapshots private _totalSupplySnapshots;\n\n    // Snapshot ids increase monotonically, with the first value being 1. An id of 0 is invalid.\n    Counters.Counter private _currentSnapshotId;\n\n    /**\n     * @dev Emitted by {_snapshot} when a snapshot identified by `id` is created.\n     */\n    event Snapshot(uint256 id);\n\n    /**\n     * @dev Creates a new snapshot and returns its snapshot id.\n     *\n     * Emits a {Snapshot} event that contains the same id.\n     *\n     * {_snapshot} is `internal` and you have to decide how to expose it externally. Its usage may be restricted to a\n     * set of accounts, for example using {AccessControl}, or it may be open to the public.\n     *\n     * [WARNING]\n     * ====\n     * While an open way of calling {_snapshot} is required for certain trust minimization mechanisms such as forking,\n     * you must consider that it can potentially be used by attackers in two ways.\n     *\n     * First, it can be used to increase the cost of retrieval of values from snapshots, although it will grow\n     * logarithmically thus rendering this attack ineffective in the long term. Second, it can be used to target\n     * specific accounts and increase the cost of ERC20 transfers for them, in the ways specified in the Gas Costs\n     * section above.\n     *\n     * We haven't measured the actual numbers; if this is something you're interested in please reach out to us.\n     * ====\n     */\n    function _snapshot() internal virtual returns (uint256) {\n        _currentSnapshotId.increment();\n\n        uint256 currentId = _getCurrentSnapshotId();\n        emit Snapshot(currentId);\n        return currentId;\n    }\n\n    /**\n     * @dev Get the current snapshotId\n     */\n    function _getCurrentSnapshotId() internal view virtual returns (uint256) {\n        return _currentSnapshotId.current();\n    }\n\n    /**\n     * @dev Retrieves the balance of `account` at the time `snapshotId` was created.\n     */\n    function balanceOfAt(address account, uint256 snapshotId) public view virtual returns (uint256) {\n        (bool snapshotted, uint256 value) = _valueAt(snapshotId, _accountBalanceSnapshots[account]);\n\n        return snapshotted ? value : balanceOf(account);\n    }\n\n    /**\n     * @dev Retrieves the total supply at the time `snapshotId` was created.\n     */\n    function totalSupplyAt(uint256 snapshotId) public view virtual returns (uint256) {\n        (bool snapshotted, uint256 value) = _valueAt(snapshotId, _totalSupplySnapshots);\n\n        return snapshotted ? value : totalSupply();\n    }\n\n    // Update balance and/or total supply snapshots before the values are modified. This is implemented\n    // in the _beforeTokenTransfer hook, which is executed for _mint, _burn, and _transfer operations.\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        if (from == address(0)) {\n            // mint\n            _updateAccountSnapshot(to);\n            _updateTotalSupplySnapshot();\n        } else if (to == address(0)) {\n            // burn\n            _updateAccountSnapshot(from);\n            _updateTotalSupplySnapshot();\n        } else {\n            // transfer\n            _updateAccountSnapshot(from);\n            _updateAccountSnapshot(to);\n        }\n    }\n\n    function _valueAt(uint256 snapshotId, Snapshots storage snapshots) private view returns (bool, uint256) {\n        require(snapshotId > 0, \"ERC20Snapshot: id is 0\");\n        require(snapshotId <= _getCurrentSnapshotId(), \"ERC20Snapshot: nonexistent id\");\n\n        // When a valid snapshot is queried, there are three possibilities:\n        //  a) The queried value was not modified after the snapshot was taken. Therefore, a snapshot entry was never\n        //  created for this id, and all stored snapshot ids are smaller than the requested one. The value that corresponds\n        //  to this id is the current one.\n        //  b) The queried value was modified after the snapshot was taken. Therefore, there will be an entry with the\n        //  requested id, and its value is the one to return.\n        //  c) More snapshots were created after the requested one, and the queried value was later modified. There will be\n        //  no entry for the requested id: the value that corresponds to it is that of the smallest snapshot id that is\n        //  larger than the requested one.\n        //\n        // In summary, we need to find an element in an array, returning the index of the smallest value that is larger if\n        // it is not found, unless said value doesn't exist (e.g. when all values are smaller). Arrays.findUpperBound does\n        // exactly this.\n\n        uint256 index = snapshots.ids.findUpperBound(snapshotId);\n\n        if (index == snapshots.ids.length) {\n            return (false, 0);\n        } else {\n            return (true, snapshots.values[index]);\n        }\n    }\n\n    function _updateAccountSnapshot(address account) private {\n        _updateSnapshot(_accountBalanceSnapshots[account], balanceOf(account));\n    }\n\n    function _updateTotalSupplySnapshot() private {\n        _updateSnapshot(_totalSupplySnapshots, totalSupply());\n    }\n\n    function _updateSnapshot(Snapshots storage snapshots, uint256 currentValue) private {\n        uint256 currentId = _getCurrentSnapshotId();\n        if (_lastSnapshotId(snapshots.ids) < currentId) {\n            snapshots.ids.push(currentId);\n            snapshots.values.push(currentValue);\n        }\n    }\n\n    function _lastSnapshotId(uint256[] storage ids) private view returns (uint256) {\n        if (ids.length == 0) {\n            return 0;\n        } else {\n            return ids[ids.length - 1];\n        }\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Arrays.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        if (array.length == 0) {\n            return 0;\n        }\n\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds down (it does integer division with truncation).\n            if (array[mid] > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && array[low - 1] == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/ContextUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/extensions/ERC20Snapshot.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/ArraysUpgradeable.sol\";\nimport \"../../../utils/CountersUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev This contract extends an ERC20 token with a snapshot mechanism. When a snapshot is created, the balances and\n * total supply at the time are recorded for later access.\n *\n * This can be used to safely create mechanisms based on token balances such as trustless dividends or weighted voting.\n * In naive implementations it's possible to perform a \"double spend\" attack by reusing the same balance from different\n * accounts. By using snapshots to calculate dividends or voting power, those attacks no longer apply. It can also be\n * used to create an efficient ERC20 forking mechanism.\n *\n * Snapshots are created by the internal {_snapshot} function, which will emit the {Snapshot} event and return a\n * snapshot id. To get the total supply at the time of a snapshot, call the function {totalSupplyAt} with the snapshot\n * id. To get the balance of an account at the time of a snapshot, call the {balanceOfAt} function with the snapshot id\n * and the account address.\n *\n * NOTE: Snapshot policy can be customized by overriding the {_getCurrentSnapshotId} method. For example, having it\n * return `block.number` will trigger the creation of snapshot at the beginning of each new block. When overriding this\n * function, be careful about the monotonicity of its result. Non-monotonic snapshot ids will break the contract.\n *\n * Implementing snapshots for every block using this method will incur significant gas costs. For a gas-efficient\n * alternative consider {ERC20Votes}.\n *\n * ==== Gas Costs\n *\n * Snapshots are efficient. Snapshot creation is _O(1)_. Retrieval of balances or total supply from a snapshot is _O(log\n * n)_ in the number of snapshots that have been created, although _n_ for a specific account will generally be much\n * smaller since identical balances in subsequent snapshots are stored as a single entry.\n *\n * There is a constant overhead for normal ERC20 transfers due to the additional snapshot bookkeeping. This overhead is\n * only significant for the first transfer that immediately follows a snapshot for a particular account. Subsequent\n * transfers will have normal cost until the next snapshot, and so on.\n */\n\nabstract contract ERC20SnapshotUpgradeable is Initializable, ERC20Upgradeable {\n    function __ERC20Snapshot_init() internal onlyInitializing {\n    }\n\n    function __ERC20Snapshot_init_unchained() internal onlyInitializing {\n    }\n    // Inspired by Jordi Baylina's MiniMeToken to record historical balances:\n    // https://github.com/Giveth/minime/blob/ea04d950eea153a04c51fa510b068b9dded390cb/contracts/MiniMeToken.sol\n\n    using ArraysUpgradeable for uint256[];\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    // Snapshotted values have arrays of ids and the value corresponding to that id. These could be an array of a\n    // Snapshot struct, but that would impede usage of functions that work on an array.\n    struct Snapshots {\n        uint256[] ids;\n        uint256[] values;\n    }\n\n    mapping(address => Snapshots) private _accountBalanceSnapshots;\n    Snapshots private _totalSupplySnapshots;\n\n    // Snapshot ids increase monotonically, with the first value being 1. An id of 0 is invalid.\n    CountersUpgradeable.Counter private _currentSnapshotId;\n\n    /**\n     * @dev Emitted by {_snapshot} when a snapshot identified by `id` is created.\n     */\n    event Snapshot(uint256 id);\n\n    /**\n     * @dev Creates a new snapshot and returns its snapshot id.\n     *\n     * Emits a {Snapshot} event that contains the same id.\n     *\n     * {_snapshot} is `internal` and you have to decide how to expose it externally. Its usage may be restricted to a\n     * set of accounts, for example using {AccessControl}, or it may be open to the public.\n     *\n     * [WARNING]\n     * ====\n     * While an open way of calling {_snapshot} is required for certain trust minimization mechanisms such as forking,\n     * you must consider that it can potentially be used by attackers in two ways.\n     *\n     * First, it can be used to increase the cost of retrieval of values from snapshots, although it will grow\n     * logarithmically thus rendering this attack ineffective in the long term. Second, it can be used to target\n     * specific accounts and increase the cost of ERC20 transfers for them, in the ways specified in the Gas Costs\n     * section above.\n     *\n     * We haven't measured the actual numbers; if this is something you're interested in please reach out to us.\n     * ====\n     */\n    function _snapshot() internal virtual returns (uint256) {\n        _currentSnapshotId.increment();\n\n        uint256 currentId = _getCurrentSnapshotId();\n        emit Snapshot(currentId);\n        return currentId;\n    }\n\n    /**\n     * @dev Get the current snapshotId\n     */\n    function _getCurrentSnapshotId() internal view virtual returns (uint256) {\n        return _currentSnapshotId.current();\n    }\n\n    /**\n     * @dev Retrieves the balance of `account` at the time `snapshotId` was created.\n     */\n    function balanceOfAt(address account, uint256 snapshotId) public view virtual returns (uint256) {\n        (bool snapshotted, uint256 value) = _valueAt(snapshotId, _accountBalanceSnapshots[account]);\n\n        return snapshotted ? value : balanceOf(account);\n    }\n\n    /**\n     * @dev Retrieves the total supply at the time `snapshotId` was created.\n     */\n    function totalSupplyAt(uint256 snapshotId) public view virtual returns (uint256) {\n        (bool snapshotted, uint256 value) = _valueAt(snapshotId, _totalSupplySnapshots);\n\n        return snapshotted ? value : totalSupply();\n    }\n\n    // Update balance and/or total supply snapshots before the values are modified. This is implemented\n    // in the _beforeTokenTransfer hook, which is executed for _mint, _burn, and _transfer operations.\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        if (from == address(0)) {\n            // mint\n            _updateAccountSnapshot(to);\n            _updateTotalSupplySnapshot();\n        } else if (to == address(0)) {\n            // burn\n            _updateAccountSnapshot(from);\n            _updateTotalSupplySnapshot();\n        } else {\n            // transfer\n            _updateAccountSnapshot(from);\n            _updateAccountSnapshot(to);\n        }\n    }\n\n    function _valueAt(uint256 snapshotId, Snapshots storage snapshots) private view returns (bool, uint256) {\n        require(snapshotId > 0, \"ERC20Snapshot: id is 0\");\n        require(snapshotId <= _getCurrentSnapshotId(), \"ERC20Snapshot: nonexistent id\");\n\n        // When a valid snapshot is queried, there are three possibilities:\n        //  a) The queried value was not modified after the snapshot was taken. Therefore, a snapshot entry was never\n        //  created for this id, and all stored snapshot ids are smaller than the requested one. The value that corresponds\n        //  to this id is the current one.\n        //  b) The queried value was modified after the snapshot was taken. Therefore, there will be an entry with the\n        //  requested id, and its value is the one to return.\n        //  c) More snapshots were created after the requested one, and the queried value was later modified. There will be\n        //  no entry for the requested id: the value that corresponds to it is that of the smallest snapshot id that is\n        //  larger than the requested one.\n        //\n        // In summary, we need to find an element in an array, returning the index of the smallest value that is larger if\n        // it is not found, unless said value doesn't exist (e.g. when all values are smaller). Arrays.findUpperBound does\n        // exactly this.\n\n        uint256 index = snapshots.ids.findUpperBound(snapshotId);\n\n        if (index == snapshots.ids.length) {\n            return (false, 0);\n        } else {\n            return (true, snapshots.values[index]);\n        }\n    }\n\n    function _updateAccountSnapshot(address account) private {\n        _updateSnapshot(_accountBalanceSnapshots[account], balanceOf(account));\n    }\n\n    function _updateTotalSupplySnapshot() private {\n        _updateSnapshot(_totalSupplySnapshots, totalSupply());\n    }\n\n    function _updateSnapshot(Snapshots storage snapshots, uint256 currentValue) private {\n        uint256 currentId = _getCurrentSnapshotId();\n        if (_lastSnapshotId(snapshots.ids) < currentId) {\n            snapshots.ids.push(currentId);\n            snapshots.values.push(currentValue);\n        }\n    }\n\n    function _lastSnapshotId(uint256[] storage ids) private view returns (uint256) {\n        if (ids.length == 0) {\n            return 0;\n        } else {\n            return ids[ids.length - 1];\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[46] private __gap;\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (utils/Arrays.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./StorageSlotUpgradeable.sol\";\nimport \"./math/MathUpgradeable.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary ArraysUpgradeable {\n    using StorageSlotUpgradeable for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        if (array.length == 0) {\n            return 0;\n        }\n\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        while (low < high) {\n            uint256 mid = MathUpgradeable.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds down (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlotUpgradeable.AddressSlot storage) {\n        bytes32 slot;\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlotUpgradeable.Bytes32Slot storage) {\n        bytes32 slot;\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlotUpgradeable.Uint256Slot storage) {\n        bytes32 slot;\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary CountersUpgradeable {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Emitted when the beacon is upgraded.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\n        require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0-rc.1) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeTo(address newImplementation) external virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"contracts/manilla.sol":{"content":"/**\n *Submitted for verification at BscScan.com on 2023-06-09\n*/\n\n// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.4;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Manilla is IERC20, IERC20Metadata, Context, Ownable{\n    mapping(address => uint256) private _balances;\n    mapping(address => mapping(address => uint256)) private _allowances;\n    uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *   \n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_, uint256 amount_, address adminAccount_) {\n        require(adminAccount_ != address(0));\n        require(amount_ == 1 * 1E9 * 1E18, \"amount to be minted exceeds 1 billion\");\n        _name = name_;\n        _symbol = symbol_;\n        _mint(adminAccount_, amount_);\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n        _beforeTokenTransfer(address(0), account, amount);\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:175:30:\n    |\n175 |     ) internal view returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":6786,"file":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","start":6774},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:198:30:\n    |\n198 |     ) internal pure returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":7601,"file":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","start":7589},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[229],"Ownable":[104]},"id":105,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":105,"sourceUnit":230,"src":"112:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":229,"src":"668:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"668:7:0"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"144:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":104,"linearizedBaseContracts":[104,229],"name":"Ownable","nameLocation":"657:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"698:6:0","nodeType":"VariableDeclaration","scope":104,"src":"682:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"717:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"754:13:0","nodeType":"VariableDeclaration","scope":13,"src":"738:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"785:8:0","nodeType":"VariableDeclaration","scope":13,"src":"769:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"769:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"737:57:0"},"src":"711:84:0"},{"body":{"id":22,"nodeType":"Block","src":"911:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"940:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"940:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"921:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"921:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"921:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"801:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"908:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"911:0:0"},"scope":104,"src":"897:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":31,"nodeType":"Block","src":"1091:30:0","statements":[{"expression":{"id":29,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1108:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":28,"id":30,"nodeType":"Return","src":"1101:13:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"966:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":32,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1045:5:0","nodeType":"FunctionDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1050:2:0"},"returnParameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":32,"src":"1082:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1081:9:0"},"scope":104,"src":"1036:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":45,"nodeType":"Block","src":"1230:96:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":36,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"1248:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1248:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":38,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"1259:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1259:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1248:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":41,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1273:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":35,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1240:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1240:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43,"nodeType":"ExpressionStatement","src":"1240:68:0"},{"id":44,"nodeType":"PlaceholderStatement","src":"1318:1:0"}]},"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"1127:77:0","text":" @dev Throws if called by any account other than the owner."},"id":46,"name":"onlyOwner","nameLocation":"1218:9:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"1227:2:0"},"src":"1209:117:0","virtual":false,"visibility":"internal"},{"body":{"id":59,"nodeType":"Block","src":"1722:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1751:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"1751:7:0","typeDescriptions":{}}},"id":56,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1751:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":52,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"1732:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1732:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":58,"nodeType":"ExpressionStatement","src":"1732:30:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1332:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":60,"implemented":true,"kind":"function","modifiers":[{"id":50,"kind":"modifierInvocation","modifierName":{"id":49,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1712:9:0"},"nodeType":"ModifierInvocation","src":"1712:9:0"}],"name":"renounceOwnership","nameLocation":"1677:17:0","nodeType":"FunctionDefinition","parameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1694:2:0"},"returnParameters":{"id":51,"nodeType":"ParameterList","parameters":[],"src":"1722:0:0"},"scope":104,"src":"1668:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":82,"nodeType":"Block","src":"1988:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":69,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"2006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":72,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2026:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":71,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2018:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:0","typeDescriptions":{}}},"id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2018:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2030:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":68,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1998:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1998:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":77,"nodeType":"ExpressionStatement","src":"1998:73:0"},{"expression":{"arguments":[{"id":79,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"2100:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":78,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"2081:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2081:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"ExpressionStatement","src":"2081:28:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1775:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":83,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1978:9:0"},"nodeType":"ModifierInvocation","src":"1978:9:0"}],"name":"transferOwnership","nameLocation":"1927:17:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"newOwner","nameLocation":"1953:8:0","nodeType":"VariableDeclaration","scope":83,"src":"1945:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"1945:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1944:18:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"1988:0:0"},"scope":104,"src":"1918:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":102,"nodeType":"Block","src":"2333:124:0","statements":[{"assignments":[90],"declarations":[{"constant":false,"id":90,"mutability":"mutable","name":"oldOwner","nameLocation":"2351:8:0","nodeType":"VariableDeclaration","scope":102,"src":"2343:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":92,"initialValue":{"id":91,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2362:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2343:25:0"},{"expression":{"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":93,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2378:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":94,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2387:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2378:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":96,"nodeType":"ExpressionStatement","src":"2378:17:0"},{"eventCall":{"arguments":[{"id":98,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2431:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":99,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2441:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":97,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2410:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2410:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":101,"nodeType":"EmitStatement","src":"2405:45:0"}]},"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"2122:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":103,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2279:18:0","nodeType":"FunctionDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"newOwner","nameLocation":"2306:8:0","nodeType":"VariableDeclaration","scope":103,"src":"2298:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"2298:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2297:18:0"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"2333:0:0"},"scope":104,"src":"2270:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":105,"src":"639:1820:0","usedErrors":[]}],"src":"87:2373:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[182]},"id":183,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":106,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":182,"linearizedBaseContracts":[182],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":116,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":116,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":112,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":116,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":114,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":116,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":113,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":125,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":125,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":121,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":125,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":123,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":125,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":131,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":131,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":182,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":139,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":139,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":139,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":182,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":149,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":149,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":144,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":149,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":149,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":146,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":182,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":159,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":159,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":159,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":182,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":169,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":169,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":169,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":169,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":166,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":182,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":181,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"from","nameLocation":"2685:4:1","nodeType":"VariableDeclaration","scope":181,"src":"2677:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"to","nameLocation":"2707:2:1","nodeType":"VariableDeclaration","scope":181,"src":"2699:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"amount","nameLocation":"2727:6:1","nodeType":"VariableDeclaration","scope":181,"src":"2719:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:1"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":181,"src":"2758:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":178,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:1"},"scope":182,"src":"2646:118:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":183,"src":"202:2564:1","usedErrors":[]}],"src":"106:2661:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[182],"IERC20Metadata":[207]},"id":208,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":184,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":208,"sourceUnit":183,"src":"135:23:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":187,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":182,"src":"305:6:2"},"id":188,"nodeType":"InheritanceSpecifier","src":"305:6:2"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":186,"nodeType":"StructuredDocumentation","src":"160:116:2","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":207,"linearizedBaseContracts":[207,182],"name":"IERC20Metadata","nameLocation":"287:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"318:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":194,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:2","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"390:2:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":194,"src":"416:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:2"},"scope":207,"src":"377:54:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"437:56:2","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":200,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:2","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"513:2:2"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":200,"src":"539:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":197,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:2"},"scope":207,"src":"498:56:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"560:65:2","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:2","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"647:2:2"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"673:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":203,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:2"},"scope":207,"src":"630:50:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":208,"src":"277:405:2","usedErrors":[]}],"src":"110:573:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[229]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":209,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:3"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"111:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":229,"linearizedBaseContracts":[229],"name":"Context","nameLocation":"626:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":218,"nodeType":"Block","src":"702:34:3","statements":[{"expression":{"expression":{"id":215,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":214,"id":217,"nodeType":"Return","src":"712:17:3"}]},"id":219,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:3","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"659:2:3"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":219,"src":"693:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:3"},"scope":229,"src":"640:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":227,"nodeType":"Block","src":"809:32:3","statements":[{"expression":{"expression":{"id":224,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":223,"id":226,"nodeType":"Return","src":"819:15:3"}]},"id":228,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:3","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"759:2:3"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"793:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":221,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:3"},"scope":229,"src":"742:99:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":230,"src":"608:235:3","usedErrors":[]}],"src":"86:758:3"},"id":3},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2593],"ContextUpgradeable":[2791],"Initializable":[919],"OwnableUpgradeable":[361]},"id":362,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:4"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":232,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":362,"sourceUnit":2792,"src":"127:41:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":362,"sourceUnit":920,"src":"169:42:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":235,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":919,"src":"748:13:4"},"id":236,"nodeType":"InheritanceSpecifier","src":"748:13:4"},{"baseName":{"id":237,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2791,"src":"763:18:4"},"id":238,"nodeType":"InheritanceSpecifier","src":"763:18:4"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"213:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":361,"linearizedBaseContracts":[361,2791,919],"name":"OwnableUpgradeable","nameLocation":"726:18:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":240,"mutability":"mutable","name":"_owner","nameLocation":"804:6:4","nodeType":"VariableDeclaration","scope":361,"src":"788:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":246,"name":"OwnershipTransferred","nameLocation":"823:20:4","nodeType":"EventDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:4","nodeType":"VariableDeclaration","scope":246,"src":"844:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":244,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:4","nodeType":"VariableDeclaration","scope":246,"src":"875:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:4"},"src":"817:84:4"},{"body":{"id":255,"nodeType":"Block","src":"1055:43:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":252,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"1065:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1065:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":254,"nodeType":"ExpressionStatement","src":"1065:26:4"}]},"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"907:91:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":256,"implemented":true,"kind":"function","modifiers":[{"id":250,"kind":"modifierInvocation","modifierName":{"id":249,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"1038:16:4"},"nodeType":"ModifierInvocation","src":"1038:16:4"}],"name":"__Ownable_init","nameLocation":"1012:14:4","nodeType":"FunctionDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"1026:2:4"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"1055:0:4"},"scope":361,"src":"1003:95:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":266,"nodeType":"Block","src":"1166:49:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":262,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"1195:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1195:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":261,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"1176:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1176:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":265,"nodeType":"ExpressionStatement","src":"1176:32:4"}]},"id":267,"implemented":true,"kind":"function","modifiers":[{"id":259,"kind":"modifierInvocation","modifierName":{"id":258,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"1149:16:4"},"nodeType":"ModifierInvocation","src":"1149:16:4"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:4","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"1137:2:4"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"1166:0:4"},"scope":361,"src":"1104:111:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":274,"nodeType":"Block","src":"1324:41:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":270,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"1334:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1334:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":272,"nodeType":"ExpressionStatement","src":"1334:13:4"},{"id":273,"nodeType":"PlaceholderStatement","src":"1357:1:4"}]},"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"1221:77:4","text":" @dev Throws if called by any account other than the owner."},"id":275,"name":"onlyOwner","nameLocation":"1312:9:4","nodeType":"ModifierDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[],"src":"1321:2:4"},"src":"1303:62:4","virtual":false,"visibility":"internal"},{"body":{"id":283,"nodeType":"Block","src":"1496:30:4","statements":[{"expression":{"id":281,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"1513:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":280,"id":282,"nodeType":"Return","src":"1506:13:4"}]},"documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"1371:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":284,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:4","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[],"src":"1455:2:4"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":284,"src":"1487:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:4"},"scope":361,"src":"1441:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":297,"nodeType":"Block","src":"1644:85:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":289,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1662:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1662:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":291,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"1673:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1673:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":288,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1654:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":296,"nodeType":"ExpressionStatement","src":"1654:68:4"}]},"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"1532:62:4","text":" @dev Throws if the sender is not the owner."},"id":298,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:4","nodeType":"FunctionDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"1619:2:4"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[],"src":"1644:0:4"},"scope":361,"src":"1599:130:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":311,"nodeType":"Block","src":"2125:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2162:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2154:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:4","typeDescriptions":{}}},"id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"2135:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2135:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"ExpressionStatement","src":"2135:30:4"}]},"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"1735:331:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":312,"implemented":true,"kind":"function","modifiers":[{"id":302,"kind":"modifierInvocation","modifierName":{"id":301,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":275,"src":"2115:9:4"},"nodeType":"ModifierInvocation","src":"2115:9:4"}],"name":"renounceOwnership","nameLocation":"2080:17:4","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[],"src":"2097:2:4"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[],"src":"2125:0:4"},"scope":361,"src":"2071:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":334,"nodeType":"Block","src":"2391:128:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":321,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2409:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2421:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:4","typeDescriptions":{}}},"id":325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2421:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2433:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":320,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2401:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":329,"nodeType":"ExpressionStatement","src":"2401:73:4"},{"expression":{"arguments":[{"id":331,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2503:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":330,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"2484:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2484:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"2484:28:4"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"2178:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":335,"implemented":true,"kind":"function","modifiers":[{"id":318,"kind":"modifierInvocation","modifierName":{"id":317,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":275,"src":"2381:9:4"},"nodeType":"ModifierInvocation","src":"2381:9:4"}],"name":"transferOwnership","nameLocation":"2330:17:4","nodeType":"FunctionDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"newOwner","nameLocation":"2356:8:4","nodeType":"VariableDeclaration","scope":335,"src":"2348:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"2348:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2347:18:4"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"2391:0:4"},"scope":361,"src":"2321:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":354,"nodeType":"Block","src":"2736:124:4","statements":[{"assignments":[342],"declarations":[{"constant":false,"id":342,"mutability":"mutable","name":"oldOwner","nameLocation":"2754:8:4","nodeType":"VariableDeclaration","scope":354,"src":"2746:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"2746:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":344,"initialValue":{"id":343,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"2765:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2746:25:4"},{"expression":{"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":345,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"2781:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":346,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"2790:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2781:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":348,"nodeType":"ExpressionStatement","src":"2781:17:4"},{"eventCall":{"arguments":[{"id":350,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2834:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":351,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"2844:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":349,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2813:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2813:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":353,"nodeType":"EmitStatement","src":"2808:45:4"}]},"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"2525:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":355,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2682:18:4","nodeType":"FunctionDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"newOwner","nameLocation":"2709:8:4","nodeType":"VariableDeclaration","scope":355,"src":"2701:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2700:18:4"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[],"src":"2736:0:4"},"scope":361,"src":"2673:187:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"2866:254:4","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":360,"mutability":"mutable","name":"__gap","nameLocation":"3145:5:4","nodeType":"VariableDeclaration","scope":361,"src":"3125:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":359,"length":{"hexValue":"3439","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3133:2:4","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3125:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":362,"src":"708:2445:4","usedErrors":[]}],"src":"102:3052:4"},"id":4},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[371]},"id":372,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":363,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"138:203:5","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":371,"linearizedBaseContracts":[371],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"387:438:5","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:5","nodeType":"FunctionDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"852:2:5"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"878:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:5"},"scope":371,"src":"830:57:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":372,"src":"342:547:5","usedErrors":[]}],"src":"113:777:5"},"id":5},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2593],"ERC1967UpgradeUpgradeable":[740],"IBeaconUpgradeable":[750],"IERC1822ProxiableUpgradeable":[371],"Initializable":[919],"StorageSlotUpgradeable":[2925]},"id":741,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":373,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:6"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":374,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":741,"sourceUnit":751,"src":"141:42:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":375,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":741,"sourceUnit":372,"src":"184:56:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":376,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":741,"sourceUnit":2594,"src":"241:44:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":377,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":741,"sourceUnit":2926,"src":"286:48:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":741,"sourceUnit":920,"src":"335:36:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":380,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":919,"src":"657:13:6"},"id":381,"nodeType":"InheritanceSpecifier","src":"657:13:6"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"373:236:6","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"},"fullyImplemented":true,"id":740,"linearizedBaseContracts":[740,919],"name":"ERC1967UpgradeUpgradeable","nameLocation":"628:25:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":386,"nodeType":"Block","src":"736:7:6","statements":[]},"id":387,"implemented":true,"kind":"function","modifiers":[{"id":384,"kind":"modifierInvocation","modifierName":{"id":383,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"719:16:6"},"nodeType":"ModifierInvocation","src":"719:16:6"}],"name":"__ERC1967Upgrade_init","nameLocation":"686:21:6","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"707:2:6"},"returnParameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"736:0:6"},"scope":740,"src":"677:66:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":392,"nodeType":"Block","src":"818:7:6","statements":[]},"id":393,"implemented":true,"kind":"function","modifiers":[{"id":390,"kind":"modifierInvocation","modifierName":{"id":389,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"801:16:6"},"nodeType":"ModifierInvocation","src":"801:16:6"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"758:31:6","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"789:2:6"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"818:0:6"},"scope":740,"src":"749:76:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":396,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"934:14:6","nodeType":"VariableDeclaration","scope":740,"src":"909:108:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"909:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:66:6","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"1024:214:6","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":400,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1269:20:6","nodeType":"VariableDeclaration","scope":740,"src":"1243:115:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1243:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1292:66:6","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"1365:68:6","text":" @dev Emitted when the implementation is upgraded."},"id":405,"name":"Upgraded","nameLocation":"1444:8:6","nodeType":"EventDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"1469:14:6","nodeType":"VariableDeclaration","scope":405,"src":"1453:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"1453:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1452:32:6"},"src":"1438:47:6"},{"body":{"id":417,"nodeType":"Block","src":"1625:89:6","statements":[{"expression":{"expression":{"arguments":[{"id":413,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"1680:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":411,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"1642:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2925_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"1642:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2871_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1642:59:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2871_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2870,"src":"1642:65:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":410,"id":416,"nodeType":"Return","src":"1635:72:6"}]},"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"1491:67:6","text":" @dev Returns the current implementation address."},"id":418,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1572:18:6","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[],"src":"1590:2:6"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":418,"src":"1616:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:9:6"},"scope":740,"src":"1563:151:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"1868:218:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":427,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"1916:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":425,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"1886:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2593_$","typeString":"type(library AddressUpgradeable)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"1886:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1886:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1936:47:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1878:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1878:106:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"ExpressionStatement","src":"1878:106:6"},{"expression":{"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":435,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2032:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":432,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"1994:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2925_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"1994:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2871_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1994:59:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2871_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2870,"src":"1994:65:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":438,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"2062:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1994:85:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":440,"nodeType":"ExpressionStatement","src":"1994:85:6"}]},"documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"1720:80:6","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1814:18:6","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"newImplementation","nameLocation":"1841:17:6","nodeType":"VariableDeclaration","scope":442,"src":"1833:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"1833:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1832:27:6"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"1868:0:6"},"scope":740,"src":"1805:281:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":456,"nodeType":"Block","src":"2248:96:6","statements":[{"expression":{"arguments":[{"id":449,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2277:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":448,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"2258:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2258:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"ExpressionStatement","src":"2258:37:6"},{"eventCall":{"arguments":[{"id":453,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2319:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":452,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2310:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2310:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"EmitStatement","src":"2305:32:6"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"2092:95:6","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":457,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2201:10:6","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"newImplementation","nameLocation":"2220:17:6","nodeType":"VariableDeclaration","scope":457,"src":"2212:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2211:27:6"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"2248:0:6"},"scope":740,"src":"2192:152:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":484,"nodeType":"Block","src":"2606:160:6","statements":[{"expression":{"arguments":[{"id":468,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2627:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":467,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2616:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2616:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":470,"nodeType":"ExpressionStatement","src":"2616:29:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":471,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"2659:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2659:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2673:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2659:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":475,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2678:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2659:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":483,"nodeType":"IfStatement","src":"2655:105:6","trueBody":{"id":482,"nodeType":"Block","src":"2689:71:6","statements":[{"expression":{"arguments":[{"id":478,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2725:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":479,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"2744:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":477,"name":"_functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"2703:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2703:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":481,"nodeType":"ExpressionStatement","src":"2703:46:6"}]}}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"2350:123:6","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":485,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2487:17:6","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"newImplementation","nameLocation":"2522:17:6","nodeType":"VariableDeclaration","scope":485,"src":"2514:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"2514:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"data","nameLocation":"2562:4:6","nodeType":"VariableDeclaration","scope":485,"src":"2549:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"2549:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"forceCall","nameLocation":"2581:9:6","nodeType":"VariableDeclaration","scope":485,"src":"2576:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":463,"name":"bool","nodeType":"ElementaryTypeName","src":"2576:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2504:92:6"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"2606:0:6"},"scope":740,"src":"2478:288:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":537,"nodeType":"Block","src":"3070:842:6","statements":[{"condition":{"expression":{"arguments":[{"id":497,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3422:14:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":495,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"3384:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2925_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":2902,"src":"3384:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$2874_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3384:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2874_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2873,"src":"3384:59:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":535,"nodeType":"Block","src":"3513:393:6","statements":[{"clauses":[{"block":{"id":520,"nodeType":"Block","src":"3618:115:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":514,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3644:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":515,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3652:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3644:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3674:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":513,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3636:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3636:82:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"ExpressionStatement","src":"3636:82:6"}]},"errorName":"","id":521,"nodeType":"TryCatchClause","parameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"slot","nameLocation":"3612:4:6","nodeType":"VariableDeclaration","scope":521,"src":"3604:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3604:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3603:14:6"},"src":"3595:138:6"},{"block":{"id":526,"nodeType":"Block","src":"3740:89:6","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3765:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":522,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3758:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3758:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"ExpressionStatement","src":"3758:56:6"}]},"errorName":"","id":527,"nodeType":"TryCatchClause","src":"3734:95:6"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":506,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"3560:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"3531:28:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$371_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3531:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$371","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":370,"src":"3531:61:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3531:63:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":528,"nodeType":"TryStatement","src":"3527:302:6"},{"expression":{"arguments":[{"id":530,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"3860:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3879:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":532,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3885:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":529,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3842:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3842:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":534,"nodeType":"ExpressionStatement","src":"3842:53:6"}]},"id":536,"nodeType":"IfStatement","src":"3380:526:6","trueBody":{"id":504,"nodeType":"Block","src":"3445:62:6","statements":[{"expression":{"arguments":[{"id":501,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"3478:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"3459:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3459:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"3459:37:6"}]}}]},"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"2772:161:6","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":538,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2947:21:6","nodeType":"FunctionDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"newImplementation","nameLocation":"2986:17:6","nodeType":"VariableDeclaration","scope":538,"src":"2978:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"2978:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":490,"mutability":"mutable","name":"data","nameLocation":"3026:4:6","nodeType":"VariableDeclaration","scope":538,"src":"3013:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":489,"name":"bytes","nodeType":"ElementaryTypeName","src":"3013:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":492,"mutability":"mutable","name":"forceCall","nameLocation":"3045:9:6","nodeType":"VariableDeclaration","scope":538,"src":"3040:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":491,"name":"bool","nodeType":"ElementaryTypeName","src":"3040:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2968:92:6"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[],"src":"3070:0:6"},"scope":740,"src":"2938:974:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"3918:189:6","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":542,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"4138:11:6","nodeType":"VariableDeclaration","scope":740,"src":"4112:106:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4112:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4152:66:6","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"4225:67:6","text":" @dev Emitted when the admin account has changed."},"id":549,"name":"AdminChanged","nameLocation":"4303:12:6","nodeType":"EventDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"4324:13:6","nodeType":"VariableDeclaration","scope":549,"src":"4316:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4316:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"4347:8:6","nodeType":"VariableDeclaration","scope":549,"src":"4339:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"4339:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4315:41:6"},"src":"4297:60:6"},{"body":{"id":561,"nodeType":"Block","src":"4471:80:6","statements":[{"expression":{"expression":{"arguments":[{"id":557,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"4526:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":555,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"4488:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2925_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"4488:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2871_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4488:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2871_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2870,"src":"4488:56:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":554,"id":560,"nodeType":"Return","src":"4481:63:6"}]},"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"4363:50:6","text":" @dev Returns the current admin."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4427:9:6","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[],"src":"4436:2:6"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":562,"src":"4462:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"4462:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4461:9:6"},"scope":740,"src":"4418:133:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"4678:167:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"4696:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4716:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4708:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"4708:7:6","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4708:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4696:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4720:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4688:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4688:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"ExpressionStatement","src":"4688:73:6"},{"expression":{"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":581,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"4809:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":578,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"4771:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2925_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"4771:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2871_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4771:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2871_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2870,"src":"4771:56:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":584,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"4830:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4771:67:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":586,"nodeType":"ExpressionStatement","src":"4771:67:6"}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4557:71:6","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4642:9:6","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"newAdmin","nameLocation":"4660:8:6","nodeType":"VariableDeclaration","scope":588,"src":"4652:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4651:18:6"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[],"src":"4678:0:6"},"scope":740,"src":"4633:212:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":604,"nodeType":"Block","src":"5005:86:6","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":595,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"5033:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5033:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":597,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"5046:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":594,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"5020:12:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5020:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":599,"nodeType":"EmitStatement","src":"5015:40:6"},{"expression":{"arguments":[{"id":601,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"5075:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":600,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"5065:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5065:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":603,"nodeType":"ExpressionStatement","src":"5065:19:6"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"4851:100:6","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":605,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4965:12:6","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"newAdmin","nameLocation":"4986:8:6","nodeType":"VariableDeclaration","scope":605,"src":"4978:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"4978:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4977:18:6"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"5005:0:6"},"scope":740,"src":"4956:135:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"5097:232:6","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":609,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5360:12:6","nodeType":"VariableDeclaration","scope":740,"src":"5334:107:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5334:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5375:66:6","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":610,"nodeType":"StructuredDocumentation","src":"5448:60:6","text":" @dev Emitted when the beacon is upgraded."},"id":614,"name":"BeaconUpgraded","nameLocation":"5519:14:6","nodeType":"EventDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"5550:6:6","nodeType":"VariableDeclaration","scope":614,"src":"5534:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"5534:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5533:24:6"},"src":"5513:45:6"},{"body":{"id":626,"nodeType":"Block","src":"5674:81:6","statements":[{"expression":{"expression":{"arguments":[{"id":622,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"5729:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":620,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"5691:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2925_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"5691:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2871_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5691:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2871_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2870,"src":"5691:57:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":619,"id":625,"nodeType":"Return","src":"5684:64:6"}]},"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"5564:51:6","text":" @dev Returns the current beacon."},"id":627,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5629:10:6","nodeType":"FunctionDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[],"src":"5639:2:6"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":627,"src":"5665:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"5665:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5664:9:6"},"scope":740,"src":"5620:135:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":662,"nodeType":"Block","src":"5884:368:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":636,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"5932:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":634,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"5902:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2593_$","typeString":"type(library AddressUpgradeable)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"5902:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5902:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5944:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5894:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5894:90:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":640,"nodeType":"ExpressionStatement","src":"5894:90:6"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":645,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"6064:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":644,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"6045:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$750_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6045:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$750","typeString":"contract IBeaconUpgradeable"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":749,"src":"6045:44:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6045:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":642,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"6015:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2593_$","typeString":"type(library AddressUpgradeable)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"6015:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6015:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6106:50:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":641,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5994:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5994:172:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"5994:172:6"},{"expression":{"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":656,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"6214:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":653,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"6176:22:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2925_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"6176:37:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2871_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6176:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2871_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2870,"src":"6176:57:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":659,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"6236:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6176:69:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":661,"nodeType":"ExpressionStatement","src":"6176:69:6"}]},"documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"5761:71:6","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":663,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5846:10:6","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"newBeacon","nameLocation":"5865:9:6","nodeType":"VariableDeclaration","scope":663,"src":"5857:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"5857:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5856:19:6"},"returnParameters":{"id":632,"nodeType":"ParameterList","parameters":[],"src":"5884:0:6"},"scope":740,"src":"5837:415:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":698,"nodeType":"Block","src":"6681:221:6","statements":[{"expression":{"arguments":[{"id":674,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6702:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":673,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"6691:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6691:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"ExpressionStatement","src":"6691:21:6"},{"eventCall":{"arguments":[{"id":678,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6742:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":677,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6727:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6727:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"EmitStatement","src":"6722:30:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":681,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6766:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6766:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6780:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6766:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":685,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"6785:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6766:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":697,"nodeType":"IfStatement","src":"6762:134:6","trueBody":{"id":696,"nodeType":"Block","src":"6796:100:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":689,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6851:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":688,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"6832:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$750_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6832:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$750","typeString":"contract IBeaconUpgradeable"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":749,"src":"6832:44:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6832:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6880:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":687,"name":"_functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"6810:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6810:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":695,"nodeType":"ExpressionStatement","src":"6810:75:6"}]}}]},"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"6258:292:6","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":699,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6564:23:6","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"newBeacon","nameLocation":"6605:9:6","nodeType":"VariableDeclaration","scope":699,"src":"6597:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"6597:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"data","nameLocation":"6637:4:6","nodeType":"VariableDeclaration","scope":699,"src":"6624:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":667,"name":"bytes","nodeType":"ElementaryTypeName","src":"6624:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"forceCall","nameLocation":"6656:9:6","nodeType":"VariableDeclaration","scope":699,"src":"6651:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":669,"name":"bool","nodeType":"ElementaryTypeName","src":"6651:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6587:84:6"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"6681:0:6"},"scope":740,"src":"6555:347:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":733,"nodeType":"Block","src":"7185:358:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":712,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"7233:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":710,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"7203:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2593_$","typeString":"type(library AddressUpgradeable)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"7203:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7203:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7242:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7195:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7195:88:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"ExpressionStatement","src":"7195:88:6"},{"assignments":[718,720],"declarations":[{"constant":false,"id":718,"mutability":"mutable","name":"success","nameLocation":"7359:7:6","nodeType":"VariableDeclaration","scope":733,"src":"7354:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":717,"name":"bool","nodeType":"ElementaryTypeName","src":"7354:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"returndata","nameLocation":"7381:10:6","nodeType":"VariableDeclaration","scope":733,"src":"7368:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":719,"name":"bytes","nodeType":"ElementaryTypeName","src":"7368:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":725,"initialValue":{"arguments":[{"id":723,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"7415:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":721,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"7395:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7395:19:6","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7395:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7353:67:6"},{"expression":{"arguments":[{"id":728,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7473:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":729,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"7482:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7494:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"expression":{"id":726,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"7437:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2593_$","typeString":"type(library AddressUpgradeable)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":2572,"src":"7437:35:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7437:99:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":708,"id":732,"nodeType":"Return","src":"7430:106:6"}]},"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"6908:175:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":734,"implemented":true,"kind":"function","modifiers":[],"name":"_functionDelegateCall","nameLocation":"7097:21:6","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"target","nameLocation":"7127:6:6","nodeType":"VariableDeclaration","scope":734,"src":"7119:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"7119:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"data","nameLocation":"7148:4:6","nodeType":"VariableDeclaration","scope":734,"src":"7135:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":703,"name":"bytes","nodeType":"ElementaryTypeName","src":"7135:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7118:35:6"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"7171:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":706,"name":"bytes","nodeType":"ElementaryTypeName","src":"7171:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7170:14:6"},"scope":740,"src":"7088:455:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"7549:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":739,"mutability":"mutable","name":"__gap","nameLocation":"7828:5:6","nodeType":"VariableDeclaration","scope":740,"src":"7808:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"7808:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":738,"length":{"hexValue":"3530","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"7808:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":741,"src":"610:7226:6","usedErrors":[]}],"src":"116:7721:6"},"id":6},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[750]},"id":751,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":742,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"118:79:7","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":750,"linearizedBaseContracts":[750],"name":"IBeaconUpgradeable","nameLocation":"208:18:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":744,"nodeType":"StructuredDocumentation","src":"233:162:7","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":749,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:7","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[],"src":"423:2:7"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":749,"src":"449:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:7"},"scope":750,"src":"400:58:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":751,"src":"198:262:7","usedErrors":[]}],"src":"93:368:7"},"id":7},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[2593],"Initializable":[919]},"id":920,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":752,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"118:23:8"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":920,"sourceUnit":2594,"src":"143:44:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"189:2198:8","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":919,"linearizedBaseContracts":[919],"name":"Initializable","nameLocation":"2406:13:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"2426:109:8","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":757,"mutability":"mutable","name":"_initialized","nameLocation":"2554:12:8","nodeType":"VariableDeclaration","scope":919,"src":"2540:26:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":756,"name":"uint8","nodeType":"ElementaryTypeName","src":"2540:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"2573:91:8","text":" @dev Indicates that the contract is in the process of being initialized."},"id":760,"mutability":"mutable","name":"_initializing","nameLocation":"2682:13:8","nodeType":"VariableDeclaration","scope":919,"src":"2669:26:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":759,"name":"bool","nodeType":"ElementaryTypeName","src":"2669:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"2702:90:8","text":" @dev Triggered when the contract has been initialized or reinitialized."},"id":765,"name":"Initialized","nameLocation":"2803:11:8","nodeType":"EventDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2821:7:8","nodeType":"VariableDeclaration","scope":765,"src":"2815:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":762,"name":"uint8","nodeType":"ElementaryTypeName","src":"2815:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2814:15:8"},"src":"2797:33:8"},{"body":{"id":820,"nodeType":"Block","src":"3263:483:8","statements":[{"assignments":[769],"declarations":[{"constant":false,"id":769,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3278:14:8","nodeType":"VariableDeclaration","scope":820,"src":"3273:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":768,"name":"bool","nodeType":"ElementaryTypeName","src":"3273:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":772,"initialValue":{"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3295:14:8","subExpression":{"id":770,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3296:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3273:36:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"3341:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":775,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"3359:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3359:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3341:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3340:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3381:45:8","subExpression":{"arguments":[{"arguments":[{"id":784,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3420:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$919","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$919","typeString":"contract Initializable"}],"id":783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3412:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"3412:7:8","typeDescriptions":{}}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3412:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":780,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"3382:18:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2593_$","typeString":"type(library AddressUpgradeable)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"3382:29:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3382:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"3430:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3446:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3430:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3381:66:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3380:68:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3340:108:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3462:48:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":773,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3319:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3319:201:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"ExpressionStatement","src":"3319:201:8"},{"expression":{"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":797,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"3530:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3545:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3530:16:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":800,"nodeType":"ExpressionStatement","src":"3530:16:8"},{"condition":{"id":801,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"3560:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":807,"nodeType":"IfStatement","src":"3556:65:8","trueBody":{"id":806,"nodeType":"Block","src":"3576:45:8","statements":[{"expression":{"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":802,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3590:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3606:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3590:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":805,"nodeType":"ExpressionStatement","src":"3590:20:8"}]}},{"id":808,"nodeType":"PlaceholderStatement","src":"3630:1:8"},{"condition":{"id":809,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"3645:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":819,"nodeType":"IfStatement","src":"3641:99:8","trueBody":{"id":818,"nodeType":"Block","src":"3661:79:8","statements":[{"expression":{"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":810,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3675:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3691:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3675:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":813,"nodeType":"ExpressionStatement","src":"3675:21:8"},{"eventCall":{"arguments":[{"hexValue":"31","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3727:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":814,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"3715:11:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3715:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"EmitStatement","src":"3710:19:8"}]}}]},"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"2836:399:8","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":821,"name":"initializer","nameLocation":"3249:11:8","nodeType":"ModifierDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"3260:2:8"},"src":"3240:506:8","virtual":false,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"4857:255:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4875:14:8","subExpression":{"id":827,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"4876:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":829,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"4893:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":830,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"4908:7:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4893:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4875:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4917:48:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":826,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4867:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4867:99:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":835,"nodeType":"ExpressionStatement","src":"4867:99:8"},{"expression":{"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":836,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"4976:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":837,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"4991:7:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4976:22:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":839,"nodeType":"ExpressionStatement","src":"4976:22:8"},{"expression":{"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":840,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"5008:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5024:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5008:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":843,"nodeType":"ExpressionStatement","src":"5008:20:8"},{"id":844,"nodeType":"PlaceholderStatement","src":"5038:1:8"},{"expression":{"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":845,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"5049:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5065:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5049:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":848,"nodeType":"ExpressionStatement","src":"5049:21:8"},{"eventCall":{"arguments":[{"id":850,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"5097:7:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":849,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"5085:11:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5085:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"EmitStatement","src":"5080:25:8"}]},"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"3752:1062:8","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":854,"name":"reinitializer","nameLocation":"4828:13:8","nodeType":"ModifierDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"version","nameLocation":"4848:7:8","nodeType":"VariableDeclaration","scope":854,"src":"4842:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":823,"name":"uint8","nodeType":"ElementaryTypeName","src":"4842:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4841:15:8"},"src":"4819:293:8","virtual":false,"visibility":"internal"},{"body":{"id":863,"nodeType":"Block","src":"5350:97:8","statements":[{"expression":{"arguments":[{"id":858,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"5368:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5383:45:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5360:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5360:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"ExpressionStatement","src":"5360:69:8"},{"id":862,"nodeType":"PlaceholderStatement","src":"5439:1:8"}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"5118:199:8","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":864,"name":"onlyInitializing","nameLocation":"5331:16:8","nodeType":"ModifierDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[],"src":"5347:2:8"},"src":"5322:125:8","virtual":false,"visibility":"internal"},{"body":{"id":899,"nodeType":"Block","src":"5982:230:8","statements":[{"expression":{"arguments":[{"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6000:14:8","subExpression":{"id":869,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"6001:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6016:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":868,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5992:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5992:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":873,"nodeType":"ExpressionStatement","src":"5992:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":874,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6072:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6092:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":876,"name":"uint8","nodeType":"ElementaryTypeName","src":"6092:5:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":875,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6087:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6087:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6087:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6072:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":898,"nodeType":"IfStatement","src":"6068:138:8","trueBody":{"id":897,"nodeType":"Block","src":"6104:102:8","statements":[{"expression":{"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":881,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6118:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6138:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":883,"name":"uint8","nodeType":"ElementaryTypeName","src":"6138:5:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":882,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6133:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6133:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6133:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6118:30:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":888,"nodeType":"ExpressionStatement","src":"6118:30:8"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6184:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":891,"name":"uint8","nodeType":"ElementaryTypeName","src":"6184:5:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6179:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6179:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6179:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":889,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"6167:11:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6167:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":896,"nodeType":"EmitStatement","src":"6162:33:8"}]}}]},"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"5453:475:8","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":900,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5942:20:8","nodeType":"FunctionDefinition","parameters":{"id":866,"nodeType":"ParameterList","parameters":[],"src":"5962:2:8"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[],"src":"5982:0:8"},"scope":919,"src":"5933:279:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":908,"nodeType":"Block","src":"6389:36:8","statements":[{"expression":{"id":906,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"6406:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":905,"id":907,"nodeType":"Return","src":"6399:19:8"}]},"documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"6218:102:8","text":" @dev Internal function that returns the initialized version. Returns `_initialized`"},"id":909,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6334:22:8","nodeType":"FunctionDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[],"src":"6356:2:8"},"returnParameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"6382:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":903,"name":"uint8","nodeType":"ElementaryTypeName","src":"6382:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6381:7:8"},"scope":919,"src":"6325:100:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":917,"nodeType":"Block","src":"6595:37:8","statements":[{"expression":{"id":915,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"6612:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":914,"id":916,"nodeType":"Return","src":"6605:20:8"}]},"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"6431:103:8","text":" @dev Internal function that returns the initialized version. Returns `_initializing`"},"id":918,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6548:15:8","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"6563:2:8"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":918,"src":"6589:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":912,"name":"bool","nodeType":"ElementaryTypeName","src":"6589:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6588:6:8"},"scope":919,"src":"6539:93:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":920,"src":"2388:4246:8","usedErrors":[]}],"src":"118:6517:8"},"id":8},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2593],"ERC1967UpgradeUpgradeable":[740],"IBeaconUpgradeable":[750],"IERC1822ProxiableUpgradeable":[371],"Initializable":[919],"StorageSlotUpgradeable":[2925],"UUPSUpgradeable":[1055]},"id":1056,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":921,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"120:23:9"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":922,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1056,"sourceUnit":372,"src":"145:56:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":923,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1056,"sourceUnit":741,"src":"202:50:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":924,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1056,"sourceUnit":920,"src":"253:29:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":926,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":919,"src":"970:13:9"},"id":927,"nodeType":"InheritanceSpecifier","src":"970:13:9"},{"baseName":{"id":928,"name":"IERC1822ProxiableUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":371,"src":"985:28:9"},"id":929,"nodeType":"InheritanceSpecifier","src":"985:28:9"},{"baseName":{"id":930,"name":"ERC1967UpgradeUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":740,"src":"1015:25:9"},"id":931,"nodeType":"InheritanceSpecifier","src":"1015:25:9"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"284:648:9","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":1055,"linearizedBaseContracts":[1055,740,371,919],"name":"UUPSUpgradeable","nameLocation":"951:15:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":936,"nodeType":"Block","src":"1107:7:9","statements":[]},"id":937,"implemented":true,"kind":"function","modifiers":[{"id":934,"kind":"modifierInvocation","modifierName":{"id":933,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"1090:16:9"},"nodeType":"ModifierInvocation","src":"1090:16:9"}],"name":"__UUPSUpgradeable_init","nameLocation":"1056:22:9","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"1078:2:9"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[],"src":"1107:0:9"},"scope":1055,"src":"1047:67:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":942,"nodeType":"Block","src":"1190:7:9","statements":[]},"id":943,"implemented":true,"kind":"function","modifiers":[{"id":940,"kind":"modifierInvocation","modifierName":{"id":939,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"1173:16:9"},"nodeType":"ModifierInvocation","src":"1173:16:9"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"1129:32:9","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"1161:2:9"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[],"src":"1190:0:9"},"scope":1055,"src":"1120:77:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"1202:87:9","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":950,"mutability":"immutable","name":"__self","nameLocation":"1320:6:9","nodeType":"VariableDeclaration","scope":1055,"src":"1294:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"1294:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":948,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1337:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1055","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1055","typeString":"contract UUPSUpgradeable"}],"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1329:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:9","typeDescriptions":{}}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1329:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":972,"nodeType":"Block","src":"1868:205:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":956,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1894:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1055","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1055","typeString":"contract UUPSUpgradeable"}],"id":955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1886:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"1886:7:9","typeDescriptions":{}}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1886:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":958,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"1903:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1886:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1911:46:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":953,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1878:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1878:80:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":962,"nodeType":"ExpressionStatement","src":"1878:80:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":964,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"1976:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1976:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":966,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"2000:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1976:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2008:46:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":963,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1968:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1968:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"ExpressionStatement","src":"1968:87:9"},{"id":971,"nodeType":"PlaceholderStatement","src":"2065:1:9"}]},"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"1349:493:9","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":973,"name":"onlyProxy","nameLocation":"1856:9:9","nodeType":"ModifierDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"1865:2:9"},"src":"1847:226:9","virtual":false,"visibility":"internal"},{"body":{"id":987,"nodeType":"Block","src":"2303:120:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":979,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2329:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1055","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1055","typeString":"contract UUPSUpgradeable"}],"id":978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2321:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"2321:7:9","typeDescriptions":{}}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":981,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"2338:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2321:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2346:58:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":976,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2313:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2313:92:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":985,"nodeType":"ExpressionStatement","src":"2313:92:9"},{"id":986,"nodeType":"PlaceholderStatement","src":"2415:1:9"}]},"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"2079:195:9","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":988,"name":"notDelegated","nameLocation":"2288:12:9","nodeType":"ModifierDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[],"src":"2300:2:9"},"src":"2279:144:9","virtual":false,"visibility":"internal"},{"baseFunctions":[370],"body":{"id":999,"nodeType":"Block","src":"3098:44:9","statements":[{"expression":{"id":997,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3115:20:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":996,"id":998,"nodeType":"Return","src":"3108:27:9"}]},"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"2429:577:9","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":1000,"implemented":true,"kind":"function","modifiers":[{"id":993,"kind":"modifierInvocation","modifierName":{"id":992,"name":"notDelegated","nodeType":"IdentifierPath","referencedDeclaration":988,"src":"3067:12:9"},"nodeType":"ModifierInvocation","src":"3067:12:9"}],"name":"proxiableUUID","nameLocation":"3020:13:9","nodeType":"FunctionDefinition","overrides":{"id":991,"nodeType":"OverrideSpecifier","overrides":[],"src":"3058:8:9"},"parameters":{"id":990,"nodeType":"ParameterList","parameters":[],"src":"3033:2:9"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1000,"src":"3089:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3089:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3088:9:9"},"scope":1055,"src":"3011:131:9","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":1021,"nodeType":"Block","src":"3395:124:9","statements":[{"expression":{"arguments":[{"id":1009,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"3423:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1008,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"3405:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3405:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1011,"nodeType":"ExpressionStatement","src":"3405:36:9"},{"expression":{"arguments":[{"id":1013,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"3473:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3502:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3492:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1014,"name":"bytes","nodeType":"ElementaryTypeName","src":"3496:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3492:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3506:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1012,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"3451:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3451:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1020,"nodeType":"ExpressionStatement","src":"3451:61:9"}]},"documentation":{"id":1001,"nodeType":"StructuredDocumentation","src":"3148:169:9","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"3659cfe6","id":1022,"implemented":true,"kind":"function","modifiers":[{"id":1006,"kind":"modifierInvocation","modifierName":{"id":1005,"name":"onlyProxy","nodeType":"IdentifierPath","referencedDeclaration":973,"src":"3385:9:9"},"nodeType":"ModifierInvocation","src":"3385:9:9"}],"name":"upgradeTo","nameLocation":"3331:9:9","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"newImplementation","nameLocation":"3349:17:9","nodeType":"VariableDeclaration","scope":1022,"src":"3341:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"3341:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3340:27:9"},"returnParameters":{"id":1007,"nodeType":"ParameterList","parameters":[],"src":"3395:0:9"},"scope":1055,"src":"3322:197:9","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":1042,"nodeType":"Block","src":"3875:115:9","statements":[{"expression":{"arguments":[{"id":1033,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"3903:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1032,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"3885:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3885:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1035,"nodeType":"ExpressionStatement","src":"3885:36:9"},{"expression":{"arguments":[{"id":1037,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"3953:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1038,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"3972:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3978:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1036,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"3931:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3931:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"ExpressionStatement","src":"3931:52:9"}]},"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"3525:238:9","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"4f1ef286","id":1043,"implemented":true,"kind":"function","modifiers":[{"id":1030,"kind":"modifierInvocation","modifierName":{"id":1029,"name":"onlyProxy","nodeType":"IdentifierPath","referencedDeclaration":973,"src":"3865:9:9"},"nodeType":"ModifierInvocation","src":"3865:9:9"}],"name":"upgradeToAndCall","nameLocation":"3777:16:9","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"newImplementation","nameLocation":"3802:17:9","nodeType":"VariableDeclaration","scope":1043,"src":"3794:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"3794:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"data","nameLocation":"3834:4:9","nodeType":"VariableDeclaration","scope":1043,"src":"3821:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1026,"name":"bytes","nodeType":"ElementaryTypeName","src":"3821:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3793:46:9"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"3875:0:9"},"scope":1055,"src":"3768:222:9","stateMutability":"payable","virtual":true,"visibility":"external"},{"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"3996:397:9","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":1049,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4407:17:9","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"newImplementation","nameLocation":"4433:17:9","nodeType":"VariableDeclaration","scope":1049,"src":"4425:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"4425:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4424:27:9"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[],"src":"4468:0:9"},"scope":1055,"src":"4398:71:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"4475:254:9","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1054,"mutability":"mutable","name":"__gap","nameLocation":"4754:5:9","nodeType":"VariableDeclaration","scope":1055,"src":"4734:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"4734:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1053,"length":{"hexValue":"3530","id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4742:2:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4734:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1056,"src":"933:3829:9","usedErrors":[]}],"src":"120:4643:9"},"id":9},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2593],"ContextUpgradeable":[2791],"Initializable":[919],"PausableUpgradeable":[1182]},"id":1183,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1057,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:10"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":1058,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1183,"sourceUnit":2792,"src":"130:41:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1059,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1183,"sourceUnit":920,"src":"172:42:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1061,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":919,"src":"697:13:10"},"id":1062,"nodeType":"InheritanceSpecifier","src":"697:13:10"},{"baseName":{"id":1063,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2791,"src":"712:18:10"},"id":1064,"nodeType":"InheritanceSpecifier","src":"712:18:10"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"216:439:10","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1182,"linearizedBaseContracts":[1182,2791,919],"name":"PausableUpgradeable","nameLocation":"674:19:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"737:73:10","text":" @dev Emitted when the pause is triggered by `account`."},"id":1069,"name":"Paused","nameLocation":"821:6:10","nodeType":"EventDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"836:7:10","nodeType":"VariableDeclaration","scope":1069,"src":"828:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"827:17:10"},"src":"815:30:10"},{"anonymous":false,"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"851:70:10","text":" @dev Emitted when the pause is lifted by `account`."},"id":1074,"name":"Unpaused","nameLocation":"932:8:10","nodeType":"EventDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"949:7:10","nodeType":"VariableDeclaration","scope":1074,"src":"941:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"941:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"940:17:10"},"src":"926:32:10"},{"constant":false,"id":1076,"mutability":"mutable","name":"_paused","nameLocation":"977:7:10","nodeType":"VariableDeclaration","scope":1182,"src":"964:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1075,"name":"bool","nodeType":"ElementaryTypeName","src":"964:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":1085,"nodeType":"Block","src":"1116:44:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1082,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"1126:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1126:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"ExpressionStatement","src":"1126:27:10"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"991:67:10","text":" @dev Initializes the contract in unpaused state."},"id":1086,"implemented":true,"kind":"function","modifiers":[{"id":1080,"kind":"modifierInvocation","modifierName":{"id":1079,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"1099:16:10"},"nodeType":"ModifierInvocation","src":"1099:16:10"}],"name":"__Pausable_init","nameLocation":"1072:15:10","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"1087:2:10"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"1116:0:10"},"scope":1182,"src":"1063:97:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1095,"nodeType":"Block","src":"1229:32:10","statements":[{"expression":{"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1091,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"1239:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1249:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1239:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1094,"nodeType":"ExpressionStatement","src":"1239:15:10"}]},"id":1096,"implemented":true,"kind":"function","modifiers":[{"id":1089,"kind":"modifierInvocation","modifierName":{"id":1088,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"1212:16:10"},"nodeType":"ModifierInvocation","src":"1212:16:10"}],"name":"__Pausable_init_unchained","nameLocation":"1175:25:10","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"1200:2:10"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[],"src":"1229:0:10"},"scope":1182,"src":"1166:95:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1103,"nodeType":"Block","src":"1472:47:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1099,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"1482:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1101,"nodeType":"ExpressionStatement","src":"1482:19:10"},{"id":1102,"nodeType":"PlaceholderStatement","src":"1511:1:10"}]},"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"1267:175:10","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1104,"name":"whenNotPaused","nameLocation":"1456:13:10","nodeType":"ModifierDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[],"src":"1469:2:10"},"src":"1447:72:10","virtual":false,"visibility":"internal"},{"body":{"id":1111,"nodeType":"Block","src":"1719:44:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1107,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"1729:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1729:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1109,"nodeType":"ExpressionStatement","src":"1729:16:10"},{"id":1110,"nodeType":"PlaceholderStatement","src":"1755:1:10"}]},"documentation":{"id":1105,"nodeType":"StructuredDocumentation","src":"1525:167:10","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1112,"name":"whenPaused","nameLocation":"1706:10:10","nodeType":"ModifierDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[],"src":"1716:2:10"},"src":"1697:66:10","virtual":false,"visibility":"internal"},{"body":{"id":1120,"nodeType":"Block","src":"1911:31:10","statements":[{"expression":{"id":1118,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"1928:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1117,"id":1119,"nodeType":"Return","src":"1921:14:10"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"1769:84:10","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1867:6:10","nodeType":"FunctionDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"1873:2:10"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1121,"src":"1905:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1115,"name":"bool","nodeType":"ElementaryTypeName","src":"1905:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1904:6:10"},"scope":1182,"src":"1858:84:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1132,"nodeType":"Block","src":"2061:55:10","statements":[{"expression":{"arguments":[{"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2079:9:10","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1126,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"2080:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2080:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2090:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":1125,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2071:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2071:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1131,"nodeType":"ExpressionStatement","src":"2071:38:10"}]},"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"1948:57:10","text":" @dev Throws if the contract is paused."},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2019:17:10","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[],"src":"2036:2:10"},"returnParameters":{"id":1124,"nodeType":"ParameterList","parameters":[],"src":"2061:0:10"},"scope":1182,"src":"2010:106:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1143,"nodeType":"Block","src":"2236:58:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1138,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"2254:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2254:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2264:22:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":1137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2246:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2246:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"2246:41:10"}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"2122:61:10","text":" @dev Throws if the contract is not paused."},"id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2197:14:10","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[],"src":"2211:2:10"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[],"src":"2236:0:10"},"scope":1182,"src":"2188:106:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1159,"nodeType":"Block","src":"2478:66:10","statements":[{"expression":{"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1150,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"2488:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2498:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2488:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1153,"nodeType":"ExpressionStatement","src":"2488:14:10"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1155,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"2524:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2524:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1154,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"2517:6:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1158,"nodeType":"EmitStatement","src":"2512:25:10"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"2300:124:10","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1160,"implemented":true,"kind":"function","modifiers":[{"id":1148,"kind":"modifierInvocation","modifierName":{"id":1147,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":1104,"src":"2464:13:10"},"nodeType":"ModifierInvocation","src":"2464:13:10"}],"name":"_pause","nameLocation":"2438:6:10","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[],"src":"2444:2:10"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"2478:0:10"},"scope":1182,"src":"2429:115:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1175,"nodeType":"Block","src":"2724:69:10","statements":[{"expression":{"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1166,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"2734:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2744:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2734:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1169,"nodeType":"ExpressionStatement","src":"2734:15:10"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1171,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"2773:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2773:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1170,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"2764:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2764:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1174,"nodeType":"EmitStatement","src":"2759:27:10"}]},"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"2550:121:10","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1176,"implemented":true,"kind":"function","modifiers":[{"id":1164,"kind":"modifierInvocation","modifierName":{"id":1163,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":1112,"src":"2713:10:10"},"nodeType":"ModifierInvocation","src":"2713:10:10"}],"name":"_unpause","nameLocation":"2685:8:10","nodeType":"FunctionDefinition","parameters":{"id":1162,"nodeType":"ParameterList","parameters":[],"src":"2693:2:10"},"returnParameters":{"id":1165,"nodeType":"ParameterList","parameters":[],"src":"2724:0:10"},"scope":1182,"src":"2676:117:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"2799:254:10","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1181,"mutability":"mutable","name":"__gap","nameLocation":"3078:5:10","nodeType":"VariableDeclaration","scope":1182,"src":"3058:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1180,"length":{"hexValue":"3439","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3066:2:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3058:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1183,"src":"656:2430:10","usedErrors":[]}],"src":"105:2982:10"},"id":10},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2593],"ContextUpgradeable":[2791],"ERC20Upgradeable":[1794],"IERC20MetadataUpgradeable":[2309],"IERC20Upgradeable":[1872],"Initializable":[919]},"id":1795,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1184,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:11"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"./IERC20Upgradeable.sol","id":1185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1795,"sourceUnit":1873,"src":"135:33:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","file":"./extensions/IERC20MetadataUpgradeable.sol","id":1186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1795,"sourceUnit":2310,"src":"169:52:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":1187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1795,"sourceUnit":2792,"src":"222:44:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1188,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1795,"sourceUnit":920,"src":"267:45:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1190,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":919,"src":"1514:13:11"},"id":1191,"nodeType":"InheritanceSpecifier","src":"1514:13:11"},{"baseName":{"id":1192,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2791,"src":"1529:18:11"},"id":1193,"nodeType":"InheritanceSpecifier","src":"1529:18:11"},{"baseName":{"id":1194,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1872,"src":"1549:17:11"},"id":1195,"nodeType":"InheritanceSpecifier","src":"1549:17:11"},{"baseName":{"id":1196,"name":"IERC20MetadataUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2309,"src":"1568:25:11"},"id":1197,"nodeType":"InheritanceSpecifier","src":"1568:25:11"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"314:1170:11","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1794,"linearizedBaseContracts":[1794,2309,1872,2791,919],"name":"ERC20Upgradeable","nameLocation":"1494:16:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1201,"mutability":"mutable","name":"_balances","nameLocation":"1636:9:11","nodeType":"VariableDeclaration","scope":1794,"src":"1600:45:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1200,"keyType":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"1608:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1600:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1619:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1207,"mutability":"mutable","name":"_allowances","nameLocation":"1708:11:11","nodeType":"VariableDeclaration","scope":1794,"src":"1652:67:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1206,"keyType":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"1660:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1652:47:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":1205,"keyType":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1671:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1690:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1209,"mutability":"mutable","name":"_totalSupply","nameLocation":"1742:12:11","nodeType":"VariableDeclaration","scope":1794,"src":"1726:28:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"1726:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1211,"mutability":"mutable","name":"_name","nameLocation":"1776:5:11","nodeType":"VariableDeclaration","scope":1794,"src":"1761:20:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1210,"name":"string","nodeType":"ElementaryTypeName","src":"1761:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1213,"mutability":"mutable","name":"_symbol","nameLocation":"1802:7:11","nodeType":"VariableDeclaration","scope":1794,"src":"1787:22:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1212,"name":"string","nodeType":"ElementaryTypeName","src":"1787:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1228,"nodeType":"Block","src":"2211:55:11","statements":[{"expression":{"arguments":[{"id":1224,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"2244:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1225,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"2251:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1223,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2221:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2221:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1227,"nodeType":"ExpressionStatement","src":"2221:38:11"}]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"1816:298:11","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1229,"implemented":true,"kind":"function","modifiers":[{"id":1221,"kind":"modifierInvocation","modifierName":{"id":1220,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"2194:16:11"},"nodeType":"ModifierInvocation","src":"2194:16:11"}],"name":"__ERC20_init","nameLocation":"2128:12:11","nodeType":"FunctionDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"name_","nameLocation":"2155:5:11","nodeType":"VariableDeclaration","scope":1229,"src":"2141:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1215,"name":"string","nodeType":"ElementaryTypeName","src":"2141:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"symbol_","nameLocation":"2176:7:11","nodeType":"VariableDeclaration","scope":1229,"src":"2162:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1217,"name":"string","nodeType":"ElementaryTypeName","src":"2162:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2140:44:11"},"returnParameters":{"id":1222,"nodeType":"ParameterList","parameters":[],"src":"2211:0:11"},"scope":1794,"src":"2119:147:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1246,"nodeType":"Block","src":"2374:57:11","statements":[{"expression":{"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1238,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"2384:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1239,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2392:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2384:13:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1241,"nodeType":"ExpressionStatement","src":"2384:13:11"},{"expression":{"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1242,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"2407:7:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1243,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2417:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2407:17:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1245,"nodeType":"ExpressionStatement","src":"2407:17:11"}]},"id":1247,"implemented":true,"kind":"function","modifiers":[{"id":1236,"kind":"modifierInvocation","modifierName":{"id":1235,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"2357:16:11"},"nodeType":"ModifierInvocation","src":"2357:16:11"}],"name":"__ERC20_init_unchained","nameLocation":"2281:22:11","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"name_","nameLocation":"2318:5:11","nodeType":"VariableDeclaration","scope":1247,"src":"2304:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1230,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"symbol_","nameLocation":"2339:7:11","nodeType":"VariableDeclaration","scope":1247,"src":"2325:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1232,"name":"string","nodeType":"ElementaryTypeName","src":"2325:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2303:44:11"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[],"src":"2374:0:11"},"scope":1794,"src":"2272:159:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2296],"body":{"id":1256,"nodeType":"Block","src":"2565:29:11","statements":[{"expression":{"id":1254,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"2582:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1253,"id":1255,"nodeType":"Return","src":"2575:12:11"}]},"documentation":{"id":1248,"nodeType":"StructuredDocumentation","src":"2437:54:11","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1257,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2505:4:11","nodeType":"FunctionDefinition","overrides":{"id":1250,"nodeType":"OverrideSpecifier","overrides":[],"src":"2532:8:11"},"parameters":{"id":1249,"nodeType":"ParameterList","parameters":[],"src":"2509:2:11"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1257,"src":"2550:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1251,"name":"string","nodeType":"ElementaryTypeName","src":"2550:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2549:15:11"},"scope":1794,"src":"2496:98:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2302],"body":{"id":1266,"nodeType":"Block","src":"2778:31:11","statements":[{"expression":{"id":1264,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"2795:7:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1263,"id":1265,"nodeType":"Return","src":"2788:14:11"}]},"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"2600:102:11","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2716:6:11","nodeType":"FunctionDefinition","overrides":{"id":1260,"nodeType":"OverrideSpecifier","overrides":[],"src":"2745:8:11"},"parameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"2722:2:11"},"returnParameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1267,"src":"2763:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1261,"name":"string","nodeType":"ElementaryTypeName","src":"2763:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2762:15:11"},"scope":1794,"src":"2707:102:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2308],"body":{"id":1276,"nodeType":"Block","src":"3498:26:11","statements":[{"expression":{"hexValue":"3138","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3515:2:11","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1273,"id":1275,"nodeType":"Return","src":"3508:9:11"}]},"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"2815:613:11","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1277,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3442:8:11","nodeType":"FunctionDefinition","overrides":{"id":1270,"nodeType":"OverrideSpecifier","overrides":[],"src":"3473:8:11"},"parameters":{"id":1269,"nodeType":"ParameterList","parameters":[],"src":"3450:2:11"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1277,"src":"3491:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1271,"name":"uint8","nodeType":"ElementaryTypeName","src":"3491:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3490:7:11"},"scope":1794,"src":"3433:91:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1821],"body":{"id":1286,"nodeType":"Block","src":"3654:36:11","statements":[{"expression":{"id":1284,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3671:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1283,"id":1285,"nodeType":"Return","src":"3664:19:11"}]},"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"3530:49:11","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1287,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3593:11:11","nodeType":"FunctionDefinition","overrides":{"id":1280,"nodeType":"OverrideSpecifier","overrides":[],"src":"3627:8:11"},"parameters":{"id":1279,"nodeType":"ParameterList","parameters":[],"src":"3604:2:11"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1287,"src":"3645:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3645:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3644:9:11"},"scope":1794,"src":"3584:106:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1829],"body":{"id":1300,"nodeType":"Block","src":"3831:42:11","statements":[{"expression":{"baseExpression":{"id":1296,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"3848:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1298,"indexExpression":{"id":1297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"3858:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3848:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1295,"id":1299,"nodeType":"Return","src":"3841:25:11"}]},"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"3696:47:11","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1301,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3757:9:11","nodeType":"FunctionDefinition","overrides":{"id":1292,"nodeType":"OverrideSpecifier","overrides":[],"src":"3804:8:11"},"parameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"account","nameLocation":"3775:7:11","nodeType":"VariableDeclaration","scope":1301,"src":"3767:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"3767:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3766:17:11"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1301,"src":"3822:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3821:9:11"},"scope":1794,"src":"3748:125:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1839],"body":{"id":1325,"nodeType":"Block","src":"4154:104:11","statements":[{"assignments":[1313],"declarations":[{"constant":false,"id":1313,"mutability":"mutable","name":"owner","nameLocation":"4172:5:11","nodeType":"VariableDeclaration","scope":1325,"src":"4164:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1316,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1314,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"4180:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4180:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4164:28:11"},{"expression":{"arguments":[{"id":1318,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"4212:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1319,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"4219:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1320,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"4223:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1317,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4202:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4202:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1322,"nodeType":"ExpressionStatement","src":"4202:28:11"},{"expression":{"hexValue":"74727565","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4247:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1311,"id":1324,"nodeType":"Return","src":"4240:11:11"}]},"documentation":{"id":1302,"nodeType":"StructuredDocumentation","src":"3879:185:11","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4078:8:11","nodeType":"FunctionDefinition","overrides":{"id":1308,"nodeType":"OverrideSpecifier","overrides":[],"src":"4130:8:11"},"parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"to","nameLocation":"4095:2:11","nodeType":"VariableDeclaration","scope":1326,"src":"4087:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1306,"mutability":"mutable","name":"amount","nameLocation":"4107:6:11","nodeType":"VariableDeclaration","scope":1326,"src":"4099:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4086:28:11"},"returnParameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1326,"src":"4148:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1309,"name":"bool","nodeType":"ElementaryTypeName","src":"4148:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4147:6:11"},"scope":1794,"src":"4069:189:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1849],"body":{"id":1343,"nodeType":"Block","src":"4414:51:11","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1337,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"4431:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1339,"indexExpression":{"id":1338,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"4443:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4431:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1341,"indexExpression":{"id":1340,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"4450:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4431:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1336,"id":1342,"nodeType":"Return","src":"4424:34:11"}]},"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"4264:47:11","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1344,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4325:9:11","nodeType":"FunctionDefinition","overrides":{"id":1333,"nodeType":"OverrideSpecifier","overrides":[],"src":"4387:8:11"},"parameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"owner","nameLocation":"4343:5:11","nodeType":"VariableDeclaration","scope":1344,"src":"4335:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"4335:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"spender","nameLocation":"4358:7:11","nodeType":"VariableDeclaration","scope":1344,"src":"4350:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"4350:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4334:32:11"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1344,"src":"4405:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"4405:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4404:9:11"},"scope":1794,"src":"4316:149:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1859],"body":{"id":1368,"nodeType":"Block","src":"4862:108:11","statements":[{"assignments":[1356],"declarations":[{"constant":false,"id":1356,"mutability":"mutable","name":"owner","nameLocation":"4880:5:11","nodeType":"VariableDeclaration","scope":1368,"src":"4872:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"4872:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1359,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1357,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"4888:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4888:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4872:28:11"},{"expression":{"arguments":[{"id":1361,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"4919:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1362,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"4926:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1363,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"4935:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1360,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"4910:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4910:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1365,"nodeType":"ExpressionStatement","src":"4910:32:11"},{"expression":{"hexValue":"74727565","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4959:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1354,"id":1367,"nodeType":"Return","src":"4952:11:11"}]},"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"4471:297:11","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1369,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4782:7:11","nodeType":"FunctionDefinition","overrides":{"id":1351,"nodeType":"OverrideSpecifier","overrides":[],"src":"4838:8:11"},"parameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"spender","nameLocation":"4798:7:11","nodeType":"VariableDeclaration","scope":1369,"src":"4790:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"4790:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"amount","nameLocation":"4815:6:11","nodeType":"VariableDeclaration","scope":1369,"src":"4807:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"4807:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4789:33:11"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1369,"src":"4856:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1352,"name":"bool","nodeType":"ElementaryTypeName","src":"4856:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4855:6:11"},"scope":1794,"src":"4773:197:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1871],"body":{"id":1401,"nodeType":"Block","src":"5665:153:11","statements":[{"assignments":[1383],"declarations":[{"constant":false,"id":1383,"mutability":"mutable","name":"spender","nameLocation":"5683:7:11","nodeType":"VariableDeclaration","scope":1401,"src":"5675:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1386,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1384,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"5693:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5693:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5675:30:11"},{"expression":{"arguments":[{"id":1388,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"5731:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1389,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"5737:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1390,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"5746:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1387,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"5715:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5715:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1392,"nodeType":"ExpressionStatement","src":"5715:38:11"},{"expression":{"arguments":[{"id":1394,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"5773:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1395,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"5779:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1396,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"5783:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1393,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"5763:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5763:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1398,"nodeType":"ExpressionStatement","src":"5763:27:11"},{"expression":{"hexValue":"74727565","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5807:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1381,"id":1400,"nodeType":"Return","src":"5800:11:11"}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"4976:551:11","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1402,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5541:12:11","nodeType":"FunctionDefinition","overrides":{"id":1378,"nodeType":"OverrideSpecifier","overrides":[],"src":"5641:8:11"},"parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"from","nameLocation":"5571:4:11","nodeType":"VariableDeclaration","scope":1402,"src":"5563:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"5563:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"to","nameLocation":"5593:2:11","nodeType":"VariableDeclaration","scope":1402,"src":"5585:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"5585:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"amount","nameLocation":"5613:6:11","nodeType":"VariableDeclaration","scope":1402,"src":"5605:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"5605:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5553:72:11"},"returnParameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1402,"src":"5659:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1379,"name":"bool","nodeType":"ElementaryTypeName","src":"5659:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5658:6:11"},"scope":1794,"src":"5532:286:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1430,"nodeType":"Block","src":"6307:140:11","statements":[{"assignments":[1413],"declarations":[{"constant":false,"id":1413,"mutability":"mutable","name":"owner","nameLocation":"6325:5:11","nodeType":"VariableDeclaration","scope":1430,"src":"6317:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1412,"name":"address","nodeType":"ElementaryTypeName","src":"6317:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1416,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1414,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"6333:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6317:28:11"},{"expression":{"arguments":[{"id":1418,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"6364:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1419,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"6371:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1421,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"6390:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1422,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"6397:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1420,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"6380:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6380:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1424,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"6408:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6380:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1417,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"6355:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6355:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1427,"nodeType":"ExpressionStatement","src":"6355:64:11"},{"expression":{"hexValue":"74727565","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6436:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1411,"id":1429,"nodeType":"Return","src":"6429:11:11"}]},"documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"5824:384:11","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1431,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6222:17:11","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"spender","nameLocation":"6248:7:11","nodeType":"VariableDeclaration","scope":1431,"src":"6240:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"6240:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"addedValue","nameLocation":"6265:10:11","nodeType":"VariableDeclaration","scope":1431,"src":"6257:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6239:37:11"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1431,"src":"6301:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1409,"name":"bool","nodeType":"ElementaryTypeName","src":"6301:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6300:6:11"},"scope":1794,"src":"6213:234:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1471,"nodeType":"Block","src":"7033:328:11","statements":[{"assignments":[1442],"declarations":[{"constant":false,"id":1442,"mutability":"mutable","name":"owner","nameLocation":"7051:5:11","nodeType":"VariableDeclaration","scope":1471,"src":"7043:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1441,"name":"address","nodeType":"ElementaryTypeName","src":"7043:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1445,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1443,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"7059:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7059:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7043:28:11"},{"assignments":[1447],"declarations":[{"constant":false,"id":1447,"mutability":"mutable","name":"currentAllowance","nameLocation":"7089:16:11","nodeType":"VariableDeclaration","scope":1471,"src":"7081:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"7081:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1452,"initialValue":{"arguments":[{"id":1449,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"7118:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1450,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"7125:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1448,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"7108:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7108:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7081:52:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1454,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"7151:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1455,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"7171:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7151:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7188:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":1453,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7143:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7143:85:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1459,"nodeType":"ExpressionStatement","src":"7143:85:11"},{"id":1468,"nodeType":"UncheckedBlock","src":"7238:95:11","statements":[{"expression":{"arguments":[{"id":1461,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"7271:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1462,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"7278:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"7287:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1464,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"7306:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7287:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1460,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"7262:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7262:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1467,"nodeType":"ExpressionStatement","src":"7262:60:11"}]},{"expression":{"hexValue":"74727565","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7350:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1440,"id":1470,"nodeType":"Return","src":"7343:11:11"}]},"documentation":{"id":1432,"nodeType":"StructuredDocumentation","src":"6453:476:11","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1472,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6943:17:11","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"spender","nameLocation":"6969:7:11","nodeType":"VariableDeclaration","scope":1472,"src":"6961:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1433,"name":"address","nodeType":"ElementaryTypeName","src":"6961:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1436,"mutability":"mutable","name":"subtractedValue","nameLocation":"6986:15:11","nodeType":"VariableDeclaration","scope":1472,"src":"6978:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1435,"name":"uint256","nodeType":"ElementaryTypeName","src":"6978:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6960:42:11"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1472,"src":"7027:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1438,"name":"bool","nodeType":"ElementaryTypeName","src":"7027:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7026:6:11"},"scope":1794,"src":"6934:427:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1548,"nodeType":"Block","src":"7923:710:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1483,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"7941:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7957:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7949:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"7949:7:11","typeDescriptions":{}}},"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7949:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7941:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7961:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1482,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7933:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7933:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1491,"nodeType":"ExpressionStatement","src":"7933:68:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"8019:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8033:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8025:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"8025:7:11","typeDescriptions":{}}},"id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8025:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8019:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8037:37:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8011:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8011:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1501,"nodeType":"ExpressionStatement","src":"8011:64:11"},{"expression":{"arguments":[{"id":1503,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"8107:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1504,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"8113:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1505,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"8117:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1502,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"8086:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8086:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"ExpressionStatement","src":"8086:38:11"},{"assignments":[1509],"declarations":[{"constant":false,"id":1509,"mutability":"mutable","name":"fromBalance","nameLocation":"8143:11:11","nodeType":"VariableDeclaration","scope":1548,"src":"8135:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"8135:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1513,"initialValue":{"baseExpression":{"id":1510,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"8157:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1512,"indexExpression":{"id":1511,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"8167:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8157:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8135:37:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1515,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"8190:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1516,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"8205:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8190:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8213:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1514,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8182:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8182:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1520,"nodeType":"ExpressionStatement","src":"8182:72:11"},{"id":1535,"nodeType":"UncheckedBlock","src":"8264:273:11","statements":[{"expression":{"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1521,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"8288:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1523,"indexExpression":{"id":1522,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"8298:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8288:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1524,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"8306:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1525,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"8320:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8306:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8288:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1528,"nodeType":"ExpressionStatement","src":"8288:38:11"},{"expression":{"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1529,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"8503:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1531,"indexExpression":{"id":1530,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"8513:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8503:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1532,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"8520:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8503:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1534,"nodeType":"ExpressionStatement","src":"8503:23:11"}]},{"eventCall":{"arguments":[{"id":1537,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"8561:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1538,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"8567:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1539,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"8571:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1536,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"8552:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8552:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1541,"nodeType":"EmitStatement","src":"8547:31:11"},{"expression":{"arguments":[{"id":1543,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"8609:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1544,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"8615:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1545,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"8619:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1542,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"8589:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8589:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1547,"nodeType":"ExpressionStatement","src":"8589:37:11"}]},"documentation":{"id":1473,"nodeType":"StructuredDocumentation","src":"7367:443:11","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":1549,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7824:9:11","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"from","nameLocation":"7851:4:11","nodeType":"VariableDeclaration","scope":1549,"src":"7843:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1474,"name":"address","nodeType":"ElementaryTypeName","src":"7843:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1477,"mutability":"mutable","name":"to","nameLocation":"7873:2:11","nodeType":"VariableDeclaration","scope":1549,"src":"7865:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"7865:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"amount","nameLocation":"7893:6:11","nodeType":"VariableDeclaration","scope":1549,"src":"7885:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"7885:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7833:72:11"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[],"src":"7923:0:11"},"scope":1794,"src":"7815:818:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1605,"nodeType":"Block","src":"8974:470:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1558,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"8992:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9003:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"9003:7:11","typeDescriptions":{}}},"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9003:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8992:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9015:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8984:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8984:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"ExpressionStatement","src":"8984:65:11"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9089:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9081:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1568,"name":"address","nodeType":"ElementaryTypeName","src":"9081:7:11","typeDescriptions":{}}},"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9081:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1572,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"9093:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"9102:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1567,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"9060:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9060:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1575,"nodeType":"ExpressionStatement","src":"9060:49:11"},{"expression":{"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1576,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"9120:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1577,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"9136:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9120:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1579,"nodeType":"ExpressionStatement","src":"9120:22:11"},{"id":1586,"nodeType":"UncheckedBlock","src":"9152:175:11","statements":[{"expression":{"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1580,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"9288:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1582,"indexExpression":{"id":1581,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"9298:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9288:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1583,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"9310:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9288:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1585,"nodeType":"ExpressionStatement","src":"9288:28:11"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9358:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9350:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"9350:7:11","typeDescriptions":{}}},"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9350:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1592,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"9362:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1593,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"9371:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1587,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"9341:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9341:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1595,"nodeType":"EmitStatement","src":"9336:42:11"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9417:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9409:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"9409:7:11","typeDescriptions":{}}},"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9409:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1601,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"9421:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1602,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"9430:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1596,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"9389:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9389:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1604,"nodeType":"ExpressionStatement","src":"9389:48:11"}]},"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"8639:265:11","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8918:5:11","nodeType":"FunctionDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"account","nameLocation":"8932:7:11","nodeType":"VariableDeclaration","scope":1606,"src":"8924:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"8924:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"amount","nameLocation":"8949:6:11","nodeType":"VariableDeclaration","scope":1606,"src":"8941:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"8941:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8923:33:11"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[],"src":"8974:0:11"},"scope":1794,"src":"8909:535:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1677,"nodeType":"Block","src":"9829:594:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1615,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"9847:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9866:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9858:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"9858:7:11","typeDescriptions":{}}},"id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9858:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9847:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9870:35:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9839:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9839:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1623,"nodeType":"ExpressionStatement","src":"9839:67:11"},{"expression":{"arguments":[{"id":1625,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"9938:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9955:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9947:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1626,"name":"address","nodeType":"ElementaryTypeName","src":"9947:7:11","typeDescriptions":{}}},"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9947:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1630,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"9959:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1624,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"9917:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9917:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1632,"nodeType":"ExpressionStatement","src":"9917:49:11"},{"assignments":[1634],"declarations":[{"constant":false,"id":1634,"mutability":"mutable","name":"accountBalance","nameLocation":"9985:14:11","nodeType":"VariableDeclaration","scope":1677,"src":"9977:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1633,"name":"uint256","nodeType":"ElementaryTypeName","src":"9977:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1638,"initialValue":{"baseExpression":{"id":1635,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"10002:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1637,"indexExpression":{"id":1636,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10012:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10002:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9977:43:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"10038:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1641,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"10056:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10038:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10064:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1639,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10030:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10030:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"10030:71:11"},{"id":1658,"nodeType":"UncheckedBlock","src":"10111:194:11","statements":[{"expression":{"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1646,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"10135:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1648,"indexExpression":{"id":1647,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10145:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10135:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1649,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"10156:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1650,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"10173:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10156:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10135:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1653,"nodeType":"ExpressionStatement","src":"10135:44:11"},{"expression":{"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1654,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"10272:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1655,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"10288:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10272:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1657,"nodeType":"ExpressionStatement","src":"10272:22:11"}]},{"eventCall":{"arguments":[{"id":1660,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10329:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10346:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10338:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1661,"name":"address","nodeType":"ElementaryTypeName","src":"10338:7:11","typeDescriptions":{}}},"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10338:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1665,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"10350:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1659,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"10320:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10320:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1667,"nodeType":"EmitStatement","src":"10315:42:11"},{"expression":{"arguments":[{"id":1669,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10388:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10405:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10397:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"10397:7:11","typeDescriptions":{}}},"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10397:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1674,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"10409:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1668,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"10368:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10368:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1676,"nodeType":"ExpressionStatement","src":"10368:48:11"}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"9450:309:11","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1678,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9773:5:11","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"account","nameLocation":"9787:7:11","nodeType":"VariableDeclaration","scope":1678,"src":"9779:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"9779:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"amount","nameLocation":"9804:6:11","nodeType":"VariableDeclaration","scope":1678,"src":"9796:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"9796:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9778:33:11"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[],"src":"9829:0:11"},"scope":1794,"src":"9764:659:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1722,"nodeType":"Block","src":"10959:257:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1689,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"10977:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10994:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10986:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"10986:7:11","typeDescriptions":{}}},"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10986:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10977:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10998:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1688,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10969:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10969:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1697,"nodeType":"ExpressionStatement","src":"10969:68:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1699,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"11055:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11074:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11066:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"11066:7:11","typeDescriptions":{}}},"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11066:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11055:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11078:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11047:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11047:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1707,"nodeType":"ExpressionStatement","src":"11047:68:11"},{"expression":{"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1708,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"11126:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1711,"indexExpression":{"id":1709,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"11138:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11126:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1712,"indexExpression":{"id":1710,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"11145:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11126:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1713,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"11156:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11126:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1715,"nodeType":"ExpressionStatement","src":"11126:36:11"},{"eventCall":{"arguments":[{"id":1717,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"11186:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1718,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"11193:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1719,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"11202:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1716,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"11177:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11177:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1721,"nodeType":"EmitStatement","src":"11172:37:11"}]},"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"10429:412:11","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1723,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10855:8:11","nodeType":"FunctionDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"owner","nameLocation":"10881:5:11","nodeType":"VariableDeclaration","scope":1723,"src":"10873:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"10873:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1683,"mutability":"mutable","name":"spender","nameLocation":"10904:7:11","nodeType":"VariableDeclaration","scope":1723,"src":"10896:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"10896:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1685,"mutability":"mutable","name":"amount","nameLocation":"10929:6:11","nodeType":"VariableDeclaration","scope":1723,"src":"10921:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"10921:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10863:78:11"},"returnParameters":{"id":1687,"nodeType":"ParameterList","parameters":[],"src":"10959:0:11"},"scope":1794,"src":"10846:370:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1765,"nodeType":"Block","src":"11617:321:11","statements":[{"assignments":[1734],"declarations":[{"constant":false,"id":1734,"mutability":"mutable","name":"currentAllowance","nameLocation":"11635:16:11","nodeType":"VariableDeclaration","scope":1765,"src":"11627:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"11627:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1739,"initialValue":{"arguments":[{"id":1736,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"11664:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1737,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"11671:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1735,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"11654:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11654:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11627:52:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1740,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"11693:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11718:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"11718:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1741,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11713:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11713:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11713:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11693:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1764,"nodeType":"IfStatement","src":"11689:243:11","trueBody":{"id":1763,"nodeType":"Block","src":"11732:200:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1748,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"11754:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1749,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"11774:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11754:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11782:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1747,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11746:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11746:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1753,"nodeType":"ExpressionStatement","src":"11746:68:11"},{"id":1762,"nodeType":"UncheckedBlock","src":"11828:94:11","statements":[{"expression":{"arguments":[{"id":1755,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"11865:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1756,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"11872:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1757,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"11881:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1758,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"11900:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11881:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1754,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"11856:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11856:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1761,"nodeType":"ExpressionStatement","src":"11856:51:11"}]}]}}]},"documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"11222:270:11","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11506:15:11","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"owner","nameLocation":"11539:5:11","nodeType":"VariableDeclaration","scope":1766,"src":"11531:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"11531:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"spender","nameLocation":"11562:7:11","nodeType":"VariableDeclaration","scope":1766,"src":"11554:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"11554:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"amount","nameLocation":"11587:6:11","nodeType":"VariableDeclaration","scope":1766,"src":"11579:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"11579:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11521:78:11"},"returnParameters":{"id":1732,"nodeType":"ParameterList","parameters":[],"src":"11617:0:11"},"scope":1794,"src":"11497:441:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1776,"nodeType":"Block","src":"12641:2:11","statements":[]},"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"11944:573:11","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1777,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12531:20:11","nodeType":"FunctionDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"from","nameLocation":"12569:4:11","nodeType":"VariableDeclaration","scope":1777,"src":"12561:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"12561:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"to","nameLocation":"12591:2:11","nodeType":"VariableDeclaration","scope":1777,"src":"12583:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"12583:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"amount","nameLocation":"12611:6:11","nodeType":"VariableDeclaration","scope":1777,"src":"12603:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"12603:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12551:72:11"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[],"src":"12641:0:11"},"scope":1794,"src":"12522:121:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1787,"nodeType":"Block","src":"13349:2:11","statements":[]},"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"12649:577:11","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1788,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"13240:19:11","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"from","nameLocation":"13277:4:11","nodeType":"VariableDeclaration","scope":1788,"src":"13269:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"13269:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"to","nameLocation":"13299:2:11","nodeType":"VariableDeclaration","scope":1788,"src":"13291:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"13291:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"amount","nameLocation":"13319:6:11","nodeType":"VariableDeclaration","scope":1788,"src":"13311:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"13311:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13259:72:11"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[],"src":"13349:0:11"},"scope":1794,"src":"13231:120:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"13357:254:11","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1793,"mutability":"mutable","name":"__gap","nameLocation":"13636:5:11","nodeType":"VariableDeclaration","scope":1794,"src":"13616:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage","typeString":"uint256[45]"},"typeName":{"baseType":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"13616:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1792,"length":{"hexValue":"3435","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13624:2:11","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"nodeType":"ArrayTypeName","src":"13616:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage_ptr","typeString":"uint256[45]"}},"visibility":"private"}],"scope":1795,"src":"1485:12159:11","usedErrors":[]}],"src":"110:13535:11"},"id":11},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[1872]},"id":1873,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1796,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"131:70:12","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1872,"linearizedBaseContracts":[1872],"name":"IERC20Upgradeable","nameLocation":"212:17:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"236:158:12","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":1806,"name":"Transfer","nameLocation":"405:8:12","nodeType":"EventDefinition","parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:12","nodeType":"VariableDeclaration","scope":1806,"src":"414:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1802,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:12","nodeType":"VariableDeclaration","scope":1806,"src":"436:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1801,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1804,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:12","nodeType":"VariableDeclaration","scope":1806,"src":"456:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:12"},"src":"399:72:12"},{"anonymous":false,"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"477:148:12","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":1815,"name":"Approval","nameLocation":"636:8:12","nodeType":"EventDefinition","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:12","nodeType":"VariableDeclaration","scope":1815,"src":"645:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1811,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:12","nodeType":"VariableDeclaration","scope":1815,"src":"668:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1813,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:12","nodeType":"VariableDeclaration","scope":1815,"src":"693:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:12"},"src":"630:78:12"},{"documentation":{"id":1816,"nodeType":"StructuredDocumentation","src":"714:66:12","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1821,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:12","nodeType":"FunctionDefinition","parameters":{"id":1817,"nodeType":"ParameterList","parameters":[],"src":"805:2:12"},"returnParameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1821,"src":"831:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:12"},"scope":1872,"src":"785:55:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"846:72:12","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1829,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:12","nodeType":"FunctionDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"account","nameLocation":"950:7:12","nodeType":"VariableDeclaration","scope":1829,"src":"942:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:12"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"982:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1826,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:12"},"scope":1872,"src":"923:68:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"997:202:12","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1839,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:12","nodeType":"FunctionDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"to","nameLocation":"1230:2:12","nodeType":"VariableDeclaration","scope":1839,"src":"1222:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"amount","nameLocation":"1242:6:12","nodeType":"VariableDeclaration","scope":1839,"src":"1234:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1833,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:12"},"returnParameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"1268:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1836,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:12"},"scope":1872,"src":"1204:70:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"1280:264:12","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1849,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:12","nodeType":"FunctionDefinition","parameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"owner","nameLocation":"1576:5:12","nodeType":"VariableDeclaration","scope":1849,"src":"1568:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1844,"mutability":"mutable","name":"spender","nameLocation":"1591:7:12","nodeType":"VariableDeclaration","scope":1849,"src":"1583:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1843,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:12"},"returnParameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1849,"src":"1623:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:12"},"scope":1872,"src":"1549:83:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"1638:642:12","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1859,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:12","nodeType":"FunctionDefinition","parameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"spender","nameLocation":"2310:7:12","nodeType":"VariableDeclaration","scope":1859,"src":"2302:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"amount","nameLocation":"2327:6:12","nodeType":"VariableDeclaration","scope":1859,"src":"2319:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:12"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1859,"src":"2353:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1856,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:12"},"scope":1872,"src":"2285:74:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"2365:287:12","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1871,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:12","nodeType":"FunctionDefinition","parameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"from","nameLocation":"2696:4:12","nodeType":"VariableDeclaration","scope":1871,"src":"2688:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"2688:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"to","nameLocation":"2718:2:12","nodeType":"VariableDeclaration","scope":1871,"src":"2710:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1863,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1866,"mutability":"mutable","name":"amount","nameLocation":"2738:6:12","nodeType":"VariableDeclaration","scope":1871,"src":"2730:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"2730:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:72:12"},"returnParameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"2769:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1868,"name":"bool","nodeType":"ElementaryTypeName","src":"2769:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2768:6:12"},"scope":1872,"src":"2657:118:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1873,"src":"202:2575:12","usedErrors":[]}],"src":"106:2672:12"},"id":12},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2593],"ContextUpgradeable":[2791],"ERC20BurnableUpgradeable":[1936],"ERC20Upgradeable":[1794],"IERC20MetadataUpgradeable":[2309],"IERC20Upgradeable":[1872],"Initializable":[919]},"id":1937,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1874,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:13"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1875,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1937,"sourceUnit":1795,"src":"149:33:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../../utils/ContextUpgradeable.sol","id":1876,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1937,"sourceUnit":2792,"src":"183:47:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1877,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1937,"sourceUnit":920,"src":"231:48:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1879,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":919,"src":"536:13:13"},"id":1880,"nodeType":"InheritanceSpecifier","src":"536:13:13"},{"baseName":{"id":1881,"name":"ContextUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2791,"src":"551:18:13"},"id":1882,"nodeType":"InheritanceSpecifier","src":"551:18:13"},{"baseName":{"id":1883,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1794,"src":"571:16:13"},"id":1884,"nodeType":"InheritanceSpecifier","src":"571:16:13"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"281:208:13","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1936,"linearizedBaseContracts":[1936,1794,2309,1872,2791,919],"name":"ERC20BurnableUpgradeable","nameLocation":"508:24:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1889,"nodeType":"Block","src":"652:7:13","statements":[]},"id":1890,"implemented":true,"kind":"function","modifiers":[{"id":1887,"kind":"modifierInvocation","modifierName":{"id":1886,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"635:16:13"},"nodeType":"ModifierInvocation","src":"635:16:13"}],"name":"__ERC20Burnable_init","nameLocation":"603:20:13","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[],"src":"623:2:13"},"returnParameters":{"id":1888,"nodeType":"ParameterList","parameters":[],"src":"652:0:13"},"scope":1936,"src":"594:65:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1895,"nodeType":"Block","src":"733:7:13","statements":[]},"id":1896,"implemented":true,"kind":"function","modifiers":[{"id":1893,"kind":"modifierInvocation","modifierName":{"id":1892,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"716:16:13"},"nodeType":"ModifierInvocation","src":"716:16:13"}],"name":"__ERC20Burnable_init_unchained","nameLocation":"674:30:13","nodeType":"FunctionDefinition","parameters":{"id":1891,"nodeType":"ParameterList","parameters":[],"src":"704:2:13"},"returnParameters":{"id":1894,"nodeType":"ParameterList","parameters":[],"src":"733:0:13"},"scope":1936,"src":"665:75:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1908,"nodeType":"Block","src":"893:44:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1903,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"909:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"909:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1905,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"923:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1902,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"903:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1907,"nodeType":"ExpressionStatement","src":"903:27:13"}]},"documentation":{"id":1897,"nodeType":"StructuredDocumentation","src":"745:98:13","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1909,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"857:4:13","nodeType":"FunctionDefinition","parameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"amount","nameLocation":"870:6:13","nodeType":"VariableDeclaration","scope":1909,"src":"862:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"861:16:13"},"returnParameters":{"id":1901,"nodeType":"ParameterList","parameters":[],"src":"893:0:13"},"scope":1936,"src":"848:89:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1929,"nodeType":"Block","src":"1309:95:13","statements":[{"expression":{"arguments":[{"id":1918,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1335:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1919,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"1344:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1344:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1921,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"1358:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1917,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"1319:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1319:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1923,"nodeType":"ExpressionStatement","src":"1319:46:13"},{"expression":{"arguments":[{"id":1925,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1381:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1926,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"1390:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1924,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"1375:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1375:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"ExpressionStatement","src":"1375:22:13"}]},"documentation":{"id":1910,"nodeType":"StructuredDocumentation","src":"943:295:13","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":1930,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1252:8:13","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"account","nameLocation":"1269:7:13","nodeType":"VariableDeclaration","scope":1930,"src":"1261:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"1261:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"amount","nameLocation":"1286:6:13","nodeType":"VariableDeclaration","scope":1930,"src":"1278:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1278:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1260:33:13"},"returnParameters":{"id":1916,"nodeType":"ParameterList","parameters":[],"src":"1309:0:13"},"scope":1936,"src":"1243:161:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"1410:254:13","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1935,"mutability":"mutable","name":"__gap","nameLocation":"1689:5:13","nodeType":"VariableDeclaration","scope":1936,"src":"1669:25:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1669:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1934,"length":{"hexValue":"3530","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:2:13","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1669:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1937,"src":"490:1207:13","usedErrors":[]}],"src":"124:1574:13"},"id":13},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2593],"ArraysUpgradeable":[2749],"ContextUpgradeable":[2791],"CountersUpgradeable":[2865],"ERC20SnapshotUpgradeable":[2284],"ERC20Upgradeable":[1794],"IERC20MetadataUpgradeable":[2309],"IERC20Upgradeable":[1872],"Initializable":[919],"MathUpgradeable":[3790],"StorageSlotUpgradeable":[2925]},"id":2285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1938,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:14"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1939,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2285,"sourceUnit":1795,"src":"149:33:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol","file":"../../../utils/ArraysUpgradeable.sol","id":1940,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2285,"sourceUnit":2750,"src":"183:46:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"../../../utils/CountersUpgradeable.sol","id":1941,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2285,"sourceUnit":2866,"src":"230:48:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1942,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2285,"sourceUnit":920,"src":"279:48:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1944,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":919,"src":"2530:13:14"},"id":1945,"nodeType":"InheritanceSpecifier","src":"2530:13:14"},{"baseName":{"id":1946,"name":"ERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1794,"src":"2545:16:14"},"id":1947,"nodeType":"InheritanceSpecifier","src":"2545:16:14"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"329:2153:14","text":" @dev This contract extends an ERC20 token with a snapshot mechanism. When a snapshot is created, the balances and\n total supply at the time are recorded for later access.\n This can be used to safely create mechanisms based on token balances such as trustless dividends or weighted voting.\n In naive implementations it's possible to perform a \"double spend\" attack by reusing the same balance from different\n accounts. By using snapshots to calculate dividends or voting power, those attacks no longer apply. It can also be\n used to create an efficient ERC20 forking mechanism.\n Snapshots are created by the internal {_snapshot} function, which will emit the {Snapshot} event and return a\n snapshot id. To get the total supply at the time of a snapshot, call the function {totalSupplyAt} with the snapshot\n id. To get the balance of an account at the time of a snapshot, call the {balanceOfAt} function with the snapshot id\n and the account address.\n NOTE: Snapshot policy can be customized by overriding the {_getCurrentSnapshotId} method. For example, having it\n return `block.number` will trigger the creation of snapshot at the beginning of each new block. When overriding this\n function, be careful about the monotonicity of its result. Non-monotonic snapshot ids will break the contract.\n Implementing snapshots for every block using this method will incur significant gas costs. For a gas-efficient\n alternative consider {ERC20Votes}.\n ==== Gas Costs\n Snapshots are efficient. Snapshot creation is _O(1)_. Retrieval of balances or total supply from a snapshot is _O(log\n n)_ in the number of snapshots that have been created, although _n_ for a specific account will generally be much\n smaller since identical balances in subsequent snapshots are stored as a single entry.\n There is a constant overhead for normal ERC20 transfers due to the additional snapshot bookkeeping. This overhead is\n only significant for the first transfer that immediately follows a snapshot for a particular account. Subsequent\n transfers will have normal cost until the next snapshot, and so on."},"fullyImplemented":true,"id":2284,"linearizedBaseContracts":[2284,1794,2309,1872,2791,919],"name":"ERC20SnapshotUpgradeable","nameLocation":"2502:24:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":1952,"nodeType":"Block","src":"2626:7:14","statements":[]},"id":1953,"implemented":true,"kind":"function","modifiers":[{"id":1950,"kind":"modifierInvocation","modifierName":{"id":1949,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"2609:16:14"},"nodeType":"ModifierInvocation","src":"2609:16:14"}],"name":"__ERC20Snapshot_init","nameLocation":"2577:20:14","nodeType":"FunctionDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[],"src":"2597:2:14"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[],"src":"2626:0:14"},"scope":2284,"src":"2568:65:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1958,"nodeType":"Block","src":"2707:7:14","statements":[]},"id":1959,"implemented":true,"kind":"function","modifiers":[{"id":1956,"kind":"modifierInvocation","modifierName":{"id":1955,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"2690:16:14"},"nodeType":"ModifierInvocation","src":"2690:16:14"}],"name":"__ERC20Snapshot_init_unchained","nameLocation":"2648:30:14","nodeType":"FunctionDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[],"src":"2678:2:14"},"returnParameters":{"id":1957,"nodeType":"ParameterList","parameters":[],"src":"2707:0:14"},"scope":2284,"src":"2639:75:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1963,"libraryName":{"id":1960,"name":"ArraysUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2749,"src":"2916:17:14"},"nodeType":"UsingForDirective","src":"2910:38:14","typeName":{"baseType":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2938:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1962,"nodeType":"ArrayTypeName","src":"2938:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"id":1967,"libraryName":{"id":1964,"name":"CountersUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2865,"src":"2959:19:14"},"nodeType":"UsingForDirective","src":"2953:58:14","typeName":{"id":1966,"nodeType":"UserDefinedTypeName","pathNode":{"id":1965,"name":"CountersUpgradeable.Counter","nodeType":"IdentifierPath","referencedDeclaration":2797,"src":"2983:27:14"},"referencedDeclaration":2797,"src":"2983:27:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"canonicalName":"ERC20SnapshotUpgradeable.Snapshots","id":1974,"members":[{"constant":false,"id":1970,"mutability":"mutable","name":"ids","nameLocation":"3256:3:14","nodeType":"VariableDeclaration","scope":1974,"src":"3246:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1969,"nodeType":"ArrayTypeName","src":"3246:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"values","nameLocation":"3279:6:14","nodeType":"VariableDeclaration","scope":1974,"src":"3269:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"3269:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1972,"nodeType":"ArrayTypeName","src":"3269:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"Snapshots","nameLocation":"3226:9:14","nodeType":"StructDefinition","scope":2284,"src":"3219:73:14","visibility":"public"},{"constant":false,"id":1979,"mutability":"mutable","name":"_accountBalanceSnapshots","nameLocation":"3336:24:14","nodeType":"VariableDeclaration","scope":2284,"src":"3298:62:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$1974_storage_$","typeString":"mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"},"typeName":{"id":1978,"keyType":{"id":1975,"name":"address","nodeType":"ElementaryTypeName","src":"3306:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3298:29:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$1974_storage_$","typeString":"mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"},"valueType":{"id":1977,"nodeType":"UserDefinedTypeName","pathNode":{"id":1976,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":1974,"src":"3317:9:14"},"referencedDeclaration":1974,"src":"3317:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"}}},"visibility":"private"},{"constant":false,"id":1982,"mutability":"mutable","name":"_totalSupplySnapshots","nameLocation":"3384:21:14","nodeType":"VariableDeclaration","scope":2284,"src":"3366:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"},"typeName":{"id":1981,"nodeType":"UserDefinedTypeName","pathNode":{"id":1980,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":1974,"src":"3366:9:14"},"referencedDeclaration":1974,"src":"3366:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"}},"visibility":"private"},{"constant":false,"id":1985,"mutability":"mutable","name":"_currentSnapshotId","nameLocation":"3545:18:14","nodeType":"VariableDeclaration","scope":2284,"src":"3509:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1984,"nodeType":"UserDefinedTypeName","pathNode":{"id":1983,"name":"CountersUpgradeable.Counter","nodeType":"IdentifierPath","referencedDeclaration":2797,"src":"3509:27:14"},"referencedDeclaration":2797,"src":"3509:27:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"3570:93:14","text":" @dev Emitted by {_snapshot} when a snapshot identified by `id` is created."},"id":1990,"name":"Snapshot","nameLocation":"3674:8:14","nodeType":"EventDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"3691:2:14","nodeType":"VariableDeclaration","scope":1990,"src":"3683:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"3683:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3682:12:14"},"src":"3668:27:14"},{"body":{"id":2012,"nodeType":"Block","src":"4858:161:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1996,"name":"_currentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"4868:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":1998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2823,"src":"4868:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2797_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2797_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4868:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2000,"nodeType":"ExpressionStatement","src":"4868:30:14"},{"assignments":[2002],"declarations":[{"constant":false,"id":2002,"mutability":"mutable","name":"currentId","nameLocation":"4917:9:14","nodeType":"VariableDeclaration","scope":2012,"src":"4909:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2005,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2003,"name":"_getCurrentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"4929:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4929:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4909:43:14"},{"eventCall":{"arguments":[{"id":2007,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"4976:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2006,"name":"Snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"4967:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4967:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"EmitStatement","src":"4962:24:14"},{"expression":{"id":2010,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"5003:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1995,"id":2011,"nodeType":"Return","src":"4996:16:14"}]},"documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"3701:1096:14","text":" @dev Creates a new snapshot and returns its snapshot id.\n Emits a {Snapshot} event that contains the same id.\n {_snapshot} is `internal` and you have to decide how to expose it externally. Its usage may be restricted to a\n set of accounts, for example using {AccessControl}, or it may be open to the public.\n [WARNING]\n ====\n While an open way of calling {_snapshot} is required for certain trust minimization mechanisms such as forking,\n you must consider that it can potentially be used by attackers in two ways.\n First, it can be used to increase the cost of retrieval of values from snapshots, although it will grow\n logarithmically thus rendering this attack ineffective in the long term. Second, it can be used to target\n specific accounts and increase the cost of ERC20 transfers for them, in the ways specified in the Gas Costs\n section above.\n We haven't measured the actual numbers; if this is something you're interested in please reach out to us.\n ===="},"id":2013,"implemented":true,"kind":"function","modifiers":[],"name":"_snapshot","nameLocation":"4811:9:14","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[],"src":"4820:2:14"},"returnParameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2013,"src":"4849:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"4849:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4848:9:14"},"scope":2284,"src":"4802:217:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2023,"nodeType":"Block","src":"5153:52:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2019,"name":"_currentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5170:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":2020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2809,"src":"5170:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2797_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2797_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5170:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2018,"id":2022,"nodeType":"Return","src":"5163:35:14"}]},"documentation":{"id":2014,"nodeType":"StructuredDocumentation","src":"5025:50:14","text":" @dev Get the current snapshotId"},"id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"_getCurrentSnapshotId","nameLocation":"5089:21:14","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[],"src":"5110:2:14"},"returnParameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"5144:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"5144:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5143:9:14"},"scope":2284,"src":"5080:125:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2052,"nodeType":"Block","src":"5408:166:14","statements":[{"assignments":[2035,2037],"declarations":[{"constant":false,"id":2035,"mutability":"mutable","name":"snapshotted","nameLocation":"5424:11:14","nodeType":"VariableDeclaration","scope":2052,"src":"5419:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2034,"name":"bool","nodeType":"ElementaryTypeName","src":"5419:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"value","nameLocation":"5445:5:14","nodeType":"VariableDeclaration","scope":2052,"src":"5437:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2036,"name":"uint256","nodeType":"ElementaryTypeName","src":"5437:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2044,"initialValue":{"arguments":[{"id":2039,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"5463:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2040,"name":"_accountBalanceSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"5475:24:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$1974_storage_$","typeString":"mapping(address => struct ERC20SnapshotUpgradeable.Snapshots storage ref)"}},"id":2042,"indexExpression":{"id":2041,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"5500:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Snapshots_$1974_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"}],"id":2038,"name":"_valueAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"5454:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_struct$_Snapshots_$1974_storage_ptr_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,struct ERC20SnapshotUpgradeable.Snapshots storage pointer) view returns (bool,uint256)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5454:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5418:91:14"},{"expression":{"condition":{"id":2045,"name":"snapshotted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"5527:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2048,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"5559:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2047,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"5549:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5549:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5527:40:14","trueExpression":{"id":2046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"5541:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2033,"id":2051,"nodeType":"Return","src":"5520:47:14"}]},"documentation":{"id":2025,"nodeType":"StructuredDocumentation","src":"5211:96:14","text":" @dev Retrieves the balance of `account` at the time `snapshotId` was created."},"functionSelector":"4ee2cd7e","id":2053,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfAt","nameLocation":"5321:11:14","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"account","nameLocation":"5341:7:14","nodeType":"VariableDeclaration","scope":2053,"src":"5333:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2026,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"snapshotId","nameLocation":"5358:10:14","nodeType":"VariableDeclaration","scope":2053,"src":"5350:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"5350:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5332:37:14"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2053,"src":"5399:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"5399:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5398:9:14"},"scope":2284,"src":"5312:262:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2076,"nodeType":"Block","src":"5754:149:14","statements":[{"assignments":[2062,2064],"declarations":[{"constant":false,"id":2062,"mutability":"mutable","name":"snapshotted","nameLocation":"5770:11:14","nodeType":"VariableDeclaration","scope":2076,"src":"5765:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2061,"name":"bool","nodeType":"ElementaryTypeName","src":"5765:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2064,"mutability":"mutable","name":"value","nameLocation":"5791:5:14","nodeType":"VariableDeclaration","scope":2076,"src":"5783:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"5783:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2069,"initialValue":{"arguments":[{"id":2066,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"5809:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2067,"name":"_totalSupplySnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"5821:21:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Snapshots_$1974_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"}],"id":2065,"name":"_valueAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"5800:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_struct$_Snapshots_$1974_storage_ptr_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,struct ERC20SnapshotUpgradeable.Snapshots storage pointer) view returns (bool,uint256)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5800:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5764:79:14"},{"expression":{"condition":{"id":2070,"name":"snapshotted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"5861:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2072,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"5883:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5883:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5861:35:14","trueExpression":{"id":2071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"5875:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2060,"id":2075,"nodeType":"Return","src":"5854:42:14"}]},"documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"5580:88:14","text":" @dev Retrieves the total supply at the time `snapshotId` was created."},"functionSelector":"981b24d0","id":2077,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupplyAt","nameLocation":"5682:13:14","nodeType":"FunctionDefinition","parameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"snapshotId","nameLocation":"5704:10:14","nodeType":"VariableDeclaration","scope":2077,"src":"5696:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2055,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5695:20:14"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2077,"src":"5745:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"5745:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5744:9:14"},"scope":2284,"src":"5673:230:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1777],"body":{"id":2134,"nodeType":"Block","src":"6244:474:14","statements":[{"expression":{"arguments":[{"id":2090,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"6281:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2091,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"6287:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2092,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"6291:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2087,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6254:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20SnapshotUpgradeable_$2284_$","typeString":"type(contract super ERC20SnapshotUpgradeable)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"6254:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6254:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2094,"nodeType":"ExpressionStatement","src":"6254:44:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2095,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"6313:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6329:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6321:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"6321:7:14","typeDescriptions":{}}},"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6321:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6313:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2109,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"6456:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6470:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6462:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2110,"name":"address","nodeType":"ElementaryTypeName","src":"6462:7:14","typeDescriptions":{}}},"id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6462:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6456:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2131,"nodeType":"Block","src":"6595:117:14","statements":[{"expression":{"arguments":[{"id":2124,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"6656:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2123,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"6633:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6633:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2126,"nodeType":"ExpressionStatement","src":"6633:28:14"},{"expression":{"arguments":[{"id":2128,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"6698:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2127,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"6675:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6675:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2130,"nodeType":"ExpressionStatement","src":"6675:26:14"}]},"id":2132,"nodeType":"IfStatement","src":"6452:260:14","trueBody":{"id":2122,"nodeType":"Block","src":"6474:115:14","statements":[{"expression":{"arguments":[{"id":2116,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"6531:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2115,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"6508:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6508:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2118,"nodeType":"ExpressionStatement","src":"6508:28:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2119,"name":"_updateTotalSupplySnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"6550:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6550:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2121,"nodeType":"ExpressionStatement","src":"6550:28:14"}]}},"id":2133,"nodeType":"IfStatement","src":"6309:403:14","trueBody":{"id":2108,"nodeType":"Block","src":"6333:113:14","statements":[{"expression":{"arguments":[{"id":2102,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"6390:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2101,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"6367:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6367:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2104,"nodeType":"ExpressionStatement","src":"6367:26:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2105,"name":"_updateTotalSupplySnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"6407:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6407:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2107,"nodeType":"ExpressionStatement","src":"6407:28:14"}]}}]},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"6125:20:14","nodeType":"FunctionDefinition","overrides":{"id":2085,"nodeType":"OverrideSpecifier","overrides":[],"src":"6235:8:14"},"parameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"from","nameLocation":"6163:4:14","nodeType":"VariableDeclaration","scope":2135,"src":"6155:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2078,"name":"address","nodeType":"ElementaryTypeName","src":"6155:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2081,"mutability":"mutable","name":"to","nameLocation":"6185:2:14","nodeType":"VariableDeclaration","scope":2135,"src":"6177:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"6177:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2083,"mutability":"mutable","name":"amount","nameLocation":"6205:6:14","nodeType":"VariableDeclaration","scope":2135,"src":"6197:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2082,"name":"uint256","nodeType":"ElementaryTypeName","src":"6197:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6145:72:14"},"returnParameters":{"id":2086,"nodeType":"ParameterList","parameters":[],"src":"6244:0:14"},"scope":2284,"src":"6116:602:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2189,"nodeType":"Block","src":"6828:1490:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2148,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"6846:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6859:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6846:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230536e617073686f743a2069642069732030","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6862:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6","typeString":"literal_string \"ERC20Snapshot: id is 0\""},"value":"ERC20Snapshot: id is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6","typeString":"literal_string \"ERC20Snapshot: id is 0\""}],"id":2147,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6838:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6838:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2153,"nodeType":"ExpressionStatement","src":"6838:49:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2155,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"6905:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2156,"name":"_getCurrentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"6919:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6919:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6905:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230536e617073686f743a206e6f6e6578697374656e74206964","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6944:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940","typeString":"literal_string \"ERC20Snapshot: nonexistent id\""},"value":"ERC20Snapshot: nonexistent id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940","typeString":"literal_string \"ERC20Snapshot: nonexistent id\""}],"id":2154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6897:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6897:79:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2161,"nodeType":"ExpressionStatement","src":"6897:79:14"},{"assignments":[2163],"declarations":[{"constant":false,"id":2163,"mutability":"mutable","name":"index","nameLocation":"8107:5:14","nodeType":"VariableDeclaration","scope":2189,"src":"8099:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"8099:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2169,"initialValue":{"arguments":[{"id":2167,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"8144:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2164,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"8115:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage pointer"}},"id":2165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":1970,"src":"8115:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"findUpperBound","nodeType":"MemberAccess","referencedDeclaration":2685,"src":"8115:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) view returns (uint256)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8115:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8099:56:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2170,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"8170:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2171,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"8179:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage pointer"}},"id":2172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":1970,"src":"8179:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8179:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8170:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2187,"nodeType":"Block","src":"8249:63:14","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8271:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"baseExpression":{"expression":{"id":2181,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"8277:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage pointer"}},"id":2182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":1973,"src":"8277:16:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2184,"indexExpression":{"id":2183,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"8294:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8277:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8270:31:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2146,"id":2186,"nodeType":"Return","src":"8263:38:14"}]},"id":2188,"nodeType":"IfStatement","src":"8166:146:14","trueBody":{"id":2179,"nodeType":"Block","src":"8201:42:14","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8223:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8230:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8222:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2146,"id":2178,"nodeType":"Return","src":"8215:17:14"}]}}]},"id":2190,"implemented":true,"kind":"function","modifiers":[],"name":"_valueAt","nameLocation":"6733:8:14","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"snapshotId","nameLocation":"6750:10:14","nodeType":"VariableDeclaration","scope":2190,"src":"6742:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2136,"name":"uint256","nodeType":"ElementaryTypeName","src":"6742:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"snapshots","nameLocation":"6780:9:14","nodeType":"VariableDeclaration","scope":2190,"src":"6762:27:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"},"typeName":{"id":2139,"nodeType":"UserDefinedTypeName","pathNode":{"id":2138,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":1974,"src":"6762:9:14"},"referencedDeclaration":1974,"src":"6762:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"}},"visibility":"internal"}],"src":"6741:49:14"},"returnParameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2190,"src":"6813:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2142,"name":"bool","nodeType":"ElementaryTypeName","src":"6813:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2190,"src":"6819:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2144,"name":"uint256","nodeType":"ElementaryTypeName","src":"6819:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6812:15:14"},"scope":2284,"src":"6724:1594:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2204,"nodeType":"Block","src":"8381:87:14","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2196,"name":"_accountBalanceSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"8407:24:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$1974_storage_$","typeString":"mapping(address => struct ERC20SnapshotUpgradeable.Snapshots storage ref)"}},"id":2198,"indexExpression":{"id":2197,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"8432:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8407:33:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"}},{"arguments":[{"id":2200,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"8452:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2199,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"8442:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8442:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Snapshots_$1974_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2195,"name":"_updateSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"8391:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Snapshots_$1974_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct ERC20SnapshotUpgradeable.Snapshots storage pointer,uint256)"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8391:70:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2203,"nodeType":"ExpressionStatement","src":"8391:70:14"}]},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"_updateAccountSnapshot","nameLocation":"8333:22:14","nodeType":"FunctionDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"account","nameLocation":"8364:7:14","nodeType":"VariableDeclaration","scope":2205,"src":"8356:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2191,"name":"address","nodeType":"ElementaryTypeName","src":"8356:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8355:17:14"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[],"src":"8381:0:14"},"scope":2284,"src":"8324:144:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2214,"nodeType":"Block","src":"8520:70:14","statements":[{"expression":{"arguments":[{"id":2209,"name":"_totalSupplySnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"8546:21:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2210,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"8569:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8569:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Snapshots_$1974_storage","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2208,"name":"_updateSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"8530:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Snapshots_$1974_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct ERC20SnapshotUpgradeable.Snapshots storage pointer,uint256)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8530:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2213,"nodeType":"ExpressionStatement","src":"8530:53:14"}]},"id":2215,"implemented":true,"kind":"function","modifiers":[],"name":"_updateTotalSupplySnapshot","nameLocation":"8483:26:14","nodeType":"FunctionDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[],"src":"8509:2:14"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[],"src":"8520:0:14"},"scope":2284,"src":"8474:116:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2252,"nodeType":"Block","src":"8680:220:14","statements":[{"assignments":[2224],"declarations":[{"constant":false,"id":2224,"mutability":"mutable","name":"currentId","nameLocation":"8698:9:14","nodeType":"VariableDeclaration","scope":2252,"src":"8690:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"8690:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2225,"name":"_getCurrentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"8710:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8710:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8690:43:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2229,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"8763:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage pointer"}},"id":2230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":1970,"src":"8763:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}],"id":2228,"name":"_lastSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"8747:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] storage pointer) view returns (uint256)"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8747:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2232,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"8780:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8747:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2251,"nodeType":"IfStatement","src":"8743:151:14","trueBody":{"id":2250,"nodeType":"Block","src":"8791:103:14","statements":[{"expression":{"arguments":[{"id":2239,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"8824:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2234,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"8805:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage pointer"}},"id":2237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":1970,"src":"8805:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"8805:18:14","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8805:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2241,"nodeType":"ExpressionStatement","src":"8805:29:14"},{"expression":{"arguments":[{"id":2247,"name":"currentValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"8870:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2242,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"8848:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots storage pointer"}},"id":2245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":1973,"src":"8848:16:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"8848:21:14","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8848:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2249,"nodeType":"ExpressionStatement","src":"8848:35:14"}]}}]},"id":2253,"implemented":true,"kind":"function","modifiers":[],"name":"_updateSnapshot","nameLocation":"8605:15:14","nodeType":"FunctionDefinition","parameters":{"id":2221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"snapshots","nameLocation":"8639:9:14","nodeType":"VariableDeclaration","scope":2253,"src":"8621:27:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"},"typeName":{"id":2217,"nodeType":"UserDefinedTypeName","pathNode":{"id":2216,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":1974,"src":"8621:9:14"},"referencedDeclaration":1974,"src":"8621:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$1974_storage_ptr","typeString":"struct ERC20SnapshotUpgradeable.Snapshots"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"currentValue","nameLocation":"8658:12:14","nodeType":"VariableDeclaration","scope":2253,"src":"8650:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"8650:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8620:51:14"},"returnParameters":{"id":2222,"nodeType":"ParameterList","parameters":[],"src":"8680:0:14"},"scope":2284,"src":"8596:304:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2277,"nodeType":"Block","src":"8985:127:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2261,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"8999:3:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8999:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9013:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8999:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2275,"nodeType":"Block","src":"9055:51:14","statements":[{"expression":{"baseExpression":{"id":2268,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"9076:3:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2273,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2269,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"9080:3:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9080:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9093:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9080:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9076:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2260,"id":2274,"nodeType":"Return","src":"9069:26:14"}]},"id":2276,"nodeType":"IfStatement","src":"8995:111:14","trueBody":{"id":2267,"nodeType":"Block","src":"9016:33:14","statements":[{"expression":{"hexValue":"30","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9037:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2260,"id":2266,"nodeType":"Return","src":"9030:8:14"}]}}]},"id":2278,"implemented":true,"kind":"function","modifiers":[],"name":"_lastSnapshotId","nameLocation":"8915:15:14","nodeType":"FunctionDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"ids","nameLocation":"8949:3:14","nodeType":"VariableDeclaration","scope":2278,"src":"8931:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"8931:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2255,"nodeType":"ArrayTypeName","src":"8931:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8930:23:14"},"returnParameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2278,"src":"8976:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"8976:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8975:9:14"},"scope":2284,"src":"8906:206:14","stateMutability":"view","virtual":false,"visibility":"private"},{"constant":false,"documentation":{"id":2279,"nodeType":"StructuredDocumentation","src":"9118:254:14","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2283,"mutability":"mutable","name":"__gap","nameLocation":"9397:5:14","nodeType":"VariableDeclaration","scope":2284,"src":"9377:25:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$46_storage","typeString":"uint256[46]"},"typeName":{"baseType":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"9377:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2282,"length":{"hexValue":"3436","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9385:2:14","typeDescriptions":{"typeIdentifier":"t_rational_46_by_1","typeString":"int_const 46"},"value":"46"},"nodeType":"ArrayTypeName","src":"9377:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$46_storage_ptr","typeString":"uint256[46]"}},"visibility":"private"}],"scope":2285,"src":"2484:6921:14","usedErrors":[]}],"src":"124:9282:14"},"id":14},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","exportedSymbols":{"IERC20MetadataUpgradeable":[2309],"IERC20Upgradeable":[1872]},"id":2310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2286,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:15"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":2287,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2310,"sourceUnit":1873,"src":"135:34:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2289,"name":"IERC20Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":1872,"src":"327:17:15"},"id":2290,"nodeType":"InheritanceSpecifier","src":"327:17:15"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2288,"nodeType":"StructuredDocumentation","src":"171:116:15","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2309,"linearizedBaseContracts":[2309,1872],"name":"IERC20MetadataUpgradeable","nameLocation":"298:25:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"351:54:15","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2296,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"419:4:15","nodeType":"FunctionDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[],"src":"423:2:15"},"returnParameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2296,"src":"449:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2293,"name":"string","nodeType":"ElementaryTypeName","src":"449:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"448:15:15"},"scope":2309,"src":"410:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"470:56:15","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2302,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"540:6:15","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[],"src":"546:2:15"},"returnParameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2302,"src":"572:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2299,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"571:15:15"},"scope":2309,"src":"531:56:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"593:65:15","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2308,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"672:8:15","nodeType":"FunctionDefinition","parameters":{"id":2304,"nodeType":"ParameterList","parameters":[],"src":"680:2:15"},"returnParameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2308,"src":"706:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2305,"name":"uint8","nodeType":"ElementaryTypeName","src":"706:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"705:7:15"},"scope":2309,"src":"663:50:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2310,"src":"288:427:15","usedErrors":[]}],"src":"110:606:15"},"id":15},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2593]},"id":2594,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2311,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"106:23:16"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2312,"nodeType":"StructuredDocumentation","src":"131:67:16","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2593,"linearizedBaseContracts":[2593],"name":"AddressUpgradeable","nameLocation":"207:18:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2326,"nodeType":"Block","src":"1257:254:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2320,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"1481:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1481:12:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1481:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1503:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1481:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2319,"id":2325,"nodeType":"Return","src":"1474:30:16"}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"232:954:16","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2327,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1200:10:16","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"account","nameLocation":"1219:7:16","nodeType":"VariableDeclaration","scope":2327,"src":"1211:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2314,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1210:17:16"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2327,"src":"1251:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2317,"name":"bool","nodeType":"ElementaryTypeName","src":"1251:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1250:6:16"},"scope":2593,"src":"1191:320:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2360,"nodeType":"Block","src":"2499:241:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2338,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2525:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2593","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2593","typeString":"library AddressUpgradeable"}],"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"2517:7:16","typeDescriptions":{}}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2517:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2341,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"2542:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2517:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2550:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2509:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2345,"nodeType":"ExpressionStatement","src":"2509:73:16"},{"assignments":[2347,null],"declarations":[{"constant":false,"id":2347,"mutability":"mutable","name":"success","nameLocation":"2599:7:16","nodeType":"VariableDeclaration","scope":2360,"src":"2594:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2346,"name":"bool","nodeType":"ElementaryTypeName","src":"2594:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2354,"initialValue":{"arguments":[{"hexValue":"","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2642:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2348,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"2612:9:16","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2612:14:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2350,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"2634:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2612:29:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2612:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2593:52:16"},{"expression":{"arguments":[{"id":2356,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2663:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2672:60:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2355,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2655:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2655:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2359,"nodeType":"ExpressionStatement","src":"2655:78:16"}]},"documentation":{"id":2328,"nodeType":"StructuredDocumentation","src":"1517:906:16","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2361,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2437:9:16","nodeType":"FunctionDefinition","parameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"recipient","nameLocation":"2463:9:16","nodeType":"VariableDeclaration","scope":2361,"src":"2447:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2329,"name":"address","nodeType":"ElementaryTypeName","src":"2447:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2332,"mutability":"mutable","name":"amount","nameLocation":"2482:6:16","nodeType":"VariableDeclaration","scope":2361,"src":"2474:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2474:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2446:43:16"},"returnParameters":{"id":2334,"nodeType":"ParameterList","parameters":[],"src":"2499:0:16"},"scope":2593,"src":"2428:312:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2378,"nodeType":"Block","src":"3571:96:16","statements":[{"expression":{"arguments":[{"id":2372,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"3610:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2373,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"3618:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3624:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3627:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2371,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2419,2463],"referencedDeclaration":2463,"src":"3588:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3588:72:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2370,"id":2377,"nodeType":"Return","src":"3581:79:16"}]},"documentation":{"id":2362,"nodeType":"StructuredDocumentation","src":"2746:731:16","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2379,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3491:12:16","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"target","nameLocation":"3512:6:16","nodeType":"VariableDeclaration","scope":2379,"src":"3504:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"3504:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"data","nameLocation":"3533:4:16","nodeType":"VariableDeclaration","scope":2379,"src":"3520:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2365,"name":"bytes","nodeType":"ElementaryTypeName","src":"3520:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3503:35:16"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2379,"src":"3557:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2368,"name":"bytes","nodeType":"ElementaryTypeName","src":"3557:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3556:14:16"},"scope":2593,"src":"3482:185:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2398,"nodeType":"Block","src":"4036:76:16","statements":[{"expression":{"arguments":[{"id":2392,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"4075:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2393,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"4083:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4089:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2395,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"4092:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2391,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2419,2463],"referencedDeclaration":2463,"src":"4053:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4053:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2390,"id":2397,"nodeType":"Return","src":"4046:59:16"}]},"documentation":{"id":2380,"nodeType":"StructuredDocumentation","src":"3673:211:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2399,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3898:12:16","nodeType":"FunctionDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"target","nameLocation":"3928:6:16","nodeType":"VariableDeclaration","scope":2399,"src":"3920:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2381,"name":"address","nodeType":"ElementaryTypeName","src":"3920:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"data","nameLocation":"3957:4:16","nodeType":"VariableDeclaration","scope":2399,"src":"3944:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2383,"name":"bytes","nodeType":"ElementaryTypeName","src":"3944:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"errorMessage","nameLocation":"3985:12:16","nodeType":"VariableDeclaration","scope":2399,"src":"3971:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2385,"name":"string","nodeType":"ElementaryTypeName","src":"3971:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3910:93:16"},"returnParameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2399,"src":"4022:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2388,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4021:14:16"},"scope":2593,"src":"3889:223:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2418,"nodeType":"Block","src":"4617:111:16","statements":[{"expression":{"arguments":[{"id":2412,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"4656:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2413,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"4664:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"4670:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4677:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2411,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2419,2463],"referencedDeclaration":2463,"src":"4634:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4634:87:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2410,"id":2417,"nodeType":"Return","src":"4627:94:16"}]},"documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"4118:351:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2419,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4483:21:16","nodeType":"FunctionDefinition","parameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"target","nameLocation":"4522:6:16","nodeType":"VariableDeclaration","scope":2419,"src":"4514:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2401,"name":"address","nodeType":"ElementaryTypeName","src":"4514:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"data","nameLocation":"4551:4:16","nodeType":"VariableDeclaration","scope":2419,"src":"4538:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2403,"name":"bytes","nodeType":"ElementaryTypeName","src":"4538:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2406,"mutability":"mutable","name":"value","nameLocation":"4573:5:16","nodeType":"VariableDeclaration","scope":2419,"src":"4565:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"4565:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4504:80:16"},"returnParameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2419,"src":"4603:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2408,"name":"bytes","nodeType":"ElementaryTypeName","src":"4603:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4602:14:16"},"scope":2593,"src":"4474:254:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2462,"nodeType":"Block","src":"5155:267:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2436,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5181:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2593","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2593","typeString":"library AddressUpgradeable"}],"id":2435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5173:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2434,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:16","typeDescriptions":{}}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5173:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5173:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"5198:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5173:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5205:40:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5165:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5165:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2443,"nodeType":"ExpressionStatement","src":"5165:81:16"},{"assignments":[2445,2447],"declarations":[{"constant":false,"id":2445,"mutability":"mutable","name":"success","nameLocation":"5262:7:16","nodeType":"VariableDeclaration","scope":2462,"src":"5257:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2444,"name":"bool","nodeType":"ElementaryTypeName","src":"5257:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"returndata","nameLocation":"5284:10:16","nodeType":"VariableDeclaration","scope":2462,"src":"5271:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2446,"name":"bytes","nodeType":"ElementaryTypeName","src":"5271:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2454,"initialValue":{"arguments":[{"id":2452,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"5324:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2448,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"5298:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5298:11:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"5317:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5298:25:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5298:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5256:73:16"},{"expression":{"arguments":[{"id":2456,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"5373:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2457,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"5381:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2458,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"5390:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2459,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"5402:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2455,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"5346:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5346:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2432,"id":2461,"nodeType":"Return","src":"5339:76:16"}]},"documentation":{"id":2420,"nodeType":"StructuredDocumentation","src":"4734:237:16","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2463,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4985:21:16","nodeType":"FunctionDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"target","nameLocation":"5024:6:16","nodeType":"VariableDeclaration","scope":2463,"src":"5016:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2421,"name":"address","nodeType":"ElementaryTypeName","src":"5016:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2424,"mutability":"mutable","name":"data","nameLocation":"5053:4:16","nodeType":"VariableDeclaration","scope":2463,"src":"5040:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2423,"name":"bytes","nodeType":"ElementaryTypeName","src":"5040:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"value","nameLocation":"5075:5:16","nodeType":"VariableDeclaration","scope":2463,"src":"5067:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"5067:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"errorMessage","nameLocation":"5104:12:16","nodeType":"VariableDeclaration","scope":2463,"src":"5090:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2427,"name":"string","nodeType":"ElementaryTypeName","src":"5090:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5006:116:16"},"returnParameters":{"id":2432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2463,"src":"5141:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2430,"name":"bytes","nodeType":"ElementaryTypeName","src":"5141:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5140:14:16"},"scope":2593,"src":"4976:446:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2479,"nodeType":"Block","src":"5699:97:16","statements":[{"expression":{"arguments":[{"id":2474,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"5735:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2475,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"5743:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5749:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2473,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2480,2509],"referencedDeclaration":2509,"src":"5716:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5716:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2472,"id":2478,"nodeType":"Return","src":"5709:80:16"}]},"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"5428:166:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5608:18:16","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"target","nameLocation":"5635:6:16","nodeType":"VariableDeclaration","scope":2480,"src":"5627:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2465,"name":"address","nodeType":"ElementaryTypeName","src":"5627:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"data","nameLocation":"5656:4:16","nodeType":"VariableDeclaration","scope":2480,"src":"5643:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2467,"name":"bytes","nodeType":"ElementaryTypeName","src":"5643:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5626:35:16"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2480,"src":"5685:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2470,"name":"bytes","nodeType":"ElementaryTypeName","src":"5685:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5684:14:16"},"scope":2593,"src":"5599:197:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2508,"nodeType":"Block","src":"6138:168:16","statements":[{"assignments":[2493,2495],"declarations":[{"constant":false,"id":2493,"mutability":"mutable","name":"success","nameLocation":"6154:7:16","nodeType":"VariableDeclaration","scope":2508,"src":"6149:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2492,"name":"bool","nodeType":"ElementaryTypeName","src":"6149:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"returndata","nameLocation":"6176:10:16","nodeType":"VariableDeclaration","scope":2508,"src":"6163:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2494,"name":"bytes","nodeType":"ElementaryTypeName","src":"6163:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2500,"initialValue":{"arguments":[{"id":2498,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"6208:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2496,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"6190:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6190:17:16","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6190:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6148:65:16"},{"expression":{"arguments":[{"id":2502,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"6257:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2503,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"6265:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2504,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"6274:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2505,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"6286:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2501,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"6230:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6230:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2491,"id":2507,"nodeType":"Return","src":"6223:76:16"}]},"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"5802:173:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2509,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5989:18:16","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"target","nameLocation":"6025:6:16","nodeType":"VariableDeclaration","scope":2509,"src":"6017:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2482,"name":"address","nodeType":"ElementaryTypeName","src":"6017:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"data","nameLocation":"6054:4:16","nodeType":"VariableDeclaration","scope":2509,"src":"6041:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2484,"name":"bytes","nodeType":"ElementaryTypeName","src":"6041:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"errorMessage","nameLocation":"6082:12:16","nodeType":"VariableDeclaration","scope":2509,"src":"6068:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2486,"name":"string","nodeType":"ElementaryTypeName","src":"6068:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6007:93:16"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2509,"src":"6124:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2489,"name":"bytes","nodeType":"ElementaryTypeName","src":"6124:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6123:14:16"},"scope":2593,"src":"5980:326:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2547,"nodeType":"Block","src":"6788:434:16","statements":[{"condition":{"id":2523,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"6802:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2545,"nodeType":"Block","src":"7158:58:16","statements":[{"expression":{"arguments":[{"id":2541,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"7180:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2542,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"7192:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2540,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"7172:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7172:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2544,"nodeType":"ExpressionStatement","src":"7172:33:16"}]},"id":2546,"nodeType":"IfStatement","src":"6798:418:16","trueBody":{"id":2539,"nodeType":"Block","src":"6811:341:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2524,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"6829:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6829:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6850:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6829:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2536,"nodeType":"IfStatement","src":"6825:286:16","trueBody":{"id":2535,"nodeType":"Block","src":"6853:258:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2530,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"7055:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2529,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"7044:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7044:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7064:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7036:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7036:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2534,"nodeType":"ExpressionStatement","src":"7036:60:16"}]}},{"expression":{"id":2537,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"7131:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2522,"id":2538,"nodeType":"Return","src":"7124:17:16"}]}}]},"documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"6312:277:16","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2548,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"6603:26:16","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"target","nameLocation":"6647:6:16","nodeType":"VariableDeclaration","scope":2548,"src":"6639:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2511,"name":"address","nodeType":"ElementaryTypeName","src":"6639:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"success","nameLocation":"6668:7:16","nodeType":"VariableDeclaration","scope":2548,"src":"6663:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2513,"name":"bool","nodeType":"ElementaryTypeName","src":"6663:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2516,"mutability":"mutable","name":"returndata","nameLocation":"6698:10:16","nodeType":"VariableDeclaration","scope":2548,"src":"6685:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2515,"name":"bytes","nodeType":"ElementaryTypeName","src":"6685:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2518,"mutability":"mutable","name":"errorMessage","nameLocation":"6732:12:16","nodeType":"VariableDeclaration","scope":2548,"src":"6718:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2517,"name":"string","nodeType":"ElementaryTypeName","src":"6718:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6629:121:16"},"returnParameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2548,"src":"6774:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2520,"name":"bytes","nodeType":"ElementaryTypeName","src":"6774:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6773:14:16"},"scope":2593,"src":"6594:628:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2571,"nodeType":"Block","src":"7603:135:16","statements":[{"condition":{"id":2560,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"7617:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2569,"nodeType":"Block","src":"7674:58:16","statements":[{"expression":{"arguments":[{"id":2565,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"7696:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2566,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"7708:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2564,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"7688:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7688:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2568,"nodeType":"ExpressionStatement","src":"7688:33:16"}]},"id":2570,"nodeType":"IfStatement","src":"7613:119:16","trueBody":{"id":2563,"nodeType":"Block","src":"7626:42:16","statements":[{"expression":{"id":2561,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"7647:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2559,"id":2562,"nodeType":"Return","src":"7640:17:16"}]}}]},"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"7228:210:16","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2572,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7452:16:16","nodeType":"FunctionDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"success","nameLocation":"7483:7:16","nodeType":"VariableDeclaration","scope":2572,"src":"7478:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2550,"name":"bool","nodeType":"ElementaryTypeName","src":"7478:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2553,"mutability":"mutable","name":"returndata","nameLocation":"7513:10:16","nodeType":"VariableDeclaration","scope":2572,"src":"7500:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2552,"name":"bytes","nodeType":"ElementaryTypeName","src":"7500:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2555,"mutability":"mutable","name":"errorMessage","nameLocation":"7547:12:16","nodeType":"VariableDeclaration","scope":2572,"src":"7533:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2554,"name":"string","nodeType":"ElementaryTypeName","src":"7533:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7468:97:16"},"returnParameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2572,"src":"7589:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2557,"name":"bytes","nodeType":"ElementaryTypeName","src":"7589:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7588:14:16"},"scope":2593,"src":"7443:295:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2591,"nodeType":"Block","src":"7827:457:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2579,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"7903:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7903:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7923:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7903:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2589,"nodeType":"Block","src":"8233:45:16","statements":[{"expression":{"arguments":[{"id":2586,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"8254:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2585,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8247:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8247:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2588,"nodeType":"ExpressionStatement","src":"8247:20:16"}]},"id":2590,"nodeType":"IfStatement","src":"7899:379:16","trueBody":{"id":2584,"nodeType":"Block","src":"7926:301:16","statements":[{"AST":{"nodeType":"YulBlock","src":"8084:133:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8102:40:16","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8131:10:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8125:5:16"},"nodeType":"YulFunctionCall","src":"8125:17:16"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8106:15:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8170:2:16","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8174:10:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8166:3:16"},"nodeType":"YulFunctionCall","src":"8166:19:16"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8187:15:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8159:6:16"},"nodeType":"YulFunctionCall","src":"8159:44:16"},"nodeType":"YulExpressionStatement","src":"8159:44:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":2574,"isOffset":false,"isSlot":false,"src":"8131:10:16","valueSize":1},{"declaration":2574,"isOffset":false,"isSlot":false,"src":"8174:10:16","valueSize":1}],"id":2583,"nodeType":"InlineAssembly","src":"8075:142:16"}]}}]},"id":2592,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"7753:7:16","nodeType":"FunctionDefinition","parameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"returndata","nameLocation":"7774:10:16","nodeType":"VariableDeclaration","scope":2592,"src":"7761:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2573,"name":"bytes","nodeType":"ElementaryTypeName","src":"7761:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"errorMessage","nameLocation":"7800:12:16","nodeType":"VariableDeclaration","scope":2592,"src":"7786:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2575,"name":"string","nodeType":"ElementaryTypeName","src":"7786:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7760:53:16"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[],"src":"7827:0:16"},"scope":2593,"src":"7744:540:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2594,"src":"199:8087:16","usedErrors":[]}],"src":"106:8181:16"},"id":16},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol","exportedSymbols":{"ArraysUpgradeable":[2749],"MathUpgradeable":[3790],"StorageSlotUpgradeable":[2925]},"id":2750,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2595,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:17"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"./StorageSlotUpgradeable.sol","id":2596,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2750,"sourceUnit":2926,"src":"130:38:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","id":2597,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2750,"sourceUnit":3791,"src":"169:36:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"207:63:17","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":2749,"linearizedBaseContracts":[2749],"name":"ArraysUpgradeable","nameLocation":"279:17:17","nodeType":"ContractDefinition","nodes":[{"id":2601,"libraryName":{"id":2599,"name":"StorageSlotUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":2925,"src":"309:22:17"},"nodeType":"UsingForDirective","src":"303:41:17","typeName":{"id":2600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"336:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":2684,"nodeType":"Block","src":"860:845:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2612,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"874:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"874:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"890:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"874:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2619,"nodeType":"IfStatement","src":"870:56:17","trueBody":{"id":2618,"nodeType":"Block","src":"893:33:17","statements":[{"expression":{"hexValue":"30","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"914:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2611,"id":2617,"nodeType":"Return","src":"907:8:17"}]}},{"assignments":[2621],"declarations":[{"constant":false,"id":2621,"mutability":"mutable","name":"low","nameLocation":"944:3:17","nodeType":"VariableDeclaration","scope":2684,"src":"936:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2623,"initialValue":{"hexValue":"30","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"936:15:17"},{"assignments":[2625],"declarations":[{"constant":false,"id":2625,"mutability":"mutable","name":"high","nameLocation":"969:4:17","nodeType":"VariableDeclaration","scope":2684,"src":"961:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2628,"initialValue":{"expression":{"id":2626,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"976:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"976:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"961:27:17"},{"body":{"id":2660,"nodeType":"Block","src":"1018:426:17","statements":[{"assignments":[2633],"declarations":[{"constant":false,"id":2633,"mutability":"mutable","name":"mid","nameLocation":"1040:3:17","nodeType":"VariableDeclaration","scope":2660,"src":"1032:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1032:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2639,"initialValue":{"arguments":[{"id":2636,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"1070:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2637,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"1075:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2634,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"1046:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$3790_$","typeString":"type(library MathUpgradeable)"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":2991,"src":"1046:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1046:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1032:48:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2641,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"1310:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2642,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"1317:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2640,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2706,2727,2748],"referencedDeclaration":2748,"src":"1297:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2880_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlotUpgradeable.Uint256Slot storage pointer)"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1297:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2880_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot storage pointer"}},"id":2644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2879,"src":"1297:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2645,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"1330:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1297:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2658,"nodeType":"Block","src":"1388:46:17","statements":[{"expression":{"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2652,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"1406:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"1412:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1418:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1412:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1406:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2657,"nodeType":"ExpressionStatement","src":"1406:13:17"}]},"id":2659,"nodeType":"IfStatement","src":"1293:141:17","trueBody":{"id":2651,"nodeType":"Block","src":"1339:43:17","statements":[{"expression":{"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2647,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"1357:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2648,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"1364:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1357:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2650,"nodeType":"ExpressionStatement","src":"1357:10:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2629,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"1006:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2630,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"1012:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1006:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2661,"nodeType":"WhileStatement","src":"999:445:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2662,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"1561:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1567:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1561:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2666,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"1585:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2667,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"1592:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1598:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1592:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2665,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2706,2727,2748],"referencedDeclaration":2748,"src":"1572:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$2880_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlotUpgradeable.Uint256Slot storage pointer)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1572:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2880_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot storage pointer"}},"id":2671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2879,"src":"1572:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2672,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"1610:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1572:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1561:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2682,"nodeType":"Block","src":"1664:35:17","statements":[{"expression":{"id":2680,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"1685:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2611,"id":2681,"nodeType":"Return","src":"1678:10:17"}]},"id":2683,"nodeType":"IfStatement","src":"1557:142:17","trueBody":{"id":2679,"nodeType":"Block","src":"1619:39:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2675,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"1640:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1646:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1640:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2611,"id":2678,"nodeType":"Return","src":"1633:14:17"}]}}]},"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"350:407:17","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."},"id":2685,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"771:14:17","nodeType":"FunctionDefinition","parameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"array","nameLocation":"804:5:17","nodeType":"VariableDeclaration","scope":2685,"src":"786:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2604,"nodeType":"ArrayTypeName","src":"786:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"element","nameLocation":"819:7:17","nodeType":"VariableDeclaration","scope":2685,"src":"811:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"811:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"785:42:17"},"returnParameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2685,"src":"851:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2609,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"850:9:17"},"scope":2749,"src":"762:943:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2705,"nodeType":"Block","src":"2032:220:17","statements":[{"assignments":[2698],"declarations":[{"constant":false,"id":2698,"mutability":"mutable","name":"slot","nameLocation":"2050:4:17","nodeType":"VariableDeclaration","scope":2705,"src":"2042:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2042:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2699,"nodeType":"VariableDeclarationStatement","src":"2042:12:17"},{"AST":{"nodeType":"YulBlock","src":"2116:92:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2137:1:17","type":"","value":"0"},{"name":"arr.slot","nodeType":"YulIdentifier","src":"2140:8:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2130:6:17"},"nodeType":"YulFunctionCall","src":"2130:19:17"},"nodeType":"YulExpressionStatement","src":"2130:19:17"},{"nodeType":"YulAssignment","src":"2162:36:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2184:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2187:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2174:9:17"},"nodeType":"YulFunctionCall","src":"2174:18:17"},{"name":"pos","nodeType":"YulIdentifier","src":"2194:3:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2170:3:17"},"nodeType":"YulFunctionCall","src":"2170:28:17"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"2162:4:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":2689,"isOffset":false,"isSlot":true,"src":"2140:8:17","suffix":"slot","valueSize":1},{"declaration":2691,"isOffset":false,"isSlot":false,"src":"2194:3:17","valueSize":1},{"declaration":2698,"isOffset":false,"isSlot":false,"src":"2162:4:17","valueSize":1}],"id":2700,"nodeType":"InlineAssembly","src":"2107:101:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2701,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"2224:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"2224:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2871_storage_ptr_$bound_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2224:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2871_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"functionReturnParameters":2696,"id":2704,"nodeType":"Return","src":"2217:28:17"}]},"documentation":{"id":2686,"nodeType":"StructuredDocumentation","src":"1711:191:17","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"1916:12:17","nodeType":"FunctionDefinition","parameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"arr","nameLocation":"1947:3:17","nodeType":"VariableDeclaration","scope":2706,"src":"1929:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"1929:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2688,"nodeType":"ArrayTypeName","src":"1929:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2691,"mutability":"mutable","name":"pos","nameLocation":"1960:3:17","nodeType":"VariableDeclaration","scope":2706,"src":"1952:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1952:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1928:36:17"},"returnParameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2706,"src":"1988:42:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2871_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":2694,"nodeType":"UserDefinedTypeName","pathNode":{"id":2693,"name":"StorageSlotUpgradeable.AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":2871,"src":"1988:34:17"},"referencedDeclaration":2871,"src":"1988:34:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2871_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1987:44:17"},"scope":2749,"src":"1907:345:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2726,"nodeType":"Block","src":"2579:220:17","statements":[{"assignments":[2719],"declarations":[{"constant":false,"id":2719,"mutability":"mutable","name":"slot","nameLocation":"2597:4:17","nodeType":"VariableDeclaration","scope":2726,"src":"2589:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2589:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2720,"nodeType":"VariableDeclarationStatement","src":"2589:12:17"},{"AST":{"nodeType":"YulBlock","src":"2663:92:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:17","type":"","value":"0"},{"name":"arr.slot","nodeType":"YulIdentifier","src":"2687:8:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:17"},"nodeType":"YulFunctionCall","src":"2677:19:17"},"nodeType":"YulExpressionStatement","src":"2677:19:17"},{"nodeType":"YulAssignment","src":"2709:36:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2731:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2734:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2721:9:17"},"nodeType":"YulFunctionCall","src":"2721:18:17"},{"name":"pos","nodeType":"YulIdentifier","src":"2741:3:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2717:3:17"},"nodeType":"YulFunctionCall","src":"2717:28:17"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"2709:4:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":2710,"isOffset":false,"isSlot":true,"src":"2687:8:17","suffix":"slot","valueSize":1},{"declaration":2712,"isOffset":false,"isSlot":false,"src":"2741:3:17","valueSize":1},{"declaration":2719,"isOffset":false,"isSlot":false,"src":"2709:4:17","valueSize":1}],"id":2721,"nodeType":"InlineAssembly","src":"2654:101:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2722,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"2771:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":2913,"src":"2771:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$2877_storage_ptr_$bound_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.Bytes32Slot storage pointer)"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2771:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2877_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot storage pointer"}},"functionReturnParameters":2717,"id":2725,"nodeType":"Return","src":"2764:28:17"}]},"documentation":{"id":2707,"nodeType":"StructuredDocumentation","src":"2258:191:17","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2727,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"2463:12:17","nodeType":"FunctionDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"arr","nameLocation":"2494:3:17","nodeType":"VariableDeclaration","scope":2727,"src":"2476:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2476:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2709,"nodeType":"ArrayTypeName","src":"2476:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"pos","nameLocation":"2507:3:17","nodeType":"VariableDeclaration","scope":2727,"src":"2499:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2475:36:17"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2727,"src":"2535:42:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2877_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":2715,"nodeType":"UserDefinedTypeName","pathNode":{"id":2714,"name":"StorageSlotUpgradeable.Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":2877,"src":"2535:34:17"},"referencedDeclaration":2877,"src":"2535:34:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2877_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2534:44:17"},"scope":2749,"src":"2454:345:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2747,"nodeType":"Block","src":"3126:220:17","statements":[{"assignments":[2740],"declarations":[{"constant":false,"id":2740,"mutability":"mutable","name":"slot","nameLocation":"3144:4:17","nodeType":"VariableDeclaration","scope":2747,"src":"3136:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2741,"nodeType":"VariableDeclarationStatement","src":"3136:12:17"},{"AST":{"nodeType":"YulBlock","src":"3210:92:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3231:1:17","type":"","value":"0"},{"name":"arr.slot","nodeType":"YulIdentifier","src":"3234:8:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3224:6:17"},"nodeType":"YulFunctionCall","src":"3224:19:17"},"nodeType":"YulExpressionStatement","src":"3224:19:17"},{"nodeType":"YulAssignment","src":"3256:36:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3278:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3281:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3268:9:17"},"nodeType":"YulFunctionCall","src":"3268:18:17"},{"name":"pos","nodeType":"YulIdentifier","src":"3288:3:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3264:3:17"},"nodeType":"YulFunctionCall","src":"3264:28:17"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"3256:4:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":2731,"isOffset":false,"isSlot":true,"src":"3234:8:17","suffix":"slot","valueSize":1},{"declaration":2733,"isOffset":false,"isSlot":false,"src":"3288:3:17","valueSize":1},{"declaration":2740,"isOffset":false,"isSlot":false,"src":"3256:4:17","valueSize":1}],"id":2742,"nodeType":"InlineAssembly","src":"3201:101:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2743,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"3318:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":2924,"src":"3318:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$2880_storage_ptr_$bound_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.Uint256Slot storage pointer)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3318:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2880_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot storage pointer"}},"functionReturnParameters":2738,"id":2746,"nodeType":"Return","src":"3311:28:17"}]},"documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"2805:191:17","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2748,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"3010:12:17","nodeType":"FunctionDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"arr","nameLocation":"3041:3:17","nodeType":"VariableDeclaration","scope":2748,"src":"3023:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"3023:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2730,"nodeType":"ArrayTypeName","src":"3023:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2733,"mutability":"mutable","name":"pos","nameLocation":"3054:3:17","nodeType":"VariableDeclaration","scope":2748,"src":"3046:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"3046:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3022:36:17"},"returnParameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2748,"src":"3082:42:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2880_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":2736,"nodeType":"UserDefinedTypeName","pathNode":{"id":2735,"name":"StorageSlotUpgradeable.Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":2880,"src":"3082:34:17"},"referencedDeclaration":2880,"src":"3082:34:17","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2880_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"3081:44:17"},"scope":2749,"src":"3001:345:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2750,"src":"271:3077:17","usedErrors":[]}],"src":"105:3244:17"},"id":17},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2593],"ContextUpgradeable":[2791],"Initializable":[919]},"id":2792,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2751,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:18"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2752,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2792,"sourceUnit":920,"src":"110:42:18","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2754,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":919,"src":"691:13:18"},"id":2755,"nodeType":"InheritanceSpecifier","src":"691:13:18"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2753,"nodeType":"StructuredDocumentation","src":"154:496:18","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2791,"linearizedBaseContracts":[2791,919],"name":"ContextUpgradeable","nameLocation":"669:18:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":2760,"nodeType":"Block","src":"763:7:18","statements":[]},"id":2761,"implemented":true,"kind":"function","modifiers":[{"id":2758,"kind":"modifierInvocation","modifierName":{"id":2757,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"746:16:18"},"nodeType":"ModifierInvocation","src":"746:16:18"}],"name":"__Context_init","nameLocation":"720:14:18","nodeType":"FunctionDefinition","parameters":{"id":2756,"nodeType":"ParameterList","parameters":[],"src":"734:2:18"},"returnParameters":{"id":2759,"nodeType":"ParameterList","parameters":[],"src":"763:0:18"},"scope":2791,"src":"711:59:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2766,"nodeType":"Block","src":"838:7:18","statements":[]},"id":2767,"implemented":true,"kind":"function","modifiers":[{"id":2764,"kind":"modifierInvocation","modifierName":{"id":2763,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":864,"src":"821:16:18"},"nodeType":"ModifierInvocation","src":"821:16:18"}],"name":"__Context_init_unchained","nameLocation":"785:24:18","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[],"src":"809:2:18"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[],"src":"838:0:18"},"scope":2791,"src":"776:69:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2775,"nodeType":"Block","src":"912:34:18","statements":[{"expression":{"expression":{"id":2772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"929:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2771,"id":2774,"nodeType":"Return","src":"922:17:18"}]},"id":2776,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:18","nodeType":"FunctionDefinition","parameters":{"id":2768,"nodeType":"ParameterList","parameters":[],"src":"869:2:18"},"returnParameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2776,"src":"903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:18"},"scope":2791,"src":"850:96:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2784,"nodeType":"Block","src":"1019:32:18","statements":[{"expression":{"expression":{"id":2781,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"1036:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2780,"id":2783,"nodeType":"Return","src":"1029:15:18"}]},"id":2785,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:18","nodeType":"FunctionDefinition","parameters":{"id":2777,"nodeType":"ParameterList","parameters":[],"src":"969:2:18"},"returnParameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2785,"src":"1003:14:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2778,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:18"},"scope":2791,"src":"952:99:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2786,"nodeType":"StructuredDocumentation","src":"1057:254:18","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2790,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:18","nodeType":"VariableDeclaration","scope":2791,"src":"1316:25:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2789,"length":{"hexValue":"3530","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:18","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2792,"src":"651:693:18","usedErrors":[]}],"src":"86:1259:18"},"id":18},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","exportedSymbols":{"CountersUpgradeable":[2865]},"id":2866,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2793,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:19"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"112:311:19","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2865,"linearizedBaseContracts":[2865],"name":"CountersUpgradeable","nameLocation":"432:19:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CountersUpgradeable.Counter","id":2797,"members":[{"constant":false,"id":2796,"mutability":"mutable","name":"_value","nameLocation":"805:6:19","nodeType":"VariableDeclaration","scope":2797,"src":"797:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"465:7:19","nodeType":"StructDefinition","scope":2865,"src":"458:374:19","visibility":"public"},{"body":{"id":2808,"nodeType":"Block","src":"912:38:19","statements":[{"expression":{"expression":{"id":2805,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"929:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2796,"src":"929:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2804,"id":2807,"nodeType":"Return","src":"922:21:19"}]},"id":2809,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"847:7:19","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"counter","nameLocation":"871:7:19","nodeType":"VariableDeclaration","scope":2809,"src":"855:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2799,"nodeType":"UserDefinedTypeName","pathNode":{"id":2798,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2797,"src":"855:7:19"},"referencedDeclaration":2797,"src":"855:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"854:25:19"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2809,"src":"903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"902:9:19"},"scope":2865,"src":"838:112:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2822,"nodeType":"Block","src":"1009:70:19","statements":[{"id":2821,"nodeType":"UncheckedBlock","src":"1019:54:19","statements":[{"expression":{"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2815,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"1043:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2796,"src":"1043:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1043:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2820,"nodeType":"ExpressionStatement","src":"1043:19:19"}]}]},"id":2823,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"965:9:19","nodeType":"FunctionDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"counter","nameLocation":"991:7:19","nodeType":"VariableDeclaration","scope":2823,"src":"975:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2811,"nodeType":"UserDefinedTypeName","pathNode":{"id":2810,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2797,"src":"975:7:19"},"referencedDeclaration":2797,"src":"975:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"974:25:19"},"returnParameters":{"id":2814,"nodeType":"ParameterList","parameters":[],"src":"1009:0:19"},"scope":2865,"src":"956:123:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2850,"nodeType":"Block","src":"1138:176:19","statements":[{"assignments":[2830],"declarations":[{"constant":false,"id":2830,"mutability":"mutable","name":"value","nameLocation":"1156:5:19","nodeType":"VariableDeclaration","scope":2850,"src":"1148:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2833,"initialValue":{"expression":{"id":2831,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"1164:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2796,"src":"1164:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1148:30:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"1196:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1204:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1196:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:29:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":2834,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1188:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1188:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2840,"nodeType":"ExpressionStatement","src":"1188:49:19"},{"id":2849,"nodeType":"UncheckedBlock","src":"1247:61:19","statements":[{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2841,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"1271:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2796,"src":"1271:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"1288:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1296:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1288:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1271:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2848,"nodeType":"ExpressionStatement","src":"1271:26:19"}]}]},"id":2851,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1094:9:19","nodeType":"FunctionDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"counter","nameLocation":"1120:7:19","nodeType":"VariableDeclaration","scope":2851,"src":"1104:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2825,"nodeType":"UserDefinedTypeName","pathNode":{"id":2824,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2797,"src":"1104:7:19"},"referencedDeclaration":2797,"src":"1104:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1103:25:19"},"returnParameters":{"id":2828,"nodeType":"ParameterList","parameters":[],"src":"1138:0:19"},"scope":2865,"src":"1085:229:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2863,"nodeType":"Block","src":"1369:35:19","statements":[{"expression":{"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2857,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"1379:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2796,"src":"1379:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1379:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2862,"nodeType":"ExpressionStatement","src":"1379:18:19"}]},"id":2864,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1329:5:19","nodeType":"FunctionDefinition","parameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"counter","nameLocation":"1351:7:19","nodeType":"VariableDeclaration","scope":2864,"src":"1335:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2853,"nodeType":"UserDefinedTypeName","pathNode":{"id":2852,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2797,"src":"1335:7:19"},"referencedDeclaration":2797,"src":"1335:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2797_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1334:25:19"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[],"src":"1369:0:19"},"scope":2865,"src":"1320:84:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2866,"src":"424:982:19","usedErrors":[]}],"src":"87:1320:19"},"id":19},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[2925]},"id":2926,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2867,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:20"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2868,"nodeType":"StructuredDocumentation","src":"130:1148:20","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"},"fullyImplemented":true,"id":2925,"linearizedBaseContracts":[2925],"name":"StorageSlotUpgradeable","nameLocation":"1287:22:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":2871,"members":[{"constant":false,"id":2870,"mutability":"mutable","name":"value","nameLocation":"1353:5:20","nodeType":"VariableDeclaration","scope":2871,"src":"1345:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2869,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1323:11:20","nodeType":"StructDefinition","scope":2925,"src":"1316:49:20","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":2874,"members":[{"constant":false,"id":2873,"mutability":"mutable","name":"value","nameLocation":"1405:5:20","nodeType":"VariableDeclaration","scope":2874,"src":"1400:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2872,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1378:11:20","nodeType":"StructDefinition","scope":2925,"src":"1371:46:20","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":2877,"members":[{"constant":false,"id":2876,"mutability":"mutable","name":"value","nameLocation":"1460:5:20","nodeType":"VariableDeclaration","scope":2877,"src":"1452:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1452:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1430:11:20","nodeType":"StructDefinition","scope":2925,"src":"1423:49:20","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":2880,"members":[{"constant":false,"id":2879,"mutability":"mutable","name":"value","nameLocation":"1515:5:20","nodeType":"VariableDeclaration","scope":2880,"src":"1507:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1485:11:20","nodeType":"StructDefinition","scope":2925,"src":"1478:49:20","visibility":"public"},{"body":{"id":2890,"nodeType":"Block","src":"1709:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"1771:38:20","statements":[{"nodeType":"YulAssignment","src":"1785:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"1795:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1785:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":2887,"isOffset":false,"isSlot":true,"src":"1785:6:20","suffix":"slot","valueSize":1},{"declaration":2883,"isOffset":false,"isSlot":false,"src":"1795:4:20","valueSize":1}],"id":2889,"nodeType":"InlineAssembly","src":"1762:47:20"}]},"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"1533:87:20","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2891,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1634:14:20","nodeType":"FunctionDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"slot","nameLocation":"1657:4:20","nodeType":"VariableDeclaration","scope":2891,"src":"1649:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1649:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1648:14:20"},"returnParameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"r","nameLocation":"1706:1:20","nodeType":"VariableDeclaration","scope":2891,"src":"1686:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2871_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":2886,"nodeType":"UserDefinedTypeName","pathNode":{"id":2885,"name":"AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":2871,"src":"1686:11:20"},"referencedDeclaration":2871,"src":"1686:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2871_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1685:23:20"},"scope":2925,"src":"1625:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2901,"nodeType":"Block","src":"1997:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2059:38:20","statements":[{"nodeType":"YulAssignment","src":"2073:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2083:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2073:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":2898,"isOffset":false,"isSlot":true,"src":"2073:6:20","suffix":"slot","valueSize":1},{"declaration":2894,"isOffset":false,"isSlot":false,"src":"2083:4:20","valueSize":1}],"id":2900,"nodeType":"InlineAssembly","src":"2050:47:20"}]},"documentation":{"id":2892,"nodeType":"StructuredDocumentation","src":"1821:87:20","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2902,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1922:14:20","nodeType":"FunctionDefinition","parameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"slot","nameLocation":"1945:4:20","nodeType":"VariableDeclaration","scope":2902,"src":"1937:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1937:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1936:14:20"},"returnParameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2898,"mutability":"mutable","name":"r","nameLocation":"1994:1:20","nodeType":"VariableDeclaration","scope":2902,"src":"1974:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2874_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":2897,"nodeType":"UserDefinedTypeName","pathNode":{"id":2896,"name":"BooleanSlot","nodeType":"IdentifierPath","referencedDeclaration":2874,"src":"1974:11:20"},"referencedDeclaration":2874,"src":"1974:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2874_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"1973:23:20"},"scope":2925,"src":"1913:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2912,"nodeType":"Block","src":"2285:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2347:38:20","statements":[{"nodeType":"YulAssignment","src":"2361:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2371:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2361:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":2909,"isOffset":false,"isSlot":true,"src":"2361:6:20","suffix":"slot","valueSize":1},{"declaration":2905,"isOffset":false,"isSlot":false,"src":"2371:4:20","valueSize":1}],"id":2911,"nodeType":"InlineAssembly","src":"2338:47:20"}]},"documentation":{"id":2903,"nodeType":"StructuredDocumentation","src":"2109:87:20","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2210:14:20","nodeType":"FunctionDefinition","parameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"slot","nameLocation":"2233:4:20","nodeType":"VariableDeclaration","scope":2913,"src":"2225:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:14:20"},"returnParameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"r","nameLocation":"2282:1:20","nodeType":"VariableDeclaration","scope":2913,"src":"2262:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2877_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":2908,"nodeType":"UserDefinedTypeName","pathNode":{"id":2907,"name":"Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":2877,"src":"2262:11:20"},"referencedDeclaration":2877,"src":"2262:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2877_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2261:23:20"},"scope":2925,"src":"2201:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2923,"nodeType":"Block","src":"2573:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2635:38:20","statements":[{"nodeType":"YulAssignment","src":"2649:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2659:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2649:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":2920,"isOffset":false,"isSlot":true,"src":"2649:6:20","suffix":"slot","valueSize":1},{"declaration":2916,"isOffset":false,"isSlot":false,"src":"2659:4:20","valueSize":1}],"id":2922,"nodeType":"InlineAssembly","src":"2626:47:20"}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"2397:87:20","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2498:14:20","nodeType":"FunctionDefinition","parameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"slot","nameLocation":"2521:4:20","nodeType":"VariableDeclaration","scope":2924,"src":"2513:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2513:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2512:14:20"},"returnParameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"r","nameLocation":"2570:1:20","nodeType":"VariableDeclaration","scope":2924,"src":"2550:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2880_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":2919,"nodeType":"UserDefinedTypeName","pathNode":{"id":2918,"name":"Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":2880,"src":"2550:11:20"},"referencedDeclaration":2880,"src":"2550:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2880_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2549:23:20"},"scope":2925,"src":"2489:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2926,"src":"1279:1402:20","usedErrors":[]}],"src":"105:2577:20"},"id":20},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[3790]},"id":3791,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2927,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:21"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2928,"nodeType":"StructuredDocumentation","src":"133:73:21","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3790,"linearizedBaseContracts":[3790],"name":"MathUpgradeable","nameLocation":"215:15:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MathUpgradeable.Rounding","id":2932,"members":[{"id":2929,"name":"Down","nameLocation":"261:4:21","nodeType":"EnumValue","src":"261:4:21"},{"id":2930,"name":"Up","nameLocation":"303:2:21","nodeType":"EnumValue","src":"303:2:21"},{"id":2931,"name":"Zero","nameLocation":"334:4:21","nodeType":"EnumValue","src":"334:4:21"}],"name":"Rounding","nameLocation":"242:8:21","nodeType":"EnumDefinition","src":"237:122:21"},{"body":{"id":2949,"nodeType":"Block","src":"496:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2942,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"513:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2943,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"517:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"513:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2946,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"525:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"513:13:21","trueExpression":{"id":2945,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"521:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2941,"id":2948,"nodeType":"Return","src":"506:20:21"}]},"documentation":{"id":2933,"nodeType":"StructuredDocumentation","src":"365:59:21","text":" @dev Returns the largest of two numbers."},"id":2950,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"438:3:21","nodeType":"FunctionDefinition","parameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"a","nameLocation":"450:1:21","nodeType":"VariableDeclaration","scope":2950,"src":"442:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2934,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"b","nameLocation":"461:1:21","nodeType":"VariableDeclaration","scope":2950,"src":"453:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"441:22:21"},"returnParameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2950,"src":"487:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"487:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"486:9:21"},"scope":3790,"src":"429:104:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2967,"nodeType":"Block","src":"671:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2960,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"688:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2961,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"692:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"688:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2964,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"700:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"688:13:21","trueExpression":{"id":2963,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"696:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2959,"id":2966,"nodeType":"Return","src":"681:20:21"}]},"documentation":{"id":2951,"nodeType":"StructuredDocumentation","src":"539:60:21","text":" @dev Returns the smallest of two numbers."},"id":2968,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"613:3:21","nodeType":"FunctionDefinition","parameters":{"id":2956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2953,"mutability":"mutable","name":"a","nameLocation":"625:1:21","nodeType":"VariableDeclaration","scope":2968,"src":"617:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"617:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2955,"mutability":"mutable","name":"b","nameLocation":"636:1:21","nodeType":"VariableDeclaration","scope":2968,"src":"628:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2954,"name":"uint256","nodeType":"ElementaryTypeName","src":"628:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"616:22:21"},"returnParameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2968,"src":"662:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"661:9:21"},"scope":3790,"src":"604:104:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2990,"nodeType":"Block","src":"892:82:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2978,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"947:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2979,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"951:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"947:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2981,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"946:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2982,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"957:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2983,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"961:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"957:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"956:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"966:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"956:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"946:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2977,"id":2989,"nodeType":"Return","src":"939:28:21"}]},"documentation":{"id":2969,"nodeType":"StructuredDocumentation","src":"714:102:21","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2991,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"830:7:21","nodeType":"FunctionDefinition","parameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"a","nameLocation":"846:1:21","nodeType":"VariableDeclaration","scope":2991,"src":"838:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2973,"mutability":"mutable","name":"b","nameLocation":"857:1:21","nodeType":"VariableDeclaration","scope":2991,"src":"849:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"837:22:21"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2991,"src":"883:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"883:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"882:9:21"},"scope":3790,"src":"821:153:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3015,"nodeType":"Block","src":"1244:123:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3001,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"1332:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1337:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1332:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"1346:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1346:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1345:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3009,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"1355:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1345:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1359:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1345:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1332:28:21","trueExpression":{"hexValue":"30","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1341:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3000,"id":3014,"nodeType":"Return","src":"1325:35:21"}]},"documentation":{"id":2992,"nodeType":"StructuredDocumentation","src":"980:188:21","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3016,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1182:7:21","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"a","nameLocation":"1198:1:21","nodeType":"VariableDeclaration","scope":3016,"src":"1190:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"b","nameLocation":"1209:1:21","nodeType":"VariableDeclaration","scope":3016,"src":"1201:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1201:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1189:22:21"},"returnParameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3016,"src":"1235:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1234:9:21"},"scope":3790,"src":"1173:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3137,"nodeType":"Block","src":"1811:3797:21","statements":[{"id":3136,"nodeType":"UncheckedBlock","src":"1821:3781:21","statements":[{"assignments":[3029],"declarations":[{"constant":false,"id":3029,"mutability":"mutable","name":"prod0","nameLocation":"2150:5:21","nodeType":"VariableDeclaration","scope":3136,"src":"2142:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"2142:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3030,"nodeType":"VariableDeclarationStatement","src":"2142:13:21"},{"assignments":[3032],"declarations":[{"constant":false,"id":3032,"mutability":"mutable","name":"prod1","nameLocation":"2222:5:21","nodeType":"VariableDeclaration","scope":3136,"src":"2214:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2214:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3033,"nodeType":"VariableDeclarationStatement","src":"2214:13:21"},{"AST":{"nodeType":"YulBlock","src":"2294:157:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2312:30:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2329:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"2332:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2339:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2335:3:21"},"nodeType":"YulFunctionCall","src":"2335:6:21"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2322:6:21"},"nodeType":"YulFunctionCall","src":"2322:20:21"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2316:2:21","type":""}]},{"nodeType":"YulAssignment","src":"2359:18:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2372:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"2375:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2368:3:21"},"nodeType":"YulFunctionCall","src":"2368:9:21"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2359:5:21"}]},{"nodeType":"YulAssignment","src":"2394:43:21","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2411:2:21"},{"name":"prod0","nodeType":"YulIdentifier","src":"2415:5:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2407:3:21"},"nodeType":"YulFunctionCall","src":"2407:14:21"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2426:2:21"},{"name":"prod0","nodeType":"YulIdentifier","src":"2430:5:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2423:2:21"},"nodeType":"YulFunctionCall","src":"2423:13:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2403:3:21"},"nodeType":"YulFunctionCall","src":"2403:34:21"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2394:5:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3029,"isOffset":false,"isSlot":false,"src":"2359:5:21","valueSize":1},{"declaration":3029,"isOffset":false,"isSlot":false,"src":"2415:5:21","valueSize":1},{"declaration":3029,"isOffset":false,"isSlot":false,"src":"2430:5:21","valueSize":1},{"declaration":3032,"isOffset":false,"isSlot":false,"src":"2394:5:21","valueSize":1},{"declaration":3019,"isOffset":false,"isSlot":false,"src":"2329:1:21","valueSize":1},{"declaration":3019,"isOffset":false,"isSlot":false,"src":"2372:1:21","valueSize":1},{"declaration":3021,"isOffset":false,"isSlot":false,"src":"2332:1:21","valueSize":1},{"declaration":3021,"isOffset":false,"isSlot":false,"src":"2375:1:21","valueSize":1}],"id":3034,"nodeType":"InlineAssembly","src":"2285:166:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3035,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"2532:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2541:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2532:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3043,"nodeType":"IfStatement","src":"2528:75:21","trueBody":{"id":3042,"nodeType":"Block","src":"2544:59:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3038,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"2569:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3039,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"2577:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2569:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3027,"id":3041,"nodeType":"Return","src":"2562:26:21"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3045,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"2713:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3046,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"2727:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2713:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3044,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2705:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2705:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3049,"nodeType":"ExpressionStatement","src":"2705:28:21"},{"assignments":[3051],"declarations":[{"constant":false,"id":3051,"mutability":"mutable","name":"remainder","nameLocation":"2997:9:21","nodeType":"VariableDeclaration","scope":3136,"src":"2989:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3050,"name":"uint256","nodeType":"ElementaryTypeName","src":"2989:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3052,"nodeType":"VariableDeclarationStatement","src":"2989:17:21"},{"AST":{"nodeType":"YulBlock","src":"3029:291:21","statements":[{"nodeType":"YulAssignment","src":"3098:38:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3118:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"3121:1:21"},{"name":"denominator","nodeType":"YulIdentifier","src":"3124:11:21"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3111:6:21"},"nodeType":"YulFunctionCall","src":"3111:25:21"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3098:9:21"}]},{"nodeType":"YulAssignment","src":"3218:41:21","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3231:5:21"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3241:9:21"},{"name":"prod0","nodeType":"YulIdentifier","src":"3252:5:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3238:2:21"},"nodeType":"YulFunctionCall","src":"3238:20:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3227:3:21"},"nodeType":"YulFunctionCall","src":"3227:32:21"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3218:5:21"}]},{"nodeType":"YulAssignment","src":"3276:30:21","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3289:5:21"},{"name":"remainder","nodeType":"YulIdentifier","src":"3296:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3285:3:21"},"nodeType":"YulFunctionCall","src":"3285:21:21"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3276:5:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3023,"isOffset":false,"isSlot":false,"src":"3124:11:21","valueSize":1},{"declaration":3029,"isOffset":false,"isSlot":false,"src":"3252:5:21","valueSize":1},{"declaration":3029,"isOffset":false,"isSlot":false,"src":"3276:5:21","valueSize":1},{"declaration":3029,"isOffset":false,"isSlot":false,"src":"3289:5:21","valueSize":1},{"declaration":3032,"isOffset":false,"isSlot":false,"src":"3218:5:21","valueSize":1},{"declaration":3032,"isOffset":false,"isSlot":false,"src":"3231:5:21","valueSize":1},{"declaration":3051,"isOffset":false,"isSlot":false,"src":"3098:9:21","valueSize":1},{"declaration":3051,"isOffset":false,"isSlot":false,"src":"3241:9:21","valueSize":1},{"declaration":3051,"isOffset":false,"isSlot":false,"src":"3296:9:21","valueSize":1},{"declaration":3019,"isOffset":false,"isSlot":false,"src":"3118:1:21","valueSize":1},{"declaration":3021,"isOffset":false,"isSlot":false,"src":"3121:1:21","valueSize":1}],"id":3053,"nodeType":"InlineAssembly","src":"3020:300:21"},{"assignments":[3055],"declarations":[{"constant":false,"id":3055,"mutability":"mutable","name":"twos","nameLocation":"3635:4:21","nodeType":"VariableDeclaration","scope":3136,"src":"3627:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"3627:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3063,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3056,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"3642:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3657:12:21","subExpression":{"id":3057,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"3658:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3672:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3657:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3061,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3656:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3642:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3627:47:21"},{"AST":{"nodeType":"YulBlock","src":"3697:362:21","statements":[{"nodeType":"YulAssignment","src":"3762:37:21","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3781:11:21"},{"name":"twos","nodeType":"YulIdentifier","src":"3794:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3777:3:21"},"nodeType":"YulFunctionCall","src":"3777:22:21"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3762:11:21"}]},{"nodeType":"YulAssignment","src":"3866:25:21","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3879:5:21"},{"name":"twos","nodeType":"YulIdentifier","src":"3886:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3875:3:21"},"nodeType":"YulFunctionCall","src":"3875:16:21"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3866:5:21"}]},{"nodeType":"YulAssignment","src":"4006:39:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4026:1:21","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4029:4:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4022:3:21"},"nodeType":"YulFunctionCall","src":"4022:12:21"},{"name":"twos","nodeType":"YulIdentifier","src":"4036:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4018:3:21"},"nodeType":"YulFunctionCall","src":"4018:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4043:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4014:3:21"},"nodeType":"YulFunctionCall","src":"4014:31:21"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4006:4:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3023,"isOffset":false,"isSlot":false,"src":"3762:11:21","valueSize":1},{"declaration":3023,"isOffset":false,"isSlot":false,"src":"3781:11:21","valueSize":1},{"declaration":3029,"isOffset":false,"isSlot":false,"src":"3866:5:21","valueSize":1},{"declaration":3029,"isOffset":false,"isSlot":false,"src":"3879:5:21","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"3794:4:21","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"3886:4:21","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"4006:4:21","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"4029:4:21","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"4036:4:21","valueSize":1}],"id":3064,"nodeType":"InlineAssembly","src":"3688:371:21"},{"expression":{"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3065,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"4125:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"4134:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3067,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"4142:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4134:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4125:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3070,"nodeType":"ExpressionStatement","src":"4125:21:21"},{"assignments":[3072],"declarations":[{"constant":false,"id":3072,"mutability":"mutable","name":"inverse","nameLocation":"4472:7:21","nodeType":"VariableDeclaration","scope":3136,"src":"4464:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"4464:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3079,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4483:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3074,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"4487:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4482:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4502:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4482:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4464:39:21"},{"expression":{"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3080,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4731:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3082,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"4735:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3083,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4749:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4735:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4731:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4720:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3087,"nodeType":"ExpressionStatement","src":"4720:36:21"},{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3088,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4789:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4800:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3090,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"4804:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3091,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4818:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4804:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4800:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4789:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ExpressionStatement","src":"4789:36:21"},{"expression":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3096,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4859:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4870:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3098,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"4874:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3099,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4888:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4874:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4870:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4859:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3103,"nodeType":"ExpressionStatement","src":"4859:36:21"},{"expression":{"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3104,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4929:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4940:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3106,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"4944:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3107,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4958:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4944:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4940:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4929:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3111,"nodeType":"ExpressionStatement","src":"4929:36:21"},{"expression":{"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3112,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4999:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5010:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"5014:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3115,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"5028:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5014:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5010:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4999:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3119,"nodeType":"ExpressionStatement","src":"4999:36:21"},{"expression":{"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3120,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"5070:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5081:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3122,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"5085:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3123,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"5099:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5085:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5081:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5070:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3127,"nodeType":"ExpressionStatement","src":"5070:36:21"},{"expression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"5540:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3129,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"5549:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3130,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"5557:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5549:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5540:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3133,"nodeType":"ExpressionStatement","src":"5540:24:21"},{"expression":{"id":3134,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"5585:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3027,"id":3135,"nodeType":"Return","src":"5578:13:21"}]}]},"documentation":{"id":3017,"nodeType":"StructuredDocumentation","src":"1373:305:21","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3138,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1692:6:21","nodeType":"FunctionDefinition","parameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"x","nameLocation":"1716:1:21","nodeType":"VariableDeclaration","scope":3138,"src":"1708:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"y","nameLocation":"1735:1:21","nodeType":"VariableDeclaration","scope":3138,"src":"1727:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1727:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3023,"mutability":"mutable","name":"denominator","nameLocation":"1754:11:21","nodeType":"VariableDeclaration","scope":3138,"src":"1746:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1746:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1698:73:21"},"returnParameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3026,"mutability":"mutable","name":"result","nameLocation":"1803:6:21","nodeType":"VariableDeclaration","scope":3138,"src":"1795:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3025,"name":"uint256","nodeType":"ElementaryTypeName","src":"1795:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1794:16:21"},"scope":3790,"src":"1683:3925:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3181,"nodeType":"Block","src":"5888:189:21","statements":[{"assignments":[3154],"declarations":[{"constant":false,"id":3154,"mutability":"mutable","name":"result","nameLocation":"5906:6:21","nodeType":"VariableDeclaration","scope":3181,"src":"5898:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3160,"initialValue":{"arguments":[{"id":3156,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"5922:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3157,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"5925:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3158,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"5928:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3155,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3138,3182],"referencedDeclaration":3138,"src":"5915:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5915:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5898:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3161,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"5954:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3162,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"5966:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2932_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"5966:11:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"src":"5954:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3166,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"5988:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3167,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"5991:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3168,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"5994:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3165,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5981:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5981:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6009:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5981:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5954:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3178,"nodeType":"IfStatement","src":"5950:98:21","trueBody":{"id":3177,"nodeType":"Block","src":"6012:36:21","statements":[{"expression":{"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"6026:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6036:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6026:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3176,"nodeType":"ExpressionStatement","src":"6026:11:21"}]}},{"expression":{"id":3179,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"6064:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3152,"id":3180,"nodeType":"Return","src":"6057:13:21"}]},"documentation":{"id":3139,"nodeType":"StructuredDocumentation","src":"5614:121:21","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5749:6:21","nodeType":"FunctionDefinition","parameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"x","nameLocation":"5773:1:21","nodeType":"VariableDeclaration","scope":3182,"src":"5765:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"5765:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"y","nameLocation":"5792:1:21","nodeType":"VariableDeclaration","scope":3182,"src":"5784:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"5784:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3145,"mutability":"mutable","name":"denominator","nameLocation":"5811:11:21","nodeType":"VariableDeclaration","scope":3182,"src":"5803:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5803:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"rounding","nameLocation":"5841:8:21","nodeType":"VariableDeclaration","scope":3182,"src":"5832:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3147,"nodeType":"UserDefinedTypeName","pathNode":{"id":3146,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2932,"src":"5832:8:21"},"referencedDeclaration":2932,"src":"5832:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"5755:100:21"},"returnParameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3182,"src":"5879:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"5879:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5878:9:21"},"scope":3790,"src":"5740:337:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3293,"nodeType":"Block","src":"6353:1585:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"6367:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6372:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6367:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3196,"nodeType":"IfStatement","src":"6363:45:21","trueBody":{"id":3195,"nodeType":"Block","src":"6375:33:21","statements":[{"expression":{"hexValue":"30","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3189,"id":3194,"nodeType":"Return","src":"6389:8:21"}]}},{"assignments":[3198],"declarations":[{"constant":false,"id":3198,"mutability":"mutable","name":"result","nameLocation":"7095:6:21","nodeType":"VariableDeclaration","scope":3293,"src":"7087:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"7087:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3207,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7104:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3201,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"7115:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3200,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3462,3498],"referencedDeclaration":3462,"src":"7110:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7110:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7121:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7110:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3205,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7109:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7104:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7087:36:21"},{"id":3292,"nodeType":"UncheckedBlock","src":"7524:408:21","statements":[{"expression":{"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3208,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7548:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7558:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"7567:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3211,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7571:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7567:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7558:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7557:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7557:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7548:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3218,"nodeType":"ExpressionStatement","src":"7548:35:21"},{"expression":{"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3219,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7597:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7607:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3221,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"7616:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3222,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7620:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7616:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7607:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7606:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7631:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7606:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7597:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3229,"nodeType":"ExpressionStatement","src":"7597:35:21"},{"expression":{"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7646:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7656:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3232,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"7665:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7669:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7665:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7656:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7655:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7680:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7655:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7646:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3240,"nodeType":"ExpressionStatement","src":"7646:35:21"},{"expression":{"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7695:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7705:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3243,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"7714:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3244,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7718:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7714:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7704:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7729:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7704:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7695:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3251,"nodeType":"ExpressionStatement","src":"7695:35:21"},{"expression":{"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7744:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3253,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7754:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"7763:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3255,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7767:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7763:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7754:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7753:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7778:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7753:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7744:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3262,"nodeType":"ExpressionStatement","src":"7744:35:21"},{"expression":{"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3263,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7793:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7803:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3265,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"7812:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7816:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7803:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7802:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7827:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7802:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7793:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3273,"nodeType":"ExpressionStatement","src":"7793:35:21"},{"expression":{"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7842:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3275,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7852:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"7861:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7865:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7861:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7852:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7851:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7851:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7842:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3284,"nodeType":"ExpressionStatement","src":"7842:35:21"},{"expression":{"arguments":[{"id":3286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7902:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3287,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"7910:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7914:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7910:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3285,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"7898:3:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7898:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3189,"id":3291,"nodeType":"Return","src":"7891:30:21"}]}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"6083:208:21","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3294,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6305:4:21","nodeType":"FunctionDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"a","nameLocation":"6318:1:21","nodeType":"VariableDeclaration","scope":3294,"src":"6310:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6309:11:21"},"returnParameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3294,"src":"6344:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"6344:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6343:9:21"},"scope":3790,"src":"6296:1642:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3329,"nodeType":"Block","src":"8114:161:21","statements":[{"id":3328,"nodeType":"UncheckedBlock","src":"8124:145:21","statements":[{"assignments":[3306],"declarations":[{"constant":false,"id":3306,"mutability":"mutable","name":"result","nameLocation":"8156:6:21","nodeType":"VariableDeclaration","scope":3328,"src":"8148:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3305,"name":"uint256","nodeType":"ElementaryTypeName","src":"8148:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3310,"initialValue":{"arguments":[{"id":3308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"8170:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3307,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3294,3330],"referencedDeclaration":3294,"src":"8165:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8165:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8148:24:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"8193:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3312,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"8203:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3313,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"8215:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2932_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"8215:11:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"src":"8203:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3316,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"8230:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"8239:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8230:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3319,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"8248:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8230:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8203:46:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8256:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8203:54:21","trueExpression":{"hexValue":"31","id":3322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8252:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8202:56:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8193:65:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3304,"id":3327,"nodeType":"Return","src":"8186:72:21"}]}]},"documentation":{"id":3295,"nodeType":"StructuredDocumentation","src":"7944:89:21","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3330,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8047:4:21","nodeType":"FunctionDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"a","nameLocation":"8060:1:21","nodeType":"VariableDeclaration","scope":3330,"src":"8052:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3296,"name":"uint256","nodeType":"ElementaryTypeName","src":"8052:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"rounding","nameLocation":"8072:8:21","nodeType":"VariableDeclaration","scope":3330,"src":"8063:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3299,"nodeType":"UserDefinedTypeName","pathNode":{"id":3298,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2932,"src":"8063:8:21"},"referencedDeclaration":2932,"src":"8063:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8051:30:21"},"returnParameters":{"id":3304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3330,"src":"8105:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"8105:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8104:9:21"},"scope":3790,"src":"8038:237:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3461,"nodeType":"Block","src":"8460:922:21","statements":[{"assignments":[3339],"declarations":[{"constant":false,"id":3339,"mutability":"mutable","name":"result","nameLocation":"8478:6:21","nodeType":"VariableDeclaration","scope":3461,"src":"8470:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3338,"name":"uint256","nodeType":"ElementaryTypeName","src":"8470:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3341,"initialValue":{"hexValue":"30","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8487:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8470:18:21"},{"id":3458,"nodeType":"UncheckedBlock","src":"8498:855:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8526:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8535:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8526:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8541:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8526:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3356,"nodeType":"IfStatement","src":"8522:99:21","trueBody":{"id":3355,"nodeType":"Block","src":"8544:77:21","statements":[{"expression":{"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8562:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8572:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8562:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3350,"nodeType":"ExpressionStatement","src":"8562:13:21"},{"expression":{"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3351,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"8593:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8603:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8593:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3354,"nodeType":"ExpressionStatement","src":"8593:13:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8638:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8647:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8638:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8652:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8638:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3371,"nodeType":"IfStatement","src":"8634:96:21","trueBody":{"id":3370,"nodeType":"Block","src":"8655:75:21","statements":[{"expression":{"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8673:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8673:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3365,"nodeType":"ExpressionStatement","src":"8673:12:21"},{"expression":{"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3366,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"8703:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8713:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8703:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3369,"nodeType":"ExpressionStatement","src":"8703:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8747:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8756:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8747:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8761:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8747:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3386,"nodeType":"IfStatement","src":"8743:96:21","trueBody":{"id":3385,"nodeType":"Block","src":"8764:75:21","statements":[{"expression":{"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8782:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8792:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8782:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3380,"nodeType":"ExpressionStatement","src":"8782:12:21"},{"expression":{"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"8812:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8822:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8812:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3384,"nodeType":"ExpressionStatement","src":"8812:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8856:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8865:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8856:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8870:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8856:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3401,"nodeType":"IfStatement","src":"8852:96:21","trueBody":{"id":3400,"nodeType":"Block","src":"8873:75:21","statements":[{"expression":{"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8891:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8901:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8891:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3395,"nodeType":"ExpressionStatement","src":"8891:12:21"},{"expression":{"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3396,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"8921:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8931:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8921:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3399,"nodeType":"ExpressionStatement","src":"8921:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8965:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8974:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8965:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8978:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8965:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3416,"nodeType":"IfStatement","src":"8961:93:21","trueBody":{"id":3415,"nodeType":"Block","src":"8981:73:21","statements":[{"expression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"8999:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8999:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3410,"nodeType":"ExpressionStatement","src":"8999:11:21"},{"expression":{"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3411,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"9028:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9038:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9028:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3414,"nodeType":"ExpressionStatement","src":"9028:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"9071:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9080:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9071:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9084:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9071:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3431,"nodeType":"IfStatement","src":"9067:93:21","trueBody":{"id":3430,"nodeType":"Block","src":"9087:73:21","statements":[{"expression":{"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"9105:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9115:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9105:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3425,"nodeType":"ExpressionStatement","src":"9105:11:21"},{"expression":{"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"9134:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9144:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9134:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3429,"nodeType":"ExpressionStatement","src":"9134:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"9177:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9186:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9177:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9190:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9177:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3446,"nodeType":"IfStatement","src":"9173:93:21","trueBody":{"id":3445,"nodeType":"Block","src":"9193:73:21","statements":[{"expression":{"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"9211:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9221:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9211:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3440,"nodeType":"ExpressionStatement","src":"9211:11:21"},{"expression":{"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"9240:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9250:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9240:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3444,"nodeType":"ExpressionStatement","src":"9240:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"9283:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9292:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9283:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9296:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9283:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3457,"nodeType":"IfStatement","src":"9279:64:21","trueBody":{"id":3456,"nodeType":"Block","src":"9299:44:21","statements":[{"expression":{"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3452,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"9317:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9327:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9317:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3455,"nodeType":"ExpressionStatement","src":"9317:11:21"}]}}]},{"expression":{"id":3459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"9369:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3337,"id":3460,"nodeType":"Return","src":"9362:13:21"}]},"documentation":{"id":3331,"nodeType":"StructuredDocumentation","src":"8281:113:21","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3462,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8408:4:21","nodeType":"FunctionDefinition","parameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"value","nameLocation":"8421:5:21","nodeType":"VariableDeclaration","scope":3462,"src":"8413:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"8413:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8412:15:21"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3462,"src":"8451:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"8451:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8450:9:21"},"scope":3790,"src":"8399:983:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3497,"nodeType":"Block","src":"9615:165:21","statements":[{"id":3496,"nodeType":"UncheckedBlock","src":"9625:149:21","statements":[{"assignments":[3474],"declarations":[{"constant":false,"id":3474,"mutability":"mutable","name":"result","nameLocation":"9657:6:21","nodeType":"VariableDeclaration","scope":3496,"src":"9649:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"9649:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3478,"initialValue":{"arguments":[{"id":3476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"9671:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3475,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3462,3498],"referencedDeclaration":3462,"src":"9666:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9666:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9649:28:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"9698:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3480,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"9708:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3481,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"9720:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2932_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"9720:11:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"src":"9708:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9735:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3485,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"9740:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9735:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"9749:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9735:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9708:46:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9761:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9708:54:21","trueExpression":{"hexValue":"31","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9757:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9707:56:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9698:65:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3472,"id":3495,"nodeType":"Return","src":"9691:72:21"}]}]},"documentation":{"id":3463,"nodeType":"StructuredDocumentation","src":"9388:142:21","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3498,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9544:4:21","nodeType":"FunctionDefinition","parameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3465,"mutability":"mutable","name":"value","nameLocation":"9557:5:21","nodeType":"VariableDeclaration","scope":3498,"src":"9549:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3464,"name":"uint256","nodeType":"ElementaryTypeName","src":"9549:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3468,"mutability":"mutable","name":"rounding","nameLocation":"9573:8:21","nodeType":"VariableDeclaration","scope":3498,"src":"9564:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3467,"nodeType":"UserDefinedTypeName","pathNode":{"id":3466,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2932,"src":"9564:8:21"},"referencedDeclaration":2932,"src":"9564:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"9548:34:21"},"returnParameters":{"id":3472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3498,"src":"9606:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3470,"name":"uint256","nodeType":"ElementaryTypeName","src":"9606:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9605:9:21"},"scope":3790,"src":"9535:245:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3626,"nodeType":"Block","src":"9967:828:21","statements":[{"assignments":[3507],"declarations":[{"constant":false,"id":3507,"mutability":"mutable","name":"result","nameLocation":"9985:6:21","nodeType":"VariableDeclaration","scope":3626,"src":"9977:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"9977:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3509,"initialValue":{"hexValue":"30","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9994:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9977:18:21"},{"id":3623,"nodeType":"UncheckedBlock","src":"10005:761:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10033:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10042:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10046:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10042:6:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10033:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3526,"nodeType":"IfStatement","src":"10029:99:21","trueBody":{"id":3525,"nodeType":"Block","src":"10050:78:21","statements":[{"expression":{"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10068:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10077:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10081:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10077:6:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10068:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3520,"nodeType":"ExpressionStatement","src":"10068:15:21"},{"expression":{"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"10101:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10111:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10101:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3524,"nodeType":"ExpressionStatement","src":"10101:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10145:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10154:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10158:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10154:6:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10145:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3543,"nodeType":"IfStatement","src":"10141:99:21","trueBody":{"id":3542,"nodeType":"Block","src":"10162:78:21","statements":[{"expression":{"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10180:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10189:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10193:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10189:6:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10180:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3537,"nodeType":"ExpressionStatement","src":"10180:15:21"},{"expression":{"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"10213:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10223:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10213:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3541,"nodeType":"ExpressionStatement","src":"10213:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10257:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10270:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10266:6:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10257:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3560,"nodeType":"IfStatement","src":"10253:99:21","trueBody":{"id":3559,"nodeType":"Block","src":"10274:78:21","statements":[{"expression":{"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10292:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10301:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10305:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10301:6:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10292:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3554,"nodeType":"ExpressionStatement","src":"10292:15:21"},{"expression":{"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"10325:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10335:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10325:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3558,"nodeType":"ExpressionStatement","src":"10325:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10369:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10378:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10382:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10378:5:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10369:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3577,"nodeType":"IfStatement","src":"10365:96:21","trueBody":{"id":3576,"nodeType":"Block","src":"10385:76:21","statements":[{"expression":{"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10403:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10412:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10416:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10412:5:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10403:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3571,"nodeType":"ExpressionStatement","src":"10403:14:21"},{"expression":{"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"10435:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10445:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10435:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3575,"nodeType":"ExpressionStatement","src":"10435:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10478:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10487:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10491:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10487:5:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10478:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3594,"nodeType":"IfStatement","src":"10474:96:21","trueBody":{"id":3593,"nodeType":"Block","src":"10494:76:21","statements":[{"expression":{"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10512:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10521:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10525:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10521:5:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10512:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3588,"nodeType":"ExpressionStatement","src":"10512:14:21"},{"expression":{"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"10544:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10554:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10544:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3592,"nodeType":"ExpressionStatement","src":"10544:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10587:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10596:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10600:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10596:5:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10587:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3611,"nodeType":"IfStatement","src":"10583:96:21","trueBody":{"id":3610,"nodeType":"Block","src":"10603:76:21","statements":[{"expression":{"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10621:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10634:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10630:5:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10621:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3605,"nodeType":"ExpressionStatement","src":"10621:14:21"},{"expression":{"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"10653:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10663:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10653:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3609,"nodeType":"ExpressionStatement","src":"10653:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"10696:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10705:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10709:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10705:5:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10696:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3622,"nodeType":"IfStatement","src":"10692:64:21","trueBody":{"id":3621,"nodeType":"Block","src":"10712:44:21","statements":[{"expression":{"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"10730:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10740:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10730:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3620,"nodeType":"ExpressionStatement","src":"10730:11:21"}]}}]},{"expression":{"id":3624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"10782:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3505,"id":3625,"nodeType":"Return","src":"10775:13:21"}]},"documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"9786:114:21","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3627,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9914:5:21","nodeType":"FunctionDefinition","parameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"value","nameLocation":"9928:5:21","nodeType":"VariableDeclaration","scope":3627,"src":"9920:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"9920:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9919:15:21"},"returnParameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3627,"src":"9958:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"9958:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9957:9:21"},"scope":3790,"src":"9905:890:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3662,"nodeType":"Block","src":"11030:165:21","statements":[{"id":3661,"nodeType":"UncheckedBlock","src":"11040:149:21","statements":[{"assignments":[3639],"declarations":[{"constant":false,"id":3639,"mutability":"mutable","name":"result","nameLocation":"11072:6:21","nodeType":"VariableDeclaration","scope":3661,"src":"11064:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"11064:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3643,"initialValue":{"arguments":[{"id":3641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"11087:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3640,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3627,3663],"referencedDeclaration":3627,"src":"11081:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11081:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11064:29:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"11114:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"11124:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3646,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"11136:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2932_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"11136:11:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"src":"11124:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11151:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"11155:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11151:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"11164:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11151:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11124:45:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11176:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11124:53:21","trueExpression":{"hexValue":"31","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11172:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11123:55:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11114:64:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3637,"id":3660,"nodeType":"Return","src":"11107:71:21"}]}]},"documentation":{"id":3628,"nodeType":"StructuredDocumentation","src":"10801:143:21","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3663,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10958:5:21","nodeType":"FunctionDefinition","parameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"value","nameLocation":"10972:5:21","nodeType":"VariableDeclaration","scope":3663,"src":"10964:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"10964:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"rounding","nameLocation":"10988:8:21","nodeType":"VariableDeclaration","scope":3663,"src":"10979:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3632,"nodeType":"UserDefinedTypeName","pathNode":{"id":3631,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2932,"src":"10979:8:21"},"referencedDeclaration":2932,"src":"10979:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"10963:34:21"},"returnParameters":{"id":3637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3663,"src":"11021:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3635,"name":"uint256","nodeType":"ElementaryTypeName","src":"11021:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11020:9:21"},"scope":3790,"src":"10949:246:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3749,"nodeType":"Block","src":"11509:600:21","statements":[{"assignments":[3672],"declarations":[{"constant":false,"id":3672,"mutability":"mutable","name":"result","nameLocation":"11527:6:21","nodeType":"VariableDeclaration","scope":3749,"src":"11519:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"11519:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3674,"initialValue":{"hexValue":"30","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11536:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11519:18:21"},{"id":3746,"nodeType":"UncheckedBlock","src":"11547:533:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"11575:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11584:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11575:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11590:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11575:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3689,"nodeType":"IfStatement","src":"11571:98:21","trueBody":{"id":3688,"nodeType":"Block","src":"11593:76:21","statements":[{"expression":{"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"11611:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11621:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11611:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3683,"nodeType":"ExpressionStatement","src":"11611:13:21"},{"expression":{"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3684,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"11642:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11652:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11642:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3687,"nodeType":"ExpressionStatement","src":"11642:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"11686:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11695:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11686:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11700:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11686:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3704,"nodeType":"IfStatement","src":"11682:95:21","trueBody":{"id":3703,"nodeType":"Block","src":"11703:74:21","statements":[{"expression":{"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"11721:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11731:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11721:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3698,"nodeType":"ExpressionStatement","src":"11721:12:21"},{"expression":{"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"11751:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11761:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11751:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3702,"nodeType":"ExpressionStatement","src":"11751:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"11794:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11803:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11794:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11808:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11794:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3719,"nodeType":"IfStatement","src":"11790:95:21","trueBody":{"id":3718,"nodeType":"Block","src":"11811:74:21","statements":[{"expression":{"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"11829:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11839:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11829:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3713,"nodeType":"ExpressionStatement","src":"11829:12:21"},{"expression":{"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"11859:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11869:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11859:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3717,"nodeType":"ExpressionStatement","src":"11859:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"11902:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11911:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11902:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11916:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11902:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3734,"nodeType":"IfStatement","src":"11898:95:21","trueBody":{"id":3733,"nodeType":"Block","src":"11919:74:21","statements":[{"expression":{"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"11937:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11947:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11937:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3728,"nodeType":"ExpressionStatement","src":"11937:12:21"},{"expression":{"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"11967:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11977:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11967:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3732,"nodeType":"ExpressionStatement","src":"11967:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"12010:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12019:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12010:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12010:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3745,"nodeType":"IfStatement","src":"12006:64:21","trueBody":{"id":3744,"nodeType":"Block","src":"12026:44:21","statements":[{"expression":{"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3740,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"12044:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12054:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12044:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3743,"nodeType":"ExpressionStatement","src":"12044:11:21"}]}}]},{"expression":{"id":3747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"12096:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3670,"id":3748,"nodeType":"Return","src":"12089:13:21"}]},"documentation":{"id":3664,"nodeType":"StructuredDocumentation","src":"11201:240:21","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3750,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11455:6:21","nodeType":"FunctionDefinition","parameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"value","nameLocation":"11470:5:21","nodeType":"VariableDeclaration","scope":3750,"src":"11462:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3665,"name":"uint256","nodeType":"ElementaryTypeName","src":"11462:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11461:15:21"},"returnParameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3750,"src":"11500:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"11500:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11499:9:21"},"scope":3790,"src":"11446:663:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3788,"nodeType":"Block","src":"12345:173:21","statements":[{"id":3787,"nodeType":"UncheckedBlock","src":"12355:157:21","statements":[{"assignments":[3762],"declarations":[{"constant":false,"id":3762,"mutability":"mutable","name":"result","nameLocation":"12387:6:21","nodeType":"VariableDeclaration","scope":3787,"src":"12379:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"12379:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3766,"initialValue":{"arguments":[{"id":3764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"12403:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3763,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3750,3789],"referencedDeclaration":3750,"src":"12396:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12396:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12379:30:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"12430:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3768,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"12440:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3769,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"12452:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2932_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2930,"src":"12452:11:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"src":"12440:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"12473:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12482:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12473:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12472:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12467:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"12487:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12467:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12440:52:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12499:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12440:60:21","trueExpression":{"hexValue":"31","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12495:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12439:62:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12430:71:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3760,"id":3786,"nodeType":"Return","src":"12423:78:21"}]}]},"documentation":{"id":3751,"nodeType":"StructuredDocumentation","src":"12115:143:21","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3789,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12272:6:21","nodeType":"FunctionDefinition","parameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"value","nameLocation":"12287:5:21","nodeType":"VariableDeclaration","scope":3789,"src":"12279:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"12279:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3756,"mutability":"mutable","name":"rounding","nameLocation":"12303:8:21","nodeType":"VariableDeclaration","scope":3789,"src":"12294:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3755,"nodeType":"UserDefinedTypeName","pathNode":{"id":3754,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2932,"src":"12294:8:21"},"referencedDeclaration":2932,"src":"12294:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2932","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"12278:34:21"},"returnParameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3789,"src":"12336:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"12336:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12335:9:21"},"scope":3790,"src":"12263:255:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3791,"src":"207:12313:21","usedErrors":[]}],"src":"108:12413:21"},"id":21},"contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[5383],"Ownable":[3903]},"id":3904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3792,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:22"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3793,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3904,"sourceUnit":5384,"src":"127:30:22","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3795,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":5383,"src":"683:7:22"},"id":3796,"nodeType":"InheritanceSpecifier","src":"683:7:22"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3794,"nodeType":"StructuredDocumentation","src":"159:494:22","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":3903,"linearizedBaseContracts":[3903,5383],"name":"Ownable","nameLocation":"672:7:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3798,"mutability":"mutable","name":"_owner","nameLocation":"713:6:22","nodeType":"VariableDeclaration","scope":3903,"src":"697:22:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3797,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":3804,"name":"OwnershipTransferred","nameLocation":"732:20:22","nodeType":"EventDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:22","nodeType":"VariableDeclaration","scope":3804,"src":"753:29:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3799,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3802,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:22","nodeType":"VariableDeclaration","scope":3804,"src":"784:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3801,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:22"},"src":"726:84:22"},{"body":{"id":3813,"nodeType":"Block","src":"926:49:22","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3809,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"955:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3808,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"936:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3812,"nodeType":"ExpressionStatement","src":"936:32:22"}]},"documentation":{"id":3805,"nodeType":"StructuredDocumentation","src":"816:91:22","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":3814,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3806,"nodeType":"ParameterList","parameters":[],"src":"923:2:22"},"returnParameters":{"id":3807,"nodeType":"ParameterList","parameters":[],"src":"926:0:22"},"scope":3903,"src":"912:63:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3821,"nodeType":"Block","src":"1084:41:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3817,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"1094:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3819,"nodeType":"ExpressionStatement","src":"1094:13:22"},{"id":3820,"nodeType":"PlaceholderStatement","src":"1117:1:22"}]},"documentation":{"id":3815,"nodeType":"StructuredDocumentation","src":"981:77:22","text":" @dev Throws if called by any account other than the owner."},"id":3822,"name":"onlyOwner","nameLocation":"1072:9:22","nodeType":"ModifierDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[],"src":"1081:2:22"},"src":"1063:62:22","virtual":false,"visibility":"internal"},{"body":{"id":3830,"nodeType":"Block","src":"1256:30:22","statements":[{"expression":{"id":3828,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"1273:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3827,"id":3829,"nodeType":"Return","src":"1266:13:22"}]},"documentation":{"id":3823,"nodeType":"StructuredDocumentation","src":"1131:65:22","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":3831,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:22","nodeType":"FunctionDefinition","parameters":{"id":3824,"nodeType":"ParameterList","parameters":[],"src":"1215:2:22"},"returnParameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3831,"src":"1247:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3825,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:22"},"scope":3903,"src":"1201:85:22","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3844,"nodeType":"Block","src":"1404:85:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3836,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"1422:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3838,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"1433:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":3835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3843,"nodeType":"ExpressionStatement","src":"1414:68:22"}]},"documentation":{"id":3832,"nodeType":"StructuredDocumentation","src":"1292:62:22","text":" @dev Throws if the sender is not the owner."},"id":3845,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:22","nodeType":"FunctionDefinition","parameters":{"id":3833,"nodeType":"ParameterList","parameters":[],"src":"1379:2:22"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[],"src":"1404:0:22"},"scope":3903,"src":"1359:130:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3858,"nodeType":"Block","src":"1885:47:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3852,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:22","typeDescriptions":{}}},"id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3851,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"1895:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3857,"nodeType":"ExpressionStatement","src":"1895:30:22"}]},"documentation":{"id":3846,"nodeType":"StructuredDocumentation","src":"1495:331:22","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":3859,"implemented":true,"kind":"function","modifiers":[{"id":3849,"kind":"modifierInvocation","modifierName":{"id":3848,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":3822,"src":"1875:9:22"},"nodeType":"ModifierInvocation","src":"1875:9:22"}],"name":"renounceOwnership","nameLocation":"1840:17:22","nodeType":"FunctionDefinition","parameters":{"id":3847,"nodeType":"ParameterList","parameters":[],"src":"1857:2:22"},"returnParameters":{"id":3850,"nodeType":"ParameterList","parameters":[],"src":"1885:0:22"},"scope":3903,"src":"1831:101:22","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3881,"nodeType":"Block","src":"2151:128:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3868,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"2169:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3869,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:22","typeDescriptions":{}}},"id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":3867,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3876,"nodeType":"ExpressionStatement","src":"2161:73:22"},{"expression":{"arguments":[{"id":3878,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"2263:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3877,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"2244:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3880,"nodeType":"ExpressionStatement","src":"2244:28:22"}]},"documentation":{"id":3860,"nodeType":"StructuredDocumentation","src":"1938:138:22","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":3882,"implemented":true,"kind":"function","modifiers":[{"id":3865,"kind":"modifierInvocation","modifierName":{"id":3864,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":3822,"src":"2141:9:22"},"nodeType":"ModifierInvocation","src":"2141:9:22"}],"name":"transferOwnership","nameLocation":"2090:17:22","nodeType":"FunctionDefinition","parameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:22","nodeType":"VariableDeclaration","scope":3882,"src":"2108:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3861,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:22"},"returnParameters":{"id":3866,"nodeType":"ParameterList","parameters":[],"src":"2151:0:22"},"scope":3903,"src":"2081:198:22","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3901,"nodeType":"Block","src":"2496:124:22","statements":[{"assignments":[3889],"declarations":[{"constant":false,"id":3889,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:22","nodeType":"VariableDeclaration","scope":3901,"src":"2506:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3888,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3891,"initialValue":{"id":3890,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"2525:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:22"},{"expression":{"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3892,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"2541:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3893,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"2550:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3895,"nodeType":"ExpressionStatement","src":"2541:17:22"},{"eventCall":{"arguments":[{"id":3897,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"2594:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3898,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"2604:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3896,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"2573:20:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3900,"nodeType":"EmitStatement","src":"2568:45:22"}]},"documentation":{"id":3883,"nodeType":"StructuredDocumentation","src":"2285:143:22","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":3902,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:22","nodeType":"FunctionDefinition","parameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:22","nodeType":"VariableDeclaration","scope":3902,"src":"2461:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3884,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:22"},"returnParameters":{"id":3887,"nodeType":"ParameterList","parameters":[],"src":"2496:0:22"},"scope":3903,"src":"2433:187:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3904,"src":"654:1968:22","usedErrors":[]}],"src":"102:2521:22"},"id":22},"contracts/.deps/npm/@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[5383],"Pausable":[4011]},"id":4012,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3905,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:23"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4012,"sourceUnit":5384,"src":"130:30:23","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3908,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":5383,"src":"632:7:23"},"id":3909,"nodeType":"InheritanceSpecifier","src":"632:7:23"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3907,"nodeType":"StructuredDocumentation","src":"162:439:23","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":4011,"linearizedBaseContracts":[4011,5383],"name":"Pausable","nameLocation":"620:8:23","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3910,"nodeType":"StructuredDocumentation","src":"646:73:23","text":" @dev Emitted when the pause is triggered by `account`."},"id":3914,"name":"Paused","nameLocation":"730:6:23","nodeType":"EventDefinition","parameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:23","nodeType":"VariableDeclaration","scope":3914,"src":"737:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3911,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:23"},"src":"724:30:23"},{"anonymous":false,"documentation":{"id":3915,"nodeType":"StructuredDocumentation","src":"760:70:23","text":" @dev Emitted when the pause is lifted by `account`."},"id":3919,"name":"Unpaused","nameLocation":"841:8:23","nodeType":"EventDefinition","parameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3917,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:23","nodeType":"VariableDeclaration","scope":3919,"src":"850:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3916,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:23"},"src":"835:32:23"},{"constant":false,"id":3921,"mutability":"mutable","name":"_paused","nameLocation":"886:7:23","nodeType":"VariableDeclaration","scope":4011,"src":"873:20:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3920,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":3929,"nodeType":"Block","src":"986:32:23","statements":[{"expression":{"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3925,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"996:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3928,"nodeType":"ExpressionStatement","src":"996:15:23"}]},"documentation":{"id":3922,"nodeType":"StructuredDocumentation","src":"900:67:23","text":" @dev Initializes the contract in unpaused state."},"id":3930,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[],"src":"983:2:23"},"returnParameters":{"id":3924,"nodeType":"ParameterList","parameters":[],"src":"986:0:23"},"scope":4011,"src":"972:46:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3937,"nodeType":"Block","src":"1229:47:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3933,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"1239:17:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1239:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3935,"nodeType":"ExpressionStatement","src":"1239:19:23"},{"id":3936,"nodeType":"PlaceholderStatement","src":"1268:1:23"}]},"documentation":{"id":3931,"nodeType":"StructuredDocumentation","src":"1024:175:23","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":3938,"name":"whenNotPaused","nameLocation":"1213:13:23","nodeType":"ModifierDefinition","parameters":{"id":3932,"nodeType":"ParameterList","parameters":[],"src":"1226:2:23"},"src":"1204:72:23","virtual":false,"visibility":"internal"},{"body":{"id":3945,"nodeType":"Block","src":"1476:44:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3941,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"1486:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1486:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3943,"nodeType":"ExpressionStatement","src":"1486:16:23"},{"id":3944,"nodeType":"PlaceholderStatement","src":"1512:1:23"}]},"documentation":{"id":3939,"nodeType":"StructuredDocumentation","src":"1282:167:23","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":3946,"name":"whenPaused","nameLocation":"1463:10:23","nodeType":"ModifierDefinition","parameters":{"id":3940,"nodeType":"ParameterList","parameters":[],"src":"1473:2:23"},"src":"1454:66:23","virtual":false,"visibility":"internal"},{"body":{"id":3954,"nodeType":"Block","src":"1668:31:23","statements":[{"expression":{"id":3952,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"1685:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3951,"id":3953,"nodeType":"Return","src":"1678:14:23"}]},"documentation":{"id":3947,"nodeType":"StructuredDocumentation","src":"1526:84:23","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":3955,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:23","nodeType":"FunctionDefinition","parameters":{"id":3948,"nodeType":"ParameterList","parameters":[],"src":"1630:2:23"},"returnParameters":{"id":3951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3955,"src":"1662:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3949,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:23"},"scope":4011,"src":"1615:84:23","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3966,"nodeType":"Block","src":"1818:55:23","statements":[{"expression":{"arguments":[{"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:23","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3960,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"1837:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1837:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":3959,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3965,"nodeType":"ExpressionStatement","src":"1828:38:23"}]},"documentation":{"id":3956,"nodeType":"StructuredDocumentation","src":"1705:57:23","text":" @dev Throws if the contract is paused."},"id":3967,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:23","nodeType":"FunctionDefinition","parameters":{"id":3957,"nodeType":"ParameterList","parameters":[],"src":"1793:2:23"},"returnParameters":{"id":3958,"nodeType":"ParameterList","parameters":[],"src":"1818:0:23"},"scope":4011,"src":"1767:106:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3977,"nodeType":"Block","src":"1993:58:23","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3972,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"2011:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2011:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":3971,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2003:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3976,"nodeType":"ExpressionStatement","src":"2003:41:23"}]},"documentation":{"id":3968,"nodeType":"StructuredDocumentation","src":"1879:61:23","text":" @dev Throws if the contract is not paused."},"id":3978,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:23","nodeType":"FunctionDefinition","parameters":{"id":3969,"nodeType":"ParameterList","parameters":[],"src":"1968:2:23"},"returnParameters":{"id":3970,"nodeType":"ParameterList","parameters":[],"src":"1993:0:23"},"scope":4011,"src":"1945:106:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3993,"nodeType":"Block","src":"2235:66:23","statements":[{"expression":{"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3984,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"2245:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3987,"nodeType":"ExpressionStatement","src":"2245:14:23"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3989,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"2281:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3988,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"2274:6:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2274:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3992,"nodeType":"EmitStatement","src":"2269:25:23"}]},"documentation":{"id":3979,"nodeType":"StructuredDocumentation","src":"2057:124:23","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":3994,"implemented":true,"kind":"function","modifiers":[{"id":3982,"kind":"modifierInvocation","modifierName":{"id":3981,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":3938,"src":"2221:13:23"},"nodeType":"ModifierInvocation","src":"2221:13:23"}],"name":"_pause","nameLocation":"2195:6:23","nodeType":"FunctionDefinition","parameters":{"id":3980,"nodeType":"ParameterList","parameters":[],"src":"2201:2:23"},"returnParameters":{"id":3983,"nodeType":"ParameterList","parameters":[],"src":"2235:0:23"},"scope":4011,"src":"2186:115:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4009,"nodeType":"Block","src":"2481:69:23","statements":[{"expression":{"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4000,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"2491:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4003,"nodeType":"ExpressionStatement","src":"2491:15:23"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4005,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"2530:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2530:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4004,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"2521:8:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2521:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4008,"nodeType":"EmitStatement","src":"2516:27:23"}]},"documentation":{"id":3995,"nodeType":"StructuredDocumentation","src":"2307:121:23","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":4010,"implemented":true,"kind":"function","modifiers":[{"id":3998,"kind":"modifierInvocation","modifierName":{"id":3997,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":3946,"src":"2470:10:23"},"nodeType":"ModifierInvocation","src":"2470:10:23"}],"name":"_unpause","nameLocation":"2442:8:23","nodeType":"FunctionDefinition","parameters":{"id":3996,"nodeType":"ParameterList","parameters":[],"src":"2450:2:23"},"returnParameters":{"id":3999,"nodeType":"ParameterList","parameters":[],"src":"2481:0:23"},"scope":4011,"src":"2433:117:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":4012,"src":"602:1950:23","usedErrors":[]}],"src":"105:2448:23"},"id":23},"contracts/.deps/npm/@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[4051]},"id":4052,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4013,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"97:23:24"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4014,"nodeType":"StructuredDocumentation","src":"122:750:24","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":4051,"linearizedBaseContracts":[4051],"name":"ReentrancyGuard","nameLocation":"891:15:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4017,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1686:12:24","nodeType":"VariableDeclaration","scope":4051,"src":"1661:41:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1701:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":4020,"mutability":"constant","name":"_ENTERED","nameLocation":"1733:8:24","nodeType":"VariableDeclaration","scope":4051,"src":"1708:37:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1744:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":4022,"mutability":"mutable","name":"_status","nameLocation":"1768:7:24","nodeType":"VariableDeclaration","scope":4051,"src":"1752:23:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":4029,"nodeType":"Block","src":"1796:39:24","statements":[{"expression":{"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4025,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"1806:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4026,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"1816:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1806:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4028,"nodeType":"ExpressionStatement","src":"1806:22:24"}]},"id":4030,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[],"src":"1793:2:24"},"returnParameters":{"id":4024,"nodeType":"ParameterList","parameters":[],"src":"1796:0:24"},"scope":4051,"src":"1782:53:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4049,"nodeType":"Block","src":"2236:421:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4034,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"2325:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4035,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"2336:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2325:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2346:33:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":4033,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2317:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:63:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4039,"nodeType":"ExpressionStatement","src":"2317:63:24"},{"expression":{"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4040,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"2455:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4041,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"2465:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2455:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4043,"nodeType":"ExpressionStatement","src":"2455:18:24"},{"id":4044,"nodeType":"PlaceholderStatement","src":"2484:1:24"},{"expression":{"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4045,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"2628:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4046,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"2638:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2628:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4048,"nodeType":"ExpressionStatement","src":"2628:22:24"}]},"documentation":{"id":4031,"nodeType":"StructuredDocumentation","src":"1841:366:24","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":4050,"name":"nonReentrant","nameLocation":"2221:12:24","nodeType":"ModifierDefinition","parameters":{"id":4032,"nodeType":"ParameterList","parameters":[],"src":"2233:2:24"},"src":"2212:445:24","virtual":false,"visibility":"internal"}],"scope":4052,"src":"873:1786:24","usedErrors":[]}],"src":"97:2563:24"},"id":24},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[5383],"ERC20":[4637],"IERC20":[4715],"IERC20Metadata":[5068]},"id":4638,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4053,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:25"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":4054,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4638,"sourceUnit":4716,"src":"130:22:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":4055,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4638,"sourceUnit":5069,"src":"153:41:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":4056,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4638,"sourceUnit":5384,"src":"195:33:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4058,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":5383,"src":"1421:7:25"},"id":4059,"nodeType":"InheritanceSpecifier","src":"1421:7:25"},{"baseName":{"id":4060,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":4715,"src":"1430:6:25"},"id":4061,"nodeType":"InheritanceSpecifier","src":"1430:6:25"},{"baseName":{"id":4062,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":5068,"src":"1438:14:25"},"id":4063,"nodeType":"InheritanceSpecifier","src":"1438:14:25"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4057,"nodeType":"StructuredDocumentation","src":"230:1172:25","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":4637,"linearizedBaseContracts":[4637,5068,4715,5383],"name":"ERC20","nameLocation":"1412:5:25","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4067,"mutability":"mutable","name":"_balances","nameLocation":"1495:9:25","nodeType":"VariableDeclaration","scope":4637,"src":"1459:45:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4066,"keyType":{"id":4064,"name":"address","nodeType":"ElementaryTypeName","src":"1467:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1459:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"1478:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":4073,"mutability":"mutable","name":"_allowances","nameLocation":"1567:11:25","nodeType":"VariableDeclaration","scope":4637,"src":"1511:67:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":4072,"keyType":{"id":4068,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1511:47:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":4071,"keyType":{"id":4069,"name":"address","nodeType":"ElementaryTypeName","src":"1538:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1530:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":4070,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":4075,"mutability":"mutable","name":"_totalSupply","nameLocation":"1601:12:25","nodeType":"VariableDeclaration","scope":4637,"src":"1585:28:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4077,"mutability":"mutable","name":"_name","nameLocation":"1635:5:25","nodeType":"VariableDeclaration","scope":4637,"src":"1620:20:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4076,"name":"string","nodeType":"ElementaryTypeName","src":"1620:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4079,"mutability":"mutable","name":"_symbol","nameLocation":"1661:7:25","nodeType":"VariableDeclaration","scope":4637,"src":"1646:22:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4078,"name":"string","nodeType":"ElementaryTypeName","src":"1646:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4095,"nodeType":"Block","src":"2034:57:25","statements":[{"expression":{"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4087,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"2044:5:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4088,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"2052:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2044:13:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4090,"nodeType":"ExpressionStatement","src":"2044:13:25"},{"expression":{"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4091,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"2067:7:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4092,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"2077:7:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2067:17:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4094,"nodeType":"ExpressionStatement","src":"2067:17:25"}]},"documentation":{"id":4080,"nodeType":"StructuredDocumentation","src":"1675:298:25","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":4096,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"name_","nameLocation":"2004:5:25","nodeType":"VariableDeclaration","scope":4096,"src":"1990:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4081,"name":"string","nodeType":"ElementaryTypeName","src":"1990:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4084,"mutability":"mutable","name":"symbol_","nameLocation":"2025:7:25","nodeType":"VariableDeclaration","scope":4096,"src":"2011:21:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4083,"name":"string","nodeType":"ElementaryTypeName","src":"2011:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1989:44:25"},"returnParameters":{"id":4086,"nodeType":"ParameterList","parameters":[],"src":"2034:0:25"},"scope":4637,"src":"1978:113:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[5055],"body":{"id":4105,"nodeType":"Block","src":"2225:29:25","statements":[{"expression":{"id":4103,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"2242:5:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4102,"id":4104,"nodeType":"Return","src":"2235:12:25"}]},"documentation":{"id":4097,"nodeType":"StructuredDocumentation","src":"2097:54:25","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":4106,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2165:4:25","nodeType":"FunctionDefinition","overrides":{"id":4099,"nodeType":"OverrideSpecifier","overrides":[],"src":"2192:8:25"},"parameters":{"id":4098,"nodeType":"ParameterList","parameters":[],"src":"2169:2:25"},"returnParameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4106,"src":"2210:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4100,"name":"string","nodeType":"ElementaryTypeName","src":"2210:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2209:15:25"},"scope":4637,"src":"2156:98:25","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[5061],"body":{"id":4115,"nodeType":"Block","src":"2438:31:25","statements":[{"expression":{"id":4113,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"2455:7:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4112,"id":4114,"nodeType":"Return","src":"2448:14:25"}]},"documentation":{"id":4107,"nodeType":"StructuredDocumentation","src":"2260:102:25","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":4116,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2376:6:25","nodeType":"FunctionDefinition","overrides":{"id":4109,"nodeType":"OverrideSpecifier","overrides":[],"src":"2405:8:25"},"parameters":{"id":4108,"nodeType":"ParameterList","parameters":[],"src":"2382:2:25"},"returnParameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4116,"src":"2423:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4110,"name":"string","nodeType":"ElementaryTypeName","src":"2423:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2422:15:25"},"scope":4637,"src":"2367:102:25","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[5067],"body":{"id":4125,"nodeType":"Block","src":"3158:26:25","statements":[{"expression":{"hexValue":"3138","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3175:2:25","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":4122,"id":4124,"nodeType":"Return","src":"3168:9:25"}]},"documentation":{"id":4117,"nodeType":"StructuredDocumentation","src":"2475:613:25","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":4126,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3102:8:25","nodeType":"FunctionDefinition","overrides":{"id":4119,"nodeType":"OverrideSpecifier","overrides":[],"src":"3133:8:25"},"parameters":{"id":4118,"nodeType":"ParameterList","parameters":[],"src":"3110:2:25"},"returnParameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4126,"src":"3151:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4120,"name":"uint8","nodeType":"ElementaryTypeName","src":"3151:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3150:7:25"},"scope":4637,"src":"3093:91:25","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[4664],"body":{"id":4135,"nodeType":"Block","src":"3314:36:25","statements":[{"expression":{"id":4133,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"3331:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4132,"id":4134,"nodeType":"Return","src":"3324:19:25"}]},"documentation":{"id":4127,"nodeType":"StructuredDocumentation","src":"3190:49:25","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":4136,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3253:11:25","nodeType":"FunctionDefinition","overrides":{"id":4129,"nodeType":"OverrideSpecifier","overrides":[],"src":"3287:8:25"},"parameters":{"id":4128,"nodeType":"ParameterList","parameters":[],"src":"3264:2:25"},"returnParameters":{"id":4132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4136,"src":"3305:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4130,"name":"uint256","nodeType":"ElementaryTypeName","src":"3305:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3304:9:25"},"scope":4637,"src":"3244:106:25","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[4672],"body":{"id":4149,"nodeType":"Block","src":"3491:42:25","statements":[{"expression":{"baseExpression":{"id":4145,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"3508:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4147,"indexExpression":{"id":4146,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"3518:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3508:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4144,"id":4148,"nodeType":"Return","src":"3501:25:25"}]},"documentation":{"id":4137,"nodeType":"StructuredDocumentation","src":"3356:47:25","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":4150,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3417:9:25","nodeType":"FunctionDefinition","overrides":{"id":4141,"nodeType":"OverrideSpecifier","overrides":[],"src":"3464:8:25"},"parameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"account","nameLocation":"3435:7:25","nodeType":"VariableDeclaration","scope":4150,"src":"3427:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4138,"name":"address","nodeType":"ElementaryTypeName","src":"3427:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3426:17:25"},"returnParameters":{"id":4144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4150,"src":"3482:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:9:25"},"scope":4637,"src":"3408:125:25","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[4682],"body":{"id":4174,"nodeType":"Block","src":"3814:104:25","statements":[{"assignments":[4162],"declarations":[{"constant":false,"id":4162,"mutability":"mutable","name":"owner","nameLocation":"3832:5:25","nodeType":"VariableDeclaration","scope":4174,"src":"3824:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4161,"name":"address","nodeType":"ElementaryTypeName","src":"3824:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4165,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4163,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"3840:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3840:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3824:28:25"},{"expression":{"arguments":[{"id":4167,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"3872:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4168,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"3879:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4169,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"3883:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4166,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"3862:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3862:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4171,"nodeType":"ExpressionStatement","src":"3862:28:25"},{"expression":{"hexValue":"74727565","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3907:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4160,"id":4173,"nodeType":"Return","src":"3900:11:25"}]},"documentation":{"id":4151,"nodeType":"StructuredDocumentation","src":"3539:185:25","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":4175,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3738:8:25","nodeType":"FunctionDefinition","overrides":{"id":4157,"nodeType":"OverrideSpecifier","overrides":[],"src":"3790:8:25"},"parameters":{"id":4156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4153,"mutability":"mutable","name":"to","nameLocation":"3755:2:25","nodeType":"VariableDeclaration","scope":4175,"src":"3747:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4152,"name":"address","nodeType":"ElementaryTypeName","src":"3747:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4155,"mutability":"mutable","name":"amount","nameLocation":"3767:6:25","nodeType":"VariableDeclaration","scope":4175,"src":"3759:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4154,"name":"uint256","nodeType":"ElementaryTypeName","src":"3759:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3746:28:25"},"returnParameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4175,"src":"3808:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4158,"name":"bool","nodeType":"ElementaryTypeName","src":"3808:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3807:6:25"},"scope":4637,"src":"3729:189:25","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[4692],"body":{"id":4192,"nodeType":"Block","src":"4074:51:25","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":4186,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"4091:11:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4188,"indexExpression":{"id":4187,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"4103:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:18:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4190,"indexExpression":{"id":4189,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"4110:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4185,"id":4191,"nodeType":"Return","src":"4084:34:25"}]},"documentation":{"id":4176,"nodeType":"StructuredDocumentation","src":"3924:47:25","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":4193,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3985:9:25","nodeType":"FunctionDefinition","overrides":{"id":4182,"nodeType":"OverrideSpecifier","overrides":[],"src":"4047:8:25"},"parameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4178,"mutability":"mutable","name":"owner","nameLocation":"4003:5:25","nodeType":"VariableDeclaration","scope":4193,"src":"3995:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4177,"name":"address","nodeType":"ElementaryTypeName","src":"3995:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4180,"mutability":"mutable","name":"spender","nameLocation":"4018:7:25","nodeType":"VariableDeclaration","scope":4193,"src":"4010:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4179,"name":"address","nodeType":"ElementaryTypeName","src":"4010:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3994:32:25"},"returnParameters":{"id":4185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4193,"src":"4065:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4183,"name":"uint256","nodeType":"ElementaryTypeName","src":"4065:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4064:9:25"},"scope":4637,"src":"3976:149:25","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[4702],"body":{"id":4217,"nodeType":"Block","src":"4522:108:25","statements":[{"assignments":[4205],"declarations":[{"constant":false,"id":4205,"mutability":"mutable","name":"owner","nameLocation":"4540:5:25","nodeType":"VariableDeclaration","scope":4217,"src":"4532:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4204,"name":"address","nodeType":"ElementaryTypeName","src":"4532:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4208,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4206,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"4548:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4548:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4532:28:25"},{"expression":{"arguments":[{"id":4210,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"4579:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4211,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"4586:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4212,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"4595:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4209,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"4570:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4570:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4214,"nodeType":"ExpressionStatement","src":"4570:32:25"},{"expression":{"hexValue":"74727565","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4619:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4203,"id":4216,"nodeType":"Return","src":"4612:11:25"}]},"documentation":{"id":4194,"nodeType":"StructuredDocumentation","src":"4131:297:25","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":4218,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4442:7:25","nodeType":"FunctionDefinition","overrides":{"id":4200,"nodeType":"OverrideSpecifier","overrides":[],"src":"4498:8:25"},"parameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"spender","nameLocation":"4458:7:25","nodeType":"VariableDeclaration","scope":4218,"src":"4450:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4195,"name":"address","nodeType":"ElementaryTypeName","src":"4450:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4198,"mutability":"mutable","name":"amount","nameLocation":"4475:6:25","nodeType":"VariableDeclaration","scope":4218,"src":"4467:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4197,"name":"uint256","nodeType":"ElementaryTypeName","src":"4467:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:33:25"},"returnParameters":{"id":4203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4218,"src":"4516:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4201,"name":"bool","nodeType":"ElementaryTypeName","src":"4516:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4515:6:25"},"scope":4637,"src":"4433:197:25","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[4714],"body":{"id":4250,"nodeType":"Block","src":"5325:153:25","statements":[{"assignments":[4232],"declarations":[{"constant":false,"id":4232,"mutability":"mutable","name":"spender","nameLocation":"5343:7:25","nodeType":"VariableDeclaration","scope":4250,"src":"5335:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4231,"name":"address","nodeType":"ElementaryTypeName","src":"5335:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4235,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4233,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"5353:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5353:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5335:30:25"},{"expression":{"arguments":[{"id":4237,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"5391:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4238,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"5397:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4239,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"5406:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4236,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"5375:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5375:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4241,"nodeType":"ExpressionStatement","src":"5375:38:25"},{"expression":{"arguments":[{"id":4243,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"5433:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4244,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"5439:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4245,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"5443:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4242,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"5423:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5423:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4247,"nodeType":"ExpressionStatement","src":"5423:27:25"},{"expression":{"hexValue":"74727565","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5467:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4230,"id":4249,"nodeType":"Return","src":"5460:11:25"}]},"documentation":{"id":4219,"nodeType":"StructuredDocumentation","src":"4636:551:25","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":4251,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5201:12:25","nodeType":"FunctionDefinition","overrides":{"id":4227,"nodeType":"OverrideSpecifier","overrides":[],"src":"5301:8:25"},"parameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"from","nameLocation":"5231:4:25","nodeType":"VariableDeclaration","scope":4251,"src":"5223:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4220,"name":"address","nodeType":"ElementaryTypeName","src":"5223:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4223,"mutability":"mutable","name":"to","nameLocation":"5253:2:25","nodeType":"VariableDeclaration","scope":4251,"src":"5245:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4222,"name":"address","nodeType":"ElementaryTypeName","src":"5245:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4225,"mutability":"mutable","name":"amount","nameLocation":"5273:6:25","nodeType":"VariableDeclaration","scope":4251,"src":"5265:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"5265:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5213:72:25"},"returnParameters":{"id":4230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4251,"src":"5319:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4228,"name":"bool","nodeType":"ElementaryTypeName","src":"5319:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5318:6:25"},"scope":4637,"src":"5192:286:25","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4279,"nodeType":"Block","src":"5967:140:25","statements":[{"assignments":[4262],"declarations":[{"constant":false,"id":4262,"mutability":"mutable","name":"owner","nameLocation":"5985:5:25","nodeType":"VariableDeclaration","scope":4279,"src":"5977:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4261,"name":"address","nodeType":"ElementaryTypeName","src":"5977:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4265,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4263,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"5993:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5993:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5977:28:25"},{"expression":{"arguments":[{"id":4267,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"6024:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4268,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"6031:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4270,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"6050:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4271,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"6057:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4269,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"6040:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6040:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4273,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"6068:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:38:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4266,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"6015:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6015:64:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4276,"nodeType":"ExpressionStatement","src":"6015:64:25"},{"expression":{"hexValue":"74727565","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6096:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4260,"id":4278,"nodeType":"Return","src":"6089:11:25"}]},"documentation":{"id":4252,"nodeType":"StructuredDocumentation","src":"5484:384:25","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":4280,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5882:17:25","nodeType":"FunctionDefinition","parameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"spender","nameLocation":"5908:7:25","nodeType":"VariableDeclaration","scope":4280,"src":"5900:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4253,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4256,"mutability":"mutable","name":"addedValue","nameLocation":"5925:10:25","nodeType":"VariableDeclaration","scope":4280,"src":"5917:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5899:37:25"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4280,"src":"5961:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4258,"name":"bool","nodeType":"ElementaryTypeName","src":"5961:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5960:6:25"},"scope":4637,"src":"5873:234:25","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4320,"nodeType":"Block","src":"6693:328:25","statements":[{"assignments":[4291],"declarations":[{"constant":false,"id":4291,"mutability":"mutable","name":"owner","nameLocation":"6711:5:25","nodeType":"VariableDeclaration","scope":4320,"src":"6703:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4290,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4294,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4292,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"6719:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6719:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6703:28:25"},{"assignments":[4296],"declarations":[{"constant":false,"id":4296,"mutability":"mutable","name":"currentAllowance","nameLocation":"6749:16:25","nodeType":"VariableDeclaration","scope":4320,"src":"6741:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4295,"name":"uint256","nodeType":"ElementaryTypeName","src":"6741:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4301,"initialValue":{"arguments":[{"id":4298,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"6778:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4299,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"6785:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4297,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"6768:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6768:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6741:52:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4303,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"6811:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4304,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"6831:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6811:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6848:39:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":4302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6803:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6803:85:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4308,"nodeType":"ExpressionStatement","src":"6803:85:25"},{"id":4317,"nodeType":"UncheckedBlock","src":"6898:95:25","statements":[{"expression":{"arguments":[{"id":4310,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"6931:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4311,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"6938:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"6947:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4313,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"6966:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6947:34:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4309,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"6922:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6922:60:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4316,"nodeType":"ExpressionStatement","src":"6922:60:25"}]},{"expression":{"hexValue":"74727565","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7010:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4289,"id":4319,"nodeType":"Return","src":"7003:11:25"}]},"documentation":{"id":4281,"nodeType":"StructuredDocumentation","src":"6113:476:25","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":4321,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6603:17:25","nodeType":"FunctionDefinition","parameters":{"id":4286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4283,"mutability":"mutable","name":"spender","nameLocation":"6629:7:25","nodeType":"VariableDeclaration","scope":4321,"src":"6621:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4282,"name":"address","nodeType":"ElementaryTypeName","src":"6621:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4285,"mutability":"mutable","name":"subtractedValue","nameLocation":"6646:15:25","nodeType":"VariableDeclaration","scope":4321,"src":"6638:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"6638:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6620:42:25"},"returnParameters":{"id":4289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4321,"src":"6687:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4287,"name":"bool","nodeType":"ElementaryTypeName","src":"6687:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6686:6:25"},"scope":4637,"src":"6594:427:25","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4397,"nodeType":"Block","src":"7583:543:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4332,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"7601:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7617:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7609:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4333,"name":"address","nodeType":"ElementaryTypeName","src":"7609:7:25","typeDescriptions":{}}},"id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7609:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7601:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7621:39:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":4331,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7593:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7593:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4340,"nodeType":"ExpressionStatement","src":"7593:68:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"7679:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7693:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7685:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4343,"name":"address","nodeType":"ElementaryTypeName","src":"7685:7:25","typeDescriptions":{}}},"id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7685:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7679:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7697:37:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":4341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7671:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7671:64:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4350,"nodeType":"ExpressionStatement","src":"7671:64:25"},{"expression":{"arguments":[{"id":4352,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"7767:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4353,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"7773:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4354,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"7777:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4351,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"7746:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7746:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4356,"nodeType":"ExpressionStatement","src":"7746:38:25"},{"assignments":[4358],"declarations":[{"constant":false,"id":4358,"mutability":"mutable","name":"fromBalance","nameLocation":"7803:11:25","nodeType":"VariableDeclaration","scope":4397,"src":"7795:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4357,"name":"uint256","nodeType":"ElementaryTypeName","src":"7795:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4362,"initialValue":{"baseExpression":{"id":4359,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"7817:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4361,"indexExpression":{"id":4360,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"7827:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7817:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7795:37:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4364,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"7850:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4365,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"7865:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7873:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":4363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7842:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7842:72:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4369,"nodeType":"ExpressionStatement","src":"7842:72:25"},{"id":4378,"nodeType":"UncheckedBlock","src":"7924:73:25","statements":[{"expression":{"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4370,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"7948:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4372,"indexExpression":{"id":4371,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"7958:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7948:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"7966:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4374,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"7980:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7966:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:38:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4377,"nodeType":"ExpressionStatement","src":"7948:38:25"}]},{"expression":{"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4379,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"8006:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4381,"indexExpression":{"id":4380,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"8016:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8006:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4382,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"8023:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8006:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4384,"nodeType":"ExpressionStatement","src":"8006:23:25"},{"eventCall":{"arguments":[{"id":4386,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"8054:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4387,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"8060:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4388,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"8064:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4385,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"8045:8:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8045:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4390,"nodeType":"EmitStatement","src":"8040:31:25"},{"expression":{"arguments":[{"id":4392,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"8102:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4393,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"8108:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4394,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"8112:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4391,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"8082:19:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8082:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4396,"nodeType":"ExpressionStatement","src":"8082:37:25"}]},"documentation":{"id":4322,"nodeType":"StructuredDocumentation","src":"7027:443:25","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":4398,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7484:9:25","nodeType":"FunctionDefinition","parameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"from","nameLocation":"7511:4:25","nodeType":"VariableDeclaration","scope":4398,"src":"7503:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4323,"name":"address","nodeType":"ElementaryTypeName","src":"7503:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4326,"mutability":"mutable","name":"to","nameLocation":"7533:2:25","nodeType":"VariableDeclaration","scope":4398,"src":"7525:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4325,"name":"address","nodeType":"ElementaryTypeName","src":"7525:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4328,"mutability":"mutable","name":"amount","nameLocation":"7553:6:25","nodeType":"VariableDeclaration","scope":4398,"src":"7545:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"7545:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7493:72:25"},"returnParameters":{"id":4330,"nodeType":"ParameterList","parameters":[],"src":"7583:0:25"},"scope":4637,"src":"7475:651:25","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4453,"nodeType":"Block","src":"8467:324:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4407,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"8485:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8504:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8496:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4408,"name":"address","nodeType":"ElementaryTypeName","src":"8496:7:25","typeDescriptions":{}}},"id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8496:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8485:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8508:33:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":4406,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8477:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8477:65:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4415,"nodeType":"ExpressionStatement","src":"8477:65:25"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8582:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8574:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4417,"name":"address","nodeType":"ElementaryTypeName","src":"8574:7:25","typeDescriptions":{}}},"id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8574:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4421,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"8586:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4422,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"8595:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4416,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"8553:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8553:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4424,"nodeType":"ExpressionStatement","src":"8553:49:25"},{"expression":{"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4425,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"8613:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4426,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"8629:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4428,"nodeType":"ExpressionStatement","src":"8613:22:25"},{"expression":{"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4429,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"8645:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4431,"indexExpression":{"id":4430,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"8655:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8645:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4432,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"8667:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8645:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4434,"nodeType":"ExpressionStatement","src":"8645:28:25"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8705:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8697:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4436,"name":"address","nodeType":"ElementaryTypeName","src":"8697:7:25","typeDescriptions":{}}},"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8697:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4440,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"8709:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4441,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"8718:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4435,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"8688:8:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8688:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4443,"nodeType":"EmitStatement","src":"8683:42:25"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8764:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8756:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4445,"name":"address","nodeType":"ElementaryTypeName","src":"8756:7:25","typeDescriptions":{}}},"id":4448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8756:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4449,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"8768:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4450,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"8777:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4444,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"8736:19:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8736:48:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4452,"nodeType":"ExpressionStatement","src":"8736:48:25"}]},"documentation":{"id":4399,"nodeType":"StructuredDocumentation","src":"8132:265:25","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":4454,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8411:5:25","nodeType":"FunctionDefinition","parameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"account","nameLocation":"8425:7:25","nodeType":"VariableDeclaration","scope":4454,"src":"8417:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4400,"name":"address","nodeType":"ElementaryTypeName","src":"8417:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4403,"mutability":"mutable","name":"amount","nameLocation":"8442:6:25","nodeType":"VariableDeclaration","scope":4454,"src":"8434:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8416:33:25"},"returnParameters":{"id":4405,"nodeType":"ParameterList","parameters":[],"src":"8467:0:25"},"scope":4637,"src":"8402:389:25","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4525,"nodeType":"Block","src":"9176:511:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4463,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"9194:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9213:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9205:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4464,"name":"address","nodeType":"ElementaryTypeName","src":"9205:7:25","typeDescriptions":{}}},"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9205:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9194:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9217:35:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":4462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9186:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9186:67:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4471,"nodeType":"ExpressionStatement","src":"9186:67:25"},{"expression":{"arguments":[{"id":4473,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"9285:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9302:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9294:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4474,"name":"address","nodeType":"ElementaryTypeName","src":"9294:7:25","typeDescriptions":{}}},"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9294:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4478,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"9306:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4472,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"9264:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9264:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4480,"nodeType":"ExpressionStatement","src":"9264:49:25"},{"assignments":[4482],"declarations":[{"constant":false,"id":4482,"mutability":"mutable","name":"accountBalance","nameLocation":"9332:14:25","nodeType":"VariableDeclaration","scope":4525,"src":"9324:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4481,"name":"uint256","nodeType":"ElementaryTypeName","src":"9324:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4486,"initialValue":{"baseExpression":{"id":4483,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"9349:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4485,"indexExpression":{"id":4484,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"9359:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9349:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9324:43:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4488,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"9385:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4489,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"9403:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9385:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9411:36:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":4487,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9377:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9377:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4493,"nodeType":"ExpressionStatement","src":"9377:71:25"},{"id":4502,"nodeType":"UncheckedBlock","src":"9458:79:25","statements":[{"expression":{"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4494,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"9482:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4496,"indexExpression":{"id":4495,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"9492:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9482:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4497,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"9503:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4498,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"9520:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9503:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9482:44:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4501,"nodeType":"ExpressionStatement","src":"9482:44:25"}]},{"expression":{"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4503,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"9546:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4504,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"9562:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9546:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4506,"nodeType":"ExpressionStatement","src":"9546:22:25"},{"eventCall":{"arguments":[{"id":4508,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"9593:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9610:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9602:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4509,"name":"address","nodeType":"ElementaryTypeName","src":"9602:7:25","typeDescriptions":{}}},"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9602:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4513,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"9614:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4507,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"9584:8:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9584:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4515,"nodeType":"EmitStatement","src":"9579:42:25"},{"expression":{"arguments":[{"id":4517,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"9652:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9669:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9661:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4518,"name":"address","nodeType":"ElementaryTypeName","src":"9661:7:25","typeDescriptions":{}}},"id":4521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9661:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4522,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"9673:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4516,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"9632:19:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9632:48:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4524,"nodeType":"ExpressionStatement","src":"9632:48:25"}]},"documentation":{"id":4455,"nodeType":"StructuredDocumentation","src":"8797:309:25","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":4526,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9120:5:25","nodeType":"FunctionDefinition","parameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"account","nameLocation":"9134:7:25","nodeType":"VariableDeclaration","scope":4526,"src":"9126:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4456,"name":"address","nodeType":"ElementaryTypeName","src":"9126:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4459,"mutability":"mutable","name":"amount","nameLocation":"9151:6:25","nodeType":"VariableDeclaration","scope":4526,"src":"9143:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4458,"name":"uint256","nodeType":"ElementaryTypeName","src":"9143:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9125:33:25"},"returnParameters":{"id":4461,"nodeType":"ParameterList","parameters":[],"src":"9176:0:25"},"scope":4637,"src":"9111:576:25","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4570,"nodeType":"Block","src":"10223:257:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4537,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"10241:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10258:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10250:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4538,"name":"address","nodeType":"ElementaryTypeName","src":"10250:7:25","typeDescriptions":{}}},"id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10250:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10241:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10262:38:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":4536,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10233:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10233:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4545,"nodeType":"ExpressionStatement","src":"10233:68:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4547,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"10319:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10338:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10330:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4548,"name":"address","nodeType":"ElementaryTypeName","src":"10330:7:25","typeDescriptions":{}}},"id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10330:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10319:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10342:36:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":4546,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10311:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10311:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4555,"nodeType":"ExpressionStatement","src":"10311:68:25"},{"expression":{"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4556,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"10390:11:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4559,"indexExpression":{"id":4557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"10402:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10390:18:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4560,"indexExpression":{"id":4558,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"10409:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10390:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4561,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"10420:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10390:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4563,"nodeType":"ExpressionStatement","src":"10390:36:25"},{"eventCall":{"arguments":[{"id":4565,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"10450:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4566,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"10457:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4567,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"10466:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4564,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"10441:8:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10441:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4569,"nodeType":"EmitStatement","src":"10436:37:25"}]},"documentation":{"id":4527,"nodeType":"StructuredDocumentation","src":"9693:412:25","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":4571,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10119:8:25","nodeType":"FunctionDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4529,"mutability":"mutable","name":"owner","nameLocation":"10145:5:25","nodeType":"VariableDeclaration","scope":4571,"src":"10137:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4528,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4531,"mutability":"mutable","name":"spender","nameLocation":"10168:7:25","nodeType":"VariableDeclaration","scope":4571,"src":"10160:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4530,"name":"address","nodeType":"ElementaryTypeName","src":"10160:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4533,"mutability":"mutable","name":"amount","nameLocation":"10193:6:25","nodeType":"VariableDeclaration","scope":4571,"src":"10185:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4532,"name":"uint256","nodeType":"ElementaryTypeName","src":"10185:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10127:78:25"},"returnParameters":{"id":4535,"nodeType":"ParameterList","parameters":[],"src":"10223:0:25"},"scope":4637,"src":"10110:370:25","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4613,"nodeType":"Block","src":"10881:321:25","statements":[{"assignments":[4582],"declarations":[{"constant":false,"id":4582,"mutability":"mutable","name":"currentAllowance","nameLocation":"10899:16:25","nodeType":"VariableDeclaration","scope":4613,"src":"10891:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"10891:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4587,"initialValue":{"arguments":[{"id":4584,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"10928:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4585,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"10935:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4583,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"10918:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10918:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10891:52:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4588,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"10957:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10982:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"10982:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4589,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10977:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10977:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10977:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10957:37:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4612,"nodeType":"IfStatement","src":"10953:243:25","trueBody":{"id":4611,"nodeType":"Block","src":"10996:200:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4596,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"11018:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4597,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"11038:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11018:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11046:31:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":4595,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11010:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11010:68:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4601,"nodeType":"ExpressionStatement","src":"11010:68:25"},{"id":4610,"nodeType":"UncheckedBlock","src":"11092:94:25","statements":[{"expression":{"arguments":[{"id":4603,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"11129:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4604,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"11136:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4605,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"11145:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4606,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"11164:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11145:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4602,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"11120:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11120:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4609,"nodeType":"ExpressionStatement","src":"11120:51:25"}]}]}}]},"documentation":{"id":4572,"nodeType":"StructuredDocumentation","src":"10486:270:25","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":4614,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10770:15:25","nodeType":"FunctionDefinition","parameters":{"id":4579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4574,"mutability":"mutable","name":"owner","nameLocation":"10803:5:25","nodeType":"VariableDeclaration","scope":4614,"src":"10795:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4573,"name":"address","nodeType":"ElementaryTypeName","src":"10795:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4576,"mutability":"mutable","name":"spender","nameLocation":"10826:7:25","nodeType":"VariableDeclaration","scope":4614,"src":"10818:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4575,"name":"address","nodeType":"ElementaryTypeName","src":"10818:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4578,"mutability":"mutable","name":"amount","nameLocation":"10851:6:25","nodeType":"VariableDeclaration","scope":4614,"src":"10843:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4577,"name":"uint256","nodeType":"ElementaryTypeName","src":"10843:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10785:78:25"},"returnParameters":{"id":4580,"nodeType":"ParameterList","parameters":[],"src":"10881:0:25"},"scope":4637,"src":"10761:441:25","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4624,"nodeType":"Block","src":"11905:2:25","statements":[]},"documentation":{"id":4615,"nodeType":"StructuredDocumentation","src":"11208:573:25","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":4625,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"11795:20:25","nodeType":"FunctionDefinition","parameters":{"id":4622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4617,"mutability":"mutable","name":"from","nameLocation":"11833:4:25","nodeType":"VariableDeclaration","scope":4625,"src":"11825:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4616,"name":"address","nodeType":"ElementaryTypeName","src":"11825:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4619,"mutability":"mutable","name":"to","nameLocation":"11855:2:25","nodeType":"VariableDeclaration","scope":4625,"src":"11847:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4618,"name":"address","nodeType":"ElementaryTypeName","src":"11847:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4621,"mutability":"mutable","name":"amount","nameLocation":"11875:6:25","nodeType":"VariableDeclaration","scope":4625,"src":"11867:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4620,"name":"uint256","nodeType":"ElementaryTypeName","src":"11867:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11815:72:25"},"returnParameters":{"id":4623,"nodeType":"ParameterList","parameters":[],"src":"11905:0:25"},"scope":4637,"src":"11786:121:25","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4635,"nodeType":"Block","src":"12613:2:25","statements":[]},"documentation":{"id":4626,"nodeType":"StructuredDocumentation","src":"11913:577:25","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":4636,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12504:19:25","nodeType":"FunctionDefinition","parameters":{"id":4633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"from","nameLocation":"12541:4:25","nodeType":"VariableDeclaration","scope":4636,"src":"12533:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4627,"name":"address","nodeType":"ElementaryTypeName","src":"12533:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4630,"mutability":"mutable","name":"to","nameLocation":"12563:2:25","nodeType":"VariableDeclaration","scope":4636,"src":"12555:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4629,"name":"address","nodeType":"ElementaryTypeName","src":"12555:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4632,"mutability":"mutable","name":"amount","nameLocation":"12583:6:25","nodeType":"VariableDeclaration","scope":4636,"src":"12575:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4631,"name":"uint256","nodeType":"ElementaryTypeName","src":"12575:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12523:72:25"},"returnParameters":{"id":4634,"nodeType":"ParameterList","parameters":[],"src":"12613:0:25"},"scope":4637,"src":"12495:120:25","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":4638,"src":"1403:11214:25","usedErrors":[]}],"src":"105:12513:25"},"id":25},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[4715]},"id":4716,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4639,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:26"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":4640,"nodeType":"StructuredDocumentation","src":"131:70:26","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":4715,"linearizedBaseContracts":[4715],"name":"IERC20","nameLocation":"212:6:26","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":4641,"nodeType":"StructuredDocumentation","src":"225:158:26","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":4649,"name":"Transfer","nameLocation":"394:8:26","nodeType":"EventDefinition","parameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4643,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:26","nodeType":"VariableDeclaration","scope":4649,"src":"403:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4642,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4645,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:26","nodeType":"VariableDeclaration","scope":4649,"src":"425:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4644,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4647,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:26","nodeType":"VariableDeclaration","scope":4649,"src":"445:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:26"},"src":"388:72:26"},{"anonymous":false,"documentation":{"id":4650,"nodeType":"StructuredDocumentation","src":"466:148:26","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":4658,"name":"Approval","nameLocation":"625:8:26","nodeType":"EventDefinition","parameters":{"id":4657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4652,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:26","nodeType":"VariableDeclaration","scope":4658,"src":"634:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4651,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4654,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:26","nodeType":"VariableDeclaration","scope":4658,"src":"657:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4653,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4656,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:26","nodeType":"VariableDeclaration","scope":4658,"src":"682:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4655,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:26"},"src":"619:78:26"},{"documentation":{"id":4659,"nodeType":"StructuredDocumentation","src":"703:66:26","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":4664,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:26","nodeType":"FunctionDefinition","parameters":{"id":4660,"nodeType":"ParameterList","parameters":[],"src":"794:2:26"},"returnParameters":{"id":4663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4664,"src":"820:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4661,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:26"},"scope":4715,"src":"774:55:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4665,"nodeType":"StructuredDocumentation","src":"835:72:26","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":4672,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:26","nodeType":"FunctionDefinition","parameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"account","nameLocation":"939:7:26","nodeType":"VariableDeclaration","scope":4672,"src":"931:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4666,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:26"},"returnParameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4672,"src":"971:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:26"},"scope":4715,"src":"912:68:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4673,"nodeType":"StructuredDocumentation","src":"986:202:26","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":4682,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:26","nodeType":"FunctionDefinition","parameters":{"id":4678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"mutability":"mutable","name":"to","nameLocation":"1219:2:26","nodeType":"VariableDeclaration","scope":4682,"src":"1211:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4674,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4677,"mutability":"mutable","name":"amount","nameLocation":"1231:6:26","nodeType":"VariableDeclaration","scope":4682,"src":"1223:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4676,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:26"},"returnParameters":{"id":4681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4682,"src":"1257:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4679,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:26"},"scope":4715,"src":"1193:70:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4683,"nodeType":"StructuredDocumentation","src":"1269:264:26","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":4692,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:26","nodeType":"FunctionDefinition","parameters":{"id":4688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4685,"mutability":"mutable","name":"owner","nameLocation":"1565:5:26","nodeType":"VariableDeclaration","scope":4692,"src":"1557:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4684,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4687,"mutability":"mutable","name":"spender","nameLocation":"1580:7:26","nodeType":"VariableDeclaration","scope":4692,"src":"1572:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4686,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:26"},"returnParameters":{"id":4691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4692,"src":"1612:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:26"},"scope":4715,"src":"1538:83:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4693,"nodeType":"StructuredDocumentation","src":"1627:642:26","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":4702,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:26","nodeType":"FunctionDefinition","parameters":{"id":4698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4695,"mutability":"mutable","name":"spender","nameLocation":"2299:7:26","nodeType":"VariableDeclaration","scope":4702,"src":"2291:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4694,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4697,"mutability":"mutable","name":"amount","nameLocation":"2316:6:26","nodeType":"VariableDeclaration","scope":4702,"src":"2308:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4696,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:26"},"returnParameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4702,"src":"2342:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4699,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:26"},"scope":4715,"src":"2274:74:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4703,"nodeType":"StructuredDocumentation","src":"2354:287:26","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":4714,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:26","nodeType":"FunctionDefinition","parameters":{"id":4710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4705,"mutability":"mutable","name":"from","nameLocation":"2685:4:26","nodeType":"VariableDeclaration","scope":4714,"src":"2677:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4704,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4707,"mutability":"mutable","name":"to","nameLocation":"2707:2:26","nodeType":"VariableDeclaration","scope":4714,"src":"2699:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4706,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4709,"mutability":"mutable","name":"amount","nameLocation":"2727:6:26","nodeType":"VariableDeclaration","scope":4714,"src":"2719:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4708,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:26"},"returnParameters":{"id":4713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4714,"src":"2758:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4711,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:26"},"scope":4715,"src":"2646:118:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4716,"src":"202:2564:26","usedErrors":[]}],"src":"106:2661:26"},"id":26},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol","exportedSymbols":{"Arrays":[5361],"Context":[5383],"Counters":[5457],"ERC20":[4637],"ERC20Snapshot":[5043],"IERC20":[4715],"IERC20Metadata":[5068],"Math":[6729]},"id":5044,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4717,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:27"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":4718,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5044,"sourceUnit":4638,"src":"149:22:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/Arrays.sol","file":"../../../utils/Arrays.sol","id":4719,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5044,"sourceUnit":5362,"src":"172:35:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":4720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5044,"sourceUnit":5458,"src":"208:37:27","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4722,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":4637,"src":"2437:5:27"},"id":4723,"nodeType":"InheritanceSpecifier","src":"2437:5:27"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4721,"nodeType":"StructuredDocumentation","src":"247:2153:27","text":" @dev This contract extends an ERC20 token with a snapshot mechanism. When a snapshot is created, the balances and\n total supply at the time are recorded for later access.\n This can be used to safely create mechanisms based on token balances such as trustless dividends or weighted voting.\n In naive implementations it's possible to perform a \"double spend\" attack by reusing the same balance from different\n accounts. By using snapshots to calculate dividends or voting power, those attacks no longer apply. It can also be\n used to create an efficient ERC20 forking mechanism.\n Snapshots are created by the internal {_snapshot} function, which will emit the {Snapshot} event and return a\n snapshot id. To get the total supply at the time of a snapshot, call the function {totalSupplyAt} with the snapshot\n id. To get the balance of an account at the time of a snapshot, call the {balanceOfAt} function with the snapshot id\n and the account address.\n NOTE: Snapshot policy can be customized by overriding the {_getCurrentSnapshotId} method. For example, having it\n return `block.number` will trigger the creation of snapshot at the beginning of each new block. When overriding this\n function, be careful about the monotonicity of its result. Non-monotonic snapshot ids will break the contract.\n Implementing snapshots for every block using this method will incur significant gas costs. For a gas-efficient\n alternative consider {ERC20Votes}.\n ==== Gas Costs\n Snapshots are efficient. Snapshot creation is _O(1)_. Retrieval of balances or total supply from a snapshot is _O(log\n n)_ in the number of snapshots that have been created, although _n_ for a specific account will generally be much\n smaller since identical balances in subsequent snapshots are stored as a single entry.\n There is a constant overhead for normal ERC20 transfers due to the additional snapshot bookkeeping. This overhead is\n only significant for the first transfer that immediately follows a snapshot for a particular account. Subsequent\n transfers will have normal cost until the next snapshot, and so on."},"fullyImplemented":false,"id":5043,"linearizedBaseContracts":[5043,4637,5068,4715,5383],"name":"ERC20Snapshot","nameLocation":"2420:13:27","nodeType":"ContractDefinition","nodes":[{"id":4727,"libraryName":{"id":4724,"name":"Arrays","nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"2646:6:27"},"nodeType":"UsingForDirective","src":"2640:27:27","typeName":{"baseType":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"2657:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4726,"nodeType":"ArrayTypeName","src":"2657:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"id":4731,"libraryName":{"id":4728,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":5457,"src":"2678:8:27"},"nodeType":"UsingForDirective","src":"2672:36:27","typeName":{"id":4730,"nodeType":"UserDefinedTypeName","pathNode":{"id":4729,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":5389,"src":"2691:16:27"},"referencedDeclaration":5389,"src":"2691:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"}}},{"canonicalName":"ERC20Snapshot.Snapshots","id":4738,"members":[{"constant":false,"id":4734,"mutability":"mutable","name":"ids","nameLocation":"2953:3:27","nodeType":"VariableDeclaration","scope":4738,"src":"2943:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4732,"name":"uint256","nodeType":"ElementaryTypeName","src":"2943:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4733,"nodeType":"ArrayTypeName","src":"2943:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4737,"mutability":"mutable","name":"values","nameLocation":"2976:6:27","nodeType":"VariableDeclaration","scope":4738,"src":"2966:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2966:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4736,"nodeType":"ArrayTypeName","src":"2966:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"Snapshots","nameLocation":"2923:9:27","nodeType":"StructDefinition","scope":5043,"src":"2916:73:27","visibility":"public"},{"constant":false,"id":4743,"mutability":"mutable","name":"_accountBalanceSnapshots","nameLocation":"3033:24:27","nodeType":"VariableDeclaration","scope":5043,"src":"2995:62:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$4738_storage_$","typeString":"mapping(address => struct ERC20Snapshot.Snapshots)"},"typeName":{"id":4742,"keyType":{"id":4739,"name":"address","nodeType":"ElementaryTypeName","src":"3003:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2995:29:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$4738_storage_$","typeString":"mapping(address => struct ERC20Snapshot.Snapshots)"},"valueType":{"id":4741,"nodeType":"UserDefinedTypeName","pathNode":{"id":4740,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":4738,"src":"3014:9:27"},"referencedDeclaration":4738,"src":"3014:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots"}}},"visibility":"private"},{"constant":false,"id":4746,"mutability":"mutable","name":"_totalSupplySnapshots","nameLocation":"3081:21:27","nodeType":"VariableDeclaration","scope":5043,"src":"3063:39:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage","typeString":"struct ERC20Snapshot.Snapshots"},"typeName":{"id":4745,"nodeType":"UserDefinedTypeName","pathNode":{"id":4744,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":4738,"src":"3063:9:27"},"referencedDeclaration":4738,"src":"3063:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots"}},"visibility":"private"},{"constant":false,"id":4749,"mutability":"mutable","name":"_currentSnapshotId","nameLocation":"3231:18:27","nodeType":"VariableDeclaration","scope":5043,"src":"3206:43:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage","typeString":"struct Counters.Counter"},"typeName":{"id":4748,"nodeType":"UserDefinedTypeName","pathNode":{"id":4747,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":5389,"src":"3206:16:27"},"referencedDeclaration":5389,"src":"3206:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":4750,"nodeType":"StructuredDocumentation","src":"3256:93:27","text":" @dev Emitted by {_snapshot} when a snapshot identified by `id` is created."},"id":4754,"name":"Snapshot","nameLocation":"3360:8:27","nodeType":"EventDefinition","parameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"3377:2:27","nodeType":"VariableDeclaration","scope":4754,"src":"3369:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4751,"name":"uint256","nodeType":"ElementaryTypeName","src":"3369:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3368:12:27"},"src":"3354:27:27"},{"body":{"id":4776,"nodeType":"Block","src":"4544:161:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4760,"name":"_currentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"4554:18:27","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage","typeString":"struct Counters.Counter storage ref"}},"id":4762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":5415,"src":"4554:28:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$5389_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$5389_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4554:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4764,"nodeType":"ExpressionStatement","src":"4554:30:27"},{"assignments":[4766],"declarations":[{"constant":false,"id":4766,"mutability":"mutable","name":"currentId","nameLocation":"4603:9:27","nodeType":"VariableDeclaration","scope":4776,"src":"4595:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4765,"name":"uint256","nodeType":"ElementaryTypeName","src":"4595:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4769,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4767,"name":"_getCurrentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"4615:21:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4615:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4595:43:27"},{"eventCall":{"arguments":[{"id":4771,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"4662:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4770,"name":"Snapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"4653:8:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4653:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4773,"nodeType":"EmitStatement","src":"4648:24:27"},{"expression":{"id":4774,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"4689:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4759,"id":4775,"nodeType":"Return","src":"4682:16:27"}]},"documentation":{"id":4755,"nodeType":"StructuredDocumentation","src":"3387:1096:27","text":" @dev Creates a new snapshot and returns its snapshot id.\n Emits a {Snapshot} event that contains the same id.\n {_snapshot} is `internal` and you have to decide how to expose it externally. Its usage may be restricted to a\n set of accounts, for example using {AccessControl}, or it may be open to the public.\n [WARNING]\n ====\n While an open way of calling {_snapshot} is required for certain trust minimization mechanisms such as forking,\n you must consider that it can potentially be used by attackers in two ways.\n First, it can be used to increase the cost of retrieval of values from snapshots, although it will grow\n logarithmically thus rendering this attack ineffective in the long term. Second, it can be used to target\n specific accounts and increase the cost of ERC20 transfers for them, in the ways specified in the Gas Costs\n section above.\n We haven't measured the actual numbers; if this is something you're interested in please reach out to us.\n ===="},"id":4777,"implemented":true,"kind":"function","modifiers":[],"name":"_snapshot","nameLocation":"4497:9:27","nodeType":"FunctionDefinition","parameters":{"id":4756,"nodeType":"ParameterList","parameters":[],"src":"4506:2:27"},"returnParameters":{"id":4759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4777,"src":"4535:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4757,"name":"uint256","nodeType":"ElementaryTypeName","src":"4535:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4534:9:27"},"scope":5043,"src":"4488:217:27","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4787,"nodeType":"Block","src":"4839:52:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4783,"name":"_currentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"4856:18:27","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage","typeString":"struct Counters.Counter storage ref"}},"id":4784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":5401,"src":"4856:26:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$5389_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5389_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4856:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4782,"id":4786,"nodeType":"Return","src":"4849:35:27"}]},"documentation":{"id":4778,"nodeType":"StructuredDocumentation","src":"4711:50:27","text":" @dev Get the current snapshotId"},"id":4788,"implemented":true,"kind":"function","modifiers":[],"name":"_getCurrentSnapshotId","nameLocation":"4775:21:27","nodeType":"FunctionDefinition","parameters":{"id":4779,"nodeType":"ParameterList","parameters":[],"src":"4796:2:27"},"returnParameters":{"id":4782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4788,"src":"4830:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"4830:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4829:9:27"},"scope":5043,"src":"4766:125:27","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4816,"nodeType":"Block","src":"5094:166:27","statements":[{"assignments":[4799,4801],"declarations":[{"constant":false,"id":4799,"mutability":"mutable","name":"snapshotted","nameLocation":"5110:11:27","nodeType":"VariableDeclaration","scope":4816,"src":"5105:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4798,"name":"bool","nodeType":"ElementaryTypeName","src":"5105:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4801,"mutability":"mutable","name":"value","nameLocation":"5131:5:27","nodeType":"VariableDeclaration","scope":4816,"src":"5123:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4800,"name":"uint256","nodeType":"ElementaryTypeName","src":"5123:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4808,"initialValue":{"arguments":[{"id":4803,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"5149:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4804,"name":"_accountBalanceSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"5161:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$4738_storage_$","typeString":"mapping(address => struct ERC20Snapshot.Snapshots storage ref)"}},"id":4806,"indexExpression":{"id":4805,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"5186:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5161:33:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Snapshots_$4738_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"}],"id":4802,"name":"_valueAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"5140:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_struct$_Snapshots_$4738_storage_ptr_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,struct ERC20Snapshot.Snapshots storage pointer) view returns (bool,uint256)"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5140:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5104:91:27"},{"expression":{"condition":{"id":4809,"name":"snapshotted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"5213:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4812,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"5245:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4811,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"5235:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5235:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5213:40:27","trueExpression":{"id":4810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5227:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4797,"id":4815,"nodeType":"Return","src":"5206:47:27"}]},"documentation":{"id":4789,"nodeType":"StructuredDocumentation","src":"4897:96:27","text":" @dev Retrieves the balance of `account` at the time `snapshotId` was created."},"functionSelector":"4ee2cd7e","id":4817,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfAt","nameLocation":"5007:11:27","nodeType":"FunctionDefinition","parameters":{"id":4794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"mutability":"mutable","name":"account","nameLocation":"5027:7:27","nodeType":"VariableDeclaration","scope":4817,"src":"5019:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4790,"name":"address","nodeType":"ElementaryTypeName","src":"5019:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4793,"mutability":"mutable","name":"snapshotId","nameLocation":"5044:10:27","nodeType":"VariableDeclaration","scope":4817,"src":"5036:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4792,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5018:37:27"},"returnParameters":{"id":4797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4817,"src":"5085:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4795,"name":"uint256","nodeType":"ElementaryTypeName","src":"5085:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5084:9:27"},"scope":5043,"src":"4998:262:27","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4840,"nodeType":"Block","src":"5440:149:27","statements":[{"assignments":[4826,4828],"declarations":[{"constant":false,"id":4826,"mutability":"mutable","name":"snapshotted","nameLocation":"5456:11:27","nodeType":"VariableDeclaration","scope":4840,"src":"5451:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4825,"name":"bool","nodeType":"ElementaryTypeName","src":"5451:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4828,"mutability":"mutable","name":"value","nameLocation":"5477:5:27","nodeType":"VariableDeclaration","scope":4840,"src":"5469:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"5469:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4833,"initialValue":{"arguments":[{"id":4830,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"5495:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4831,"name":"_totalSupplySnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"5507:21:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Snapshots_$4738_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"}],"id":4829,"name":"_valueAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"5486:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_struct$_Snapshots_$4738_storage_ptr_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,struct ERC20Snapshot.Snapshots storage pointer) view returns (bool,uint256)"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5486:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5450:79:27"},{"expression":{"condition":{"id":4834,"name":"snapshotted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"5547:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4836,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"5569:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5569:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5547:35:27","trueExpression":{"id":4835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"5561:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4824,"id":4839,"nodeType":"Return","src":"5540:42:27"}]},"documentation":{"id":4818,"nodeType":"StructuredDocumentation","src":"5266:88:27","text":" @dev Retrieves the total supply at the time `snapshotId` was created."},"functionSelector":"981b24d0","id":4841,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupplyAt","nameLocation":"5368:13:27","nodeType":"FunctionDefinition","parameters":{"id":4821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4820,"mutability":"mutable","name":"snapshotId","nameLocation":"5390:10:27","nodeType":"VariableDeclaration","scope":4841,"src":"5382:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4819,"name":"uint256","nodeType":"ElementaryTypeName","src":"5382:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5381:20:27"},"returnParameters":{"id":4824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4841,"src":"5431:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4822,"name":"uint256","nodeType":"ElementaryTypeName","src":"5431:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5430:9:27"},"scope":5043,"src":"5359:230:27","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[4625],"body":{"id":4898,"nodeType":"Block","src":"5930:474:27","statements":[{"expression":{"arguments":[{"id":4854,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"5967:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4855,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"5973:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4856,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"5977:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4851,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5940:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Snapshot_$5043_$","typeString":"type(contract super ERC20Snapshot)"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":4625,"src":"5940:26:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5940:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4858,"nodeType":"ExpressionStatement","src":"5940:44:27"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"5999:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6015:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6007:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4860,"name":"address","nodeType":"ElementaryTypeName","src":"6007:7:27","typeDescriptions":{}}},"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6007:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5999:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4873,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"6142:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6156:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6148:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4874,"name":"address","nodeType":"ElementaryTypeName","src":"6148:7:27","typeDescriptions":{}}},"id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6148:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6142:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4895,"nodeType":"Block","src":"6281:117:27","statements":[{"expression":{"arguments":[{"id":4888,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"6342:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4887,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"6319:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6319:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4890,"nodeType":"ExpressionStatement","src":"6319:28:27"},{"expression":{"arguments":[{"id":4892,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"6384:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4891,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"6361:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6361:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4894,"nodeType":"ExpressionStatement","src":"6361:26:27"}]},"id":4896,"nodeType":"IfStatement","src":"6138:260:27","trueBody":{"id":4886,"nodeType":"Block","src":"6160:115:27","statements":[{"expression":{"arguments":[{"id":4880,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"6217:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4879,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"6194:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6194:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4882,"nodeType":"ExpressionStatement","src":"6194:28:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4883,"name":"_updateTotalSupplySnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"6236:26:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6236:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4885,"nodeType":"ExpressionStatement","src":"6236:28:27"}]}},"id":4897,"nodeType":"IfStatement","src":"5995:403:27","trueBody":{"id":4872,"nodeType":"Block","src":"6019:113:27","statements":[{"expression":{"arguments":[{"id":4866,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"6076:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4865,"name":"_updateAccountSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"6053:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6053:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4868,"nodeType":"ExpressionStatement","src":"6053:26:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4869,"name":"_updateTotalSupplySnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"6093:26:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6093:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4871,"nodeType":"ExpressionStatement","src":"6093:28:27"}]}}]},"id":4899,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"5811:20:27","nodeType":"FunctionDefinition","overrides":{"id":4849,"nodeType":"OverrideSpecifier","overrides":[],"src":"5921:8:27"},"parameters":{"id":4848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4843,"mutability":"mutable","name":"from","nameLocation":"5849:4:27","nodeType":"VariableDeclaration","scope":4899,"src":"5841:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4842,"name":"address","nodeType":"ElementaryTypeName","src":"5841:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4845,"mutability":"mutable","name":"to","nameLocation":"5871:2:27","nodeType":"VariableDeclaration","scope":4899,"src":"5863:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4844,"name":"address","nodeType":"ElementaryTypeName","src":"5863:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4847,"mutability":"mutable","name":"amount","nameLocation":"5891:6:27","nodeType":"VariableDeclaration","scope":4899,"src":"5883:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"5883:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5831:72:27"},"returnParameters":{"id":4850,"nodeType":"ParameterList","parameters":[],"src":"5930:0:27"},"scope":5043,"src":"5802:602:27","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4953,"nodeType":"Block","src":"6514:1490:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4912,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"6532:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6545:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6532:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230536e617073686f743a2069642069732030","id":4915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6548:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6","typeString":"literal_string \"ERC20Snapshot: id is 0\""},"value":"ERC20Snapshot: id is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d85a3cdc203c5cdc6dda93c12cd017145671a0ed9058a16c7aa00b8398a4a8e6","typeString":"literal_string \"ERC20Snapshot: id is 0\""}],"id":4911,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6524:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6524:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4917,"nodeType":"ExpressionStatement","src":"6524:49:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4919,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"6591:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4920,"name":"_getCurrentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"6605:21:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6605:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6591:37:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230536e617073686f743a206e6f6e6578697374656e74206964","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6630:31:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940","typeString":"literal_string \"ERC20Snapshot: nonexistent id\""},"value":"ERC20Snapshot: nonexistent id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_031e0835d070e7bbd2c8dcce466eadb8c6b9fd22432b0357ab8c37bd9a385940","typeString":"literal_string \"ERC20Snapshot: nonexistent id\""}],"id":4918,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6583:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:79:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4925,"nodeType":"ExpressionStatement","src":"6583:79:27"},{"assignments":[4927],"declarations":[{"constant":false,"id":4927,"mutability":"mutable","name":"index","nameLocation":"7793:5:27","nodeType":"VariableDeclaration","scope":4953,"src":"7785:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4926,"name":"uint256","nodeType":"ElementaryTypeName","src":"7785:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4933,"initialValue":{"arguments":[{"id":4931,"name":"snapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"7830:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4928,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"7801:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots storage pointer"}},"id":4929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":4734,"src":"7801:13:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"findUpperBound","nodeType":"MemberAccess","referencedDeclaration":5360,"src":"7801:28:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) view returns (uint256)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7801:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7785:56:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4934,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"7856:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4935,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"7865:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots storage pointer"}},"id":4936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":4734,"src":"7865:13:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7865:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7856:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4951,"nodeType":"Block","src":"7935:63:27","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7957:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"baseExpression":{"expression":{"id":4945,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"7963:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots storage pointer"}},"id":4946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":4737,"src":"7963:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4948,"indexExpression":{"id":4947,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"7980:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7963:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7956:31:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4910,"id":4950,"nodeType":"Return","src":"7949:38:27"}]},"id":4952,"nodeType":"IfStatement","src":"7852:146:27","trueBody":{"id":4943,"nodeType":"Block","src":"7887:42:27","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7909:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7916:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7908:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4910,"id":4942,"nodeType":"Return","src":"7901:17:27"}]}}]},"id":4954,"implemented":true,"kind":"function","modifiers":[],"name":"_valueAt","nameLocation":"6419:8:27","nodeType":"FunctionDefinition","parameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4901,"mutability":"mutable","name":"snapshotId","nameLocation":"6436:10:27","nodeType":"VariableDeclaration","scope":4954,"src":"6428:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4900,"name":"uint256","nodeType":"ElementaryTypeName","src":"6428:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4904,"mutability":"mutable","name":"snapshots","nameLocation":"6466:9:27","nodeType":"VariableDeclaration","scope":4954,"src":"6448:27:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots"},"typeName":{"id":4903,"nodeType":"UserDefinedTypeName","pathNode":{"id":4902,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":4738,"src":"6448:9:27"},"referencedDeclaration":4738,"src":"6448:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots"}},"visibility":"internal"}],"src":"6427:49:27"},"returnParameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4954,"src":"6499:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4906,"name":"bool","nodeType":"ElementaryTypeName","src":"6499:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4954,"src":"6505:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"6505:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6498:15:27"},"scope":5043,"src":"6410:1594:27","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4968,"nodeType":"Block","src":"8067:87:27","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4960,"name":"_accountBalanceSnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"8093:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Snapshots_$4738_storage_$","typeString":"mapping(address => struct ERC20Snapshot.Snapshots storage ref)"}},"id":4962,"indexExpression":{"id":4961,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"8118:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8093:33:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"}},{"arguments":[{"id":4964,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"8138:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4963,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"8128:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8128:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Snapshots_$4738_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4959,"name":"_updateSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"8077:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Snapshots_$4738_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct ERC20Snapshot.Snapshots storage pointer,uint256)"}},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8077:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4967,"nodeType":"ExpressionStatement","src":"8077:70:27"}]},"id":4969,"implemented":true,"kind":"function","modifiers":[],"name":"_updateAccountSnapshot","nameLocation":"8019:22:27","nodeType":"FunctionDefinition","parameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"account","nameLocation":"8050:7:27","nodeType":"VariableDeclaration","scope":4969,"src":"8042:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4955,"name":"address","nodeType":"ElementaryTypeName","src":"8042:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8041:17:27"},"returnParameters":{"id":4958,"nodeType":"ParameterList","parameters":[],"src":"8067:0:27"},"scope":5043,"src":"8010:144:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4978,"nodeType":"Block","src":"8206:70:27","statements":[{"expression":{"arguments":[{"id":4973,"name":"_totalSupplySnapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"8232:21:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4974,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"8255:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8255:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Snapshots_$4738_storage","typeString":"struct ERC20Snapshot.Snapshots storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4972,"name":"_updateSnapshot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"8216:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Snapshots_$4738_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct ERC20Snapshot.Snapshots storage pointer,uint256)"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8216:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4977,"nodeType":"ExpressionStatement","src":"8216:53:27"}]},"id":4979,"implemented":true,"kind":"function","modifiers":[],"name":"_updateTotalSupplySnapshot","nameLocation":"8169:26:27","nodeType":"FunctionDefinition","parameters":{"id":4970,"nodeType":"ParameterList","parameters":[],"src":"8195:2:27"},"returnParameters":{"id":4971,"nodeType":"ParameterList","parameters":[],"src":"8206:0:27"},"scope":5043,"src":"8160:116:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5016,"nodeType":"Block","src":"8366:220:27","statements":[{"assignments":[4988],"declarations":[{"constant":false,"id":4988,"mutability":"mutable","name":"currentId","nameLocation":"8384:9:27","nodeType":"VariableDeclaration","scope":5016,"src":"8376:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4987,"name":"uint256","nodeType":"ElementaryTypeName","src":"8376:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4991,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4989,"name":"_getCurrentSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"8396:21:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8396:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8376:43:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4993,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"8449:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots storage pointer"}},"id":4994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":4734,"src":"8449:13:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}],"id":4992,"name":"_lastSnapshotId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"8433:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] storage pointer) view returns (uint256)"}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8433:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4996,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"8466:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8433:42:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5015,"nodeType":"IfStatement","src":"8429:151:27","trueBody":{"id":5014,"nodeType":"Block","src":"8477:103:27","statements":[{"expression":{"arguments":[{"id":5003,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"8510:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":4998,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"8491:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots storage pointer"}},"id":5001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ids","nodeType":"MemberAccess","referencedDeclaration":4734,"src":"8491:13:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"8491:18:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8491:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5005,"nodeType":"ExpressionStatement","src":"8491:29:27"},{"expression":{"arguments":[{"id":5011,"name":"currentValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"8556:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":5006,"name":"snapshots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"8534:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots storage pointer"}},"id":5009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"values","nodeType":"MemberAccess","referencedDeclaration":4737,"src":"8534:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"8534:21:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8534:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5013,"nodeType":"ExpressionStatement","src":"8534:35:27"}]}}]},"id":5017,"implemented":true,"kind":"function","modifiers":[],"name":"_updateSnapshot","nameLocation":"8291:15:27","nodeType":"FunctionDefinition","parameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"snapshots","nameLocation":"8325:9:27","nodeType":"VariableDeclaration","scope":5017,"src":"8307:27:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots"},"typeName":{"id":4981,"nodeType":"UserDefinedTypeName","pathNode":{"id":4980,"name":"Snapshots","nodeType":"IdentifierPath","referencedDeclaration":4738,"src":"8307:9:27"},"referencedDeclaration":4738,"src":"8307:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_Snapshots_$4738_storage_ptr","typeString":"struct ERC20Snapshot.Snapshots"}},"visibility":"internal"},{"constant":false,"id":4984,"mutability":"mutable","name":"currentValue","nameLocation":"8344:12:27","nodeType":"VariableDeclaration","scope":5017,"src":"8336:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"8336:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8306:51:27"},"returnParameters":{"id":4986,"nodeType":"ParameterList","parameters":[],"src":"8366:0:27"},"scope":5043,"src":"8282:304:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5041,"nodeType":"Block","src":"8671:127:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5025,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"8685:3:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8685:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8699:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8685:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5039,"nodeType":"Block","src":"8741:51:27","statements":[{"expression":{"baseExpression":{"id":5032,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"8762:3:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":5037,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5033,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"8766:3:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8766:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8779:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8766:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8762:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5024,"id":5038,"nodeType":"Return","src":"8755:26:27"}]},"id":5040,"nodeType":"IfStatement","src":"8681:111:27","trueBody":{"id":5031,"nodeType":"Block","src":"8702:33:27","statements":[{"expression":{"hexValue":"30","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8723:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5024,"id":5030,"nodeType":"Return","src":"8716:8:27"}]}}]},"id":5042,"implemented":true,"kind":"function","modifiers":[],"name":"_lastSnapshotId","nameLocation":"8601:15:27","nodeType":"FunctionDefinition","parameters":{"id":5021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5020,"mutability":"mutable","name":"ids","nameLocation":"8635:3:27","nodeType":"VariableDeclaration","scope":5042,"src":"8617:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5018,"name":"uint256","nodeType":"ElementaryTypeName","src":"8617:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5019,"nodeType":"ArrayTypeName","src":"8617:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8616:23:27"},"returnParameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5042,"src":"8662:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"8662:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8661:9:27"},"scope":5043,"src":"8592:206:27","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":5044,"src":"2402:6398:27","usedErrors":[]}],"src":"124:8677:27"},"id":27},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[4715],"IERC20Metadata":[5068]},"id":5069,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5045,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:28"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":5046,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5069,"sourceUnit":4716,"src":"135:23:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5048,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":4715,"src":"305:6:28"},"id":5049,"nodeType":"InheritanceSpecifier","src":"305:6:28"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":5047,"nodeType":"StructuredDocumentation","src":"160:116:28","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":5068,"linearizedBaseContracts":[5068,4715],"name":"IERC20Metadata","nameLocation":"287:14:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5050,"nodeType":"StructuredDocumentation","src":"318:54:28","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":5055,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:28","nodeType":"FunctionDefinition","parameters":{"id":5051,"nodeType":"ParameterList","parameters":[],"src":"390:2:28"},"returnParameters":{"id":5054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5055,"src":"416:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5052,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:28"},"scope":5068,"src":"377:54:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5056,"nodeType":"StructuredDocumentation","src":"437:56:28","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":5061,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:28","nodeType":"FunctionDefinition","parameters":{"id":5057,"nodeType":"ParameterList","parameters":[],"src":"513:2:28"},"returnParameters":{"id":5060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5061,"src":"539:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5058,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:28"},"scope":5068,"src":"498:56:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5062,"nodeType":"StructuredDocumentation","src":"560:65:28","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":5067,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:28","nodeType":"FunctionDefinition","parameters":{"id":5063,"nodeType":"ParameterList","parameters":[],"src":"647:2:28"},"returnParameters":{"id":5066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5067,"src":"673:5:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5064,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:28"},"scope":5068,"src":"630:50:28","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5069,"src":"277:405:28","usedErrors":[]}],"src":"110:573:28"},"id":28},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","exportedSymbols":{"Context":[5383],"Counters":[5457],"ECDSA":[6071],"EIP712":[6225],"ERC20":[4637],"ERC20Permit":[5240],"IERC20":[4715],"IERC20Metadata":[5068],"IERC20Permit":[5276],"Strings":[5683]},"id":5241,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5070,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:29"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"./draft-IERC20Permit.sol","id":5071,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5241,"sourceUnit":5277,"src":"153:34:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":5072,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5241,"sourceUnit":4638,"src":"188:22:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol","file":"../../../utils/cryptography/draft-EIP712.sol","id":5073,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5241,"sourceUnit":6226,"src":"211:54:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":5074,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5241,"sourceUnit":6072,"src":"266:47:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":5075,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5241,"sourceUnit":5458,"src":"314:37:29","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5077,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":4637,"src":"904:5:29"},"id":5078,"nodeType":"InheritanceSpecifier","src":"904:5:29"},{"baseName":{"id":5079,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":5276,"src":"911:12:29"},"id":5080,"nodeType":"InheritanceSpecifier","src":"911:12:29"},{"baseName":{"id":5081,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":6225,"src":"925:6:29"},"id":5082,"nodeType":"InheritanceSpecifier","src":"925:6:29"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":5076,"nodeType":"StructuredDocumentation","src":"353:517:29","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":false,"id":5240,"linearizedBaseContracts":[5240,6225,5276,4637,5068,4715,5383],"name":"ERC20Permit","nameLocation":"889:11:29","nodeType":"ContractDefinition","nodes":[{"id":5086,"libraryName":{"id":5083,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":5457,"src":"944:8:29"},"nodeType":"UsingForDirective","src":"938:36:29","typeName":{"id":5085,"nodeType":"UserDefinedTypeName","pathNode":{"id":5084,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":5389,"src":"957:16:29"},"referencedDeclaration":5389,"src":"957:16:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":5091,"mutability":"mutable","name":"_nonces","nameLocation":"1025:7:29","nodeType":"VariableDeclaration","scope":5240,"src":"980:52:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$5389_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":5090,"keyType":{"id":5087,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"980:36:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$5389_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueType":{"id":5089,"nodeType":"UserDefinedTypeName","pathNode":{"id":5088,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":5389,"src":"999:16:29"},"referencedDeclaration":5389,"src":"999:16:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":5096,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1116:16:29","nodeType":"VariableDeclaration","scope":5240,"src":"1091:147:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1091:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1153:84:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":5093,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1143:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1143:95:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":5097,"nodeType":"StructuredDocumentation","src":"1244:254:29","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":5099,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1571:32:29","nodeType":"VariableDeclaration","scope":5240,"src":"1555:48:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1555:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":5109,"nodeType":"Block","src":"1885:2:29","statements":[]},"documentation":{"id":5100,"nodeType":"StructuredDocumentation","src":"1610:220:29","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":5110,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5105,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"1874:4:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":5106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1880:3:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":5107,"kind":"baseConstructorSpecifier","modifierName":{"id":5104,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":6225,"src":"1867:6:29"},"nodeType":"ModifierInvocation","src":"1867:17:29"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"name","nameLocation":"1861:4:29","nodeType":"VariableDeclaration","scope":5110,"src":"1847:18:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5101,"name":"string","nodeType":"ElementaryTypeName","src":"1847:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1846:20:29"},"returnParameters":{"id":5108,"nodeType":"ParameterList","parameters":[],"src":"1885:0:29"},"scope":5240,"src":"1835:52:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5261],"body":{"id":5182,"nodeType":"Block","src":"2146:428:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5130,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2164:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2164:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5132,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"2183:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2164:27:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":5134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:31:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":5129,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2156:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2156:69:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5136,"nodeType":"ExpressionStatement","src":"2156:69:29"},{"assignments":[5138],"declarations":[{"constant":false,"id":5138,"mutability":"mutable","name":"structHash","nameLocation":"2244:10:29","nodeType":"VariableDeclaration","scope":5182,"src":"2236:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2236:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5152,"initialValue":{"arguments":[{"arguments":[{"id":5142,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"2278:16:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5143,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"2296:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5144,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"2303:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"2312:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5147,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"2329:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5146,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"2319:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2319:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5149,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"2337:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5140,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2267:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2267:10:29","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2267:79:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5139,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2257:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2257:90:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2236:111:29"},{"assignments":[5154],"declarations":[{"constant":false,"id":5154,"mutability":"mutable","name":"hash","nameLocation":"2366:4:29","nodeType":"VariableDeclaration","scope":5182,"src":"2358:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2358:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5158,"initialValue":{"arguments":[{"id":5156,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"2390:10:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5155,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"2373:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2373:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2358:43:29"},{"assignments":[5160],"declarations":[{"constant":false,"id":5160,"mutability":"mutable","name":"signer","nameLocation":"2420:6:29","nodeType":"VariableDeclaration","scope":5182,"src":"2412:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5159,"name":"address","nodeType":"ElementaryTypeName","src":"2412:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5168,"initialValue":{"arguments":[{"id":5163,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5154,"src":"2443:4:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5164,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"2449:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5165,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"2452:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5166,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"2455:1:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5161,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"2429:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$6071_$","typeString":"type(library ECDSA)"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"2429:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2429:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2412:45:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5170,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"2475:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5171,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"2485:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2475:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2492:32:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":5169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2467:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2467:58:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5175,"nodeType":"ExpressionStatement","src":"2467:58:29"},{"expression":{"arguments":[{"id":5177,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"2545:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5178,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"2552:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"2561:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5176,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"2536:8:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2536:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5181,"nodeType":"ExpressionStatement","src":"2536:31:29"}]},"documentation":{"id":5111,"nodeType":"StructuredDocumentation","src":"1893:50:29","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":5183,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1957:6:29","nodeType":"FunctionDefinition","overrides":{"id":5127,"nodeType":"OverrideSpecifier","overrides":[],"src":"2137:8:29"},"parameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"owner","nameLocation":"1981:5:29","nodeType":"VariableDeclaration","scope":5183,"src":"1973:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5112,"name":"address","nodeType":"ElementaryTypeName","src":"1973:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5115,"mutability":"mutable","name":"spender","nameLocation":"2004:7:29","nodeType":"VariableDeclaration","scope":5183,"src":"1996:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5114,"name":"address","nodeType":"ElementaryTypeName","src":"1996:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5117,"mutability":"mutable","name":"value","nameLocation":"2029:5:29","nodeType":"VariableDeclaration","scope":5183,"src":"2021:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5116,"name":"uint256","nodeType":"ElementaryTypeName","src":"2021:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5119,"mutability":"mutable","name":"deadline","nameLocation":"2052:8:29","nodeType":"VariableDeclaration","scope":5183,"src":"2044:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2044:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5121,"mutability":"mutable","name":"v","nameLocation":"2076:1:29","nodeType":"VariableDeclaration","scope":5183,"src":"2070:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5120,"name":"uint8","nodeType":"ElementaryTypeName","src":"2070:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5123,"mutability":"mutable","name":"r","nameLocation":"2095:1:29","nodeType":"VariableDeclaration","scope":5183,"src":"2087:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2087:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5125,"mutability":"mutable","name":"s","nameLocation":"2114:1:29","nodeType":"VariableDeclaration","scope":5183,"src":"2106:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2106:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1963:158:29"},"returnParameters":{"id":5128,"nodeType":"ParameterList","parameters":[],"src":"2146:0:29"},"scope":5240,"src":"1948:626:29","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[5269],"body":{"id":5198,"nodeType":"Block","src":"2713:48:29","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":5192,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"2730:7:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$5389_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":5194,"indexExpression":{"id":5193,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"2738:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2730:14:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage","typeString":"struct Counters.Counter storage ref"}},"id":5195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":5401,"src":"2730:22:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$5389_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5389_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2730:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5191,"id":5197,"nodeType":"Return","src":"2723:31:29"}]},"documentation":{"id":5184,"nodeType":"StructuredDocumentation","src":"2580:50:29","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":5199,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2644:6:29","nodeType":"FunctionDefinition","overrides":{"id":5188,"nodeType":"OverrideSpecifier","overrides":[],"src":"2686:8:29"},"parameters":{"id":5187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5186,"mutability":"mutable","name":"owner","nameLocation":"2659:5:29","nodeType":"VariableDeclaration","scope":5199,"src":"2651:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5185,"name":"address","nodeType":"ElementaryTypeName","src":"2651:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2650:15:29"},"returnParameters":{"id":5191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5199,"src":"2704:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5189,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2703:9:29"},"scope":5240,"src":"2635:126:29","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[5275],"body":{"id":5209,"nodeType":"Block","src":"2954:44:29","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5206,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"2971:18:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2971:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5205,"id":5208,"nodeType":"Return","src":"2964:27:29"}]},"documentation":{"id":5200,"nodeType":"StructuredDocumentation","src":"2767:60:29","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":5210,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2894:16:29","nodeType":"FunctionDefinition","overrides":{"id":5202,"nodeType":"OverrideSpecifier","overrides":[],"src":"2927:8:29"},"parameters":{"id":5201,"nodeType":"ParameterList","parameters":[],"src":"2910:2:29"},"returnParameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5210,"src":"2945:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2945:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2944:9:29"},"scope":5240,"src":"2885:113:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5238,"nodeType":"Block","src":"3206:126:29","statements":[{"assignments":[5222],"declarations":[{"constant":false,"id":5222,"mutability":"mutable","name":"nonce","nameLocation":"3241:5:29","nodeType":"VariableDeclaration","scope":5238,"src":"3216:30:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":5221,"nodeType":"UserDefinedTypeName","pathNode":{"id":5220,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":5389,"src":"3216:16:29"},"referencedDeclaration":5389,"src":"3216:16:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":5226,"initialValue":{"baseExpression":{"id":5223,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"3249:7:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$5389_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":5225,"indexExpression":{"id":5224,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"3257:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3249:14:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3216:47:29"},{"expression":{"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5227,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"3273:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5228,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"3283:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":5229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":5401,"src":"3283:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$5389_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5389_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3283:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3273:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5232,"nodeType":"ExpressionStatement","src":"3273:25:29"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5233,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"3308:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":5235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":5415,"src":"3308:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$5389_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$5389_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3308:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5237,"nodeType":"ExpressionStatement","src":"3308:17:29"}]},"documentation":{"id":5211,"nodeType":"StructuredDocumentation","src":"3004:120:29","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":5239,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3138:9:29","nodeType":"FunctionDefinition","parameters":{"id":5214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5213,"mutability":"mutable","name":"owner","nameLocation":"3156:5:29","nodeType":"VariableDeclaration","scope":5239,"src":"3148:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5212,"name":"address","nodeType":"ElementaryTypeName","src":"3148:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3147:15:29"},"returnParameters":{"id":5217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5216,"mutability":"mutable","name":"current","nameLocation":"3197:7:29","nodeType":"VariableDeclaration","scope":5239,"src":"3189:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3189:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3188:17:29"},"scope":5240,"src":"3129:203:29","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":5241,"src":"871:2463:29","usedErrors":[]}],"src":"128:3207:29"},"id":29},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[5276]},"id":5277,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5242,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:30"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":5243,"nodeType":"StructuredDocumentation","src":"139:480:30","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":5276,"linearizedBaseContracts":[5276],"name":"IERC20Permit","nameLocation":"630:12:30","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5244,"nodeType":"StructuredDocumentation","src":"649:792:30","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":5261,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:30","nodeType":"FunctionDefinition","parameters":{"id":5259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5246,"mutability":"mutable","name":"owner","nameLocation":"1479:5:30","nodeType":"VariableDeclaration","scope":5261,"src":"1471:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5245,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5248,"mutability":"mutable","name":"spender","nameLocation":"1502:7:30","nodeType":"VariableDeclaration","scope":5261,"src":"1494:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5247,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5250,"mutability":"mutable","name":"value","nameLocation":"1527:5:30","nodeType":"VariableDeclaration","scope":5261,"src":"1519:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5252,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:30","nodeType":"VariableDeclaration","scope":5261,"src":"1542:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5254,"mutability":"mutable","name":"v","nameLocation":"1574:1:30","nodeType":"VariableDeclaration","scope":5261,"src":"1568:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5253,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5256,"mutability":"mutable","name":"r","nameLocation":"1593:1:30","nodeType":"VariableDeclaration","scope":5261,"src":"1585:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5258,"mutability":"mutable","name":"s","nameLocation":"1612:1:30","nodeType":"VariableDeclaration","scope":5261,"src":"1604:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:30"},"returnParameters":{"id":5260,"nodeType":"ParameterList","parameters":[],"src":"1628:0:30"},"scope":5276,"src":"1446:183:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5262,"nodeType":"StructuredDocumentation","src":"1635:294:30","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":5269,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:30","nodeType":"FunctionDefinition","parameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5264,"mutability":"mutable","name":"owner","nameLocation":"1958:5:30","nodeType":"VariableDeclaration","scope":5269,"src":"1950:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5263,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:30"},"returnParameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5269,"src":"1988:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:30"},"scope":5276,"src":"1934:63:30","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5270,"nodeType":"StructuredDocumentation","src":"2003:128:30","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":5275,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:30","nodeType":"FunctionDefinition","parameters":{"id":5271,"nodeType":"ParameterList","parameters":[],"src":"2214:2:30"},"returnParameters":{"id":5274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5275,"src":"2240:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:30"},"scope":5276,"src":"2189:60:30","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5277,"src":"620:1631:30","usedErrors":[]}],"src":"114:2138:30"},"id":30},"contracts/.deps/npm/@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[5361],"Math":[6729]},"id":5362,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5278,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"85:23:31"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":5279,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5362,"sourceUnit":6730,"src":"110:25:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5280,"nodeType":"StructuredDocumentation","src":"137:63:31","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":5361,"linearizedBaseContracts":[5361],"name":"Arrays","nameLocation":"209:6:31","nodeType":"ContractDefinition","nodes":[{"body":{"id":5359,"nodeType":"Block","src":"732:794:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5291,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"746:5:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"746:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"762:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"746:17:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5298,"nodeType":"IfStatement","src":"742:56:31","trueBody":{"id":5297,"nodeType":"Block","src":"765:33:31","statements":[{"expression":{"hexValue":"30","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"786:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5290,"id":5296,"nodeType":"Return","src":"779:8:31"}]}},{"assignments":[5300],"declarations":[{"constant":false,"id":5300,"mutability":"mutable","name":"low","nameLocation":"816:3:31","nodeType":"VariableDeclaration","scope":5359,"src":"808:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5299,"name":"uint256","nodeType":"ElementaryTypeName","src":"808:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5302,"initialValue":{"hexValue":"30","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"822:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"808:15:31"},{"assignments":[5304],"declarations":[{"constant":false,"id":5304,"mutability":"mutable","name":"high","nameLocation":"841:4:31","nodeType":"VariableDeclaration","scope":5359,"src":"833:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5303,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5307,"initialValue":{"expression":{"id":5305,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"848:5:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"848:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"833:27:31"},{"body":{"id":5337,"nodeType":"Block","src":"890:395:31","statements":[{"assignments":[5312],"declarations":[{"constant":false,"id":5312,"mutability":"mutable","name":"mid","nameLocation":"912:3:31","nodeType":"VariableDeclaration","scope":5337,"src":"904:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5311,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5318,"initialValue":{"arguments":[{"id":5315,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"931:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5316,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"936:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5313,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"918:4:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6729_$","typeString":"type(library Math)"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6291,"src":"918:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"918:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"904:37:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5319,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"1158:5:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":5321,"indexExpression":{"id":5320,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"1164:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1158:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5322,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"1171:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1158:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5335,"nodeType":"Block","src":"1229:46:31","statements":[{"expression":{"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5329,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"1247:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5330,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"1253:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1259:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1253:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1247:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5334,"nodeType":"ExpressionStatement","src":"1247:13:31"}]},"id":5336,"nodeType":"IfStatement","src":"1154:121:31","trueBody":{"id":5328,"nodeType":"Block","src":"1180:43:31","statements":[{"expression":{"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5324,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"1198:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5325,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"1205:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1198:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5327,"nodeType":"ExpressionStatement","src":"1198:10:31"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5308,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"878:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5309,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"884:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"878:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5338,"nodeType":"WhileStatement","src":"871:414:31"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5339,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"1402:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1408:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1402:7:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5342,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"1413:5:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":5346,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5343,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"1419:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1425:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1419:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1413:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5347,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"1431:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1413:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1402:36:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5357,"nodeType":"Block","src":"1485:35:31","statements":[{"expression":{"id":5355,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"1506:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5290,"id":5356,"nodeType":"Return","src":"1499:10:31"}]},"id":5358,"nodeType":"IfStatement","src":"1398:122:31","trueBody":{"id":5354,"nodeType":"Block","src":"1440:39:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5350,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"1461:3:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1467:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1461:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5290,"id":5353,"nodeType":"Return","src":"1454:14:31"}]}}]},"documentation":{"id":5281,"nodeType":"StructuredDocumentation","src":"222:407:31","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."},"id":5360,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"643:14:31","nodeType":"FunctionDefinition","parameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5284,"mutability":"mutable","name":"array","nameLocation":"676:5:31","nodeType":"VariableDeclaration","scope":5360,"src":"658:23:31","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5282,"name":"uint256","nodeType":"ElementaryTypeName","src":"658:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5283,"nodeType":"ArrayTypeName","src":"658:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5286,"mutability":"mutable","name":"element","nameLocation":"691:7:31","nodeType":"VariableDeclaration","scope":5360,"src":"683:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5285,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"657:42:31"},"returnParameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5360,"src":"723:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5288,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"722:9:31"},"scope":5361,"src":"634:892:31","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5362,"src":"201:1327:31","usedErrors":[]}],"src":"85:1444:31"},"id":31},"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[5383]},"id":5384,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5363,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:32"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":5364,"nodeType":"StructuredDocumentation","src":"111:496:32","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":5383,"linearizedBaseContracts":[5383],"name":"Context","nameLocation":"626:7:32","nodeType":"ContractDefinition","nodes":[{"body":{"id":5372,"nodeType":"Block","src":"702:34:32","statements":[{"expression":{"expression":{"id":5369,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5368,"id":5371,"nodeType":"Return","src":"712:17:32"}]},"id":5373,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:32","nodeType":"FunctionDefinition","parameters":{"id":5365,"nodeType":"ParameterList","parameters":[],"src":"659:2:32"},"returnParameters":{"id":5368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5373,"src":"693:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5366,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:32"},"scope":5383,"src":"640:96:32","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":5381,"nodeType":"Block","src":"809:32:32","statements":[{"expression":{"expression":{"id":5378,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:32","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":5377,"id":5380,"nodeType":"Return","src":"819:15:32"}]},"id":5382,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:32","nodeType":"FunctionDefinition","parameters":{"id":5374,"nodeType":"ParameterList","parameters":[],"src":"759:2:32"},"returnParameters":{"id":5377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5382,"src":"793:14:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5375,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:32"},"scope":5383,"src":"742:99:32","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":5384,"src":"608:235:32","usedErrors":[]}],"src":"86:758:32"},"id":32},"contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[5457]},"id":5458,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5385,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:33"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5386,"nodeType":"StructuredDocumentation","src":"112:311:33","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":5457,"linearizedBaseContracts":[5457],"name":"Counters","nameLocation":"432:8:33","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":5389,"members":[{"constant":false,"id":5388,"mutability":"mutable","name":"_value","nameLocation":"794:6:33","nodeType":"VariableDeclaration","scope":5389,"src":"786:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5387,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:33","nodeType":"StructDefinition","scope":5457,"src":"447:374:33","visibility":"public"},{"body":{"id":5400,"nodeType":"Block","src":"901:38:33","statements":[{"expression":{"expression":{"id":5397,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"918:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":5398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5388,"src":"918:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5396,"id":5399,"nodeType":"Return","src":"911:21:33"}]},"id":5401,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:33","nodeType":"FunctionDefinition","parameters":{"id":5393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5392,"mutability":"mutable","name":"counter","nameLocation":"860:7:33","nodeType":"VariableDeclaration","scope":5401,"src":"844:23:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":5391,"nodeType":"UserDefinedTypeName","pathNode":{"id":5390,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":5389,"src":"844:7:33"},"referencedDeclaration":5389,"src":"844:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:33"},"returnParameters":{"id":5396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5401,"src":"892:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5394,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:33"},"scope":5457,"src":"827:112:33","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5414,"nodeType":"Block","src":"998:70:33","statements":[{"id":5413,"nodeType":"UncheckedBlock","src":"1008:54:33","statements":[{"expression":{"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5407,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"1032:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":5409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5388,"src":"1032:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5412,"nodeType":"ExpressionStatement","src":"1032:19:33"}]}]},"id":5415,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:33","nodeType":"FunctionDefinition","parameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"counter","nameLocation":"980:7:33","nodeType":"VariableDeclaration","scope":5415,"src":"964:23:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":5403,"nodeType":"UserDefinedTypeName","pathNode":{"id":5402,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":5389,"src":"964:7:33"},"referencedDeclaration":5389,"src":"964:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:33"},"returnParameters":{"id":5406,"nodeType":"ParameterList","parameters":[],"src":"998:0:33"},"scope":5457,"src":"945:123:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5442,"nodeType":"Block","src":"1127:176:33","statements":[{"assignments":[5422],"declarations":[{"constant":false,"id":5422,"mutability":"mutable","name":"value","nameLocation":"1145:5:33","nodeType":"VariableDeclaration","scope":5442,"src":"1137:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5425,"initialValue":{"expression":{"id":5423,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"1153:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":5424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5388,"src":"1153:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:33"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"1185:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":5430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":5426,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5432,"nodeType":"ExpressionStatement","src":"1177:49:33"},{"id":5441,"nodeType":"UncheckedBlock","src":"1236:61:33","statements":[{"expression":{"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5433,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"1260:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":5435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5388,"src":"1260:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"1277:5:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5440,"nodeType":"ExpressionStatement","src":"1260:26:33"}]}]},"id":5443,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:33","nodeType":"FunctionDefinition","parameters":{"id":5419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5418,"mutability":"mutable","name":"counter","nameLocation":"1109:7:33","nodeType":"VariableDeclaration","scope":5443,"src":"1093:23:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":5417,"nodeType":"UserDefinedTypeName","pathNode":{"id":5416,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":5389,"src":"1093:7:33"},"referencedDeclaration":5389,"src":"1093:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:33"},"returnParameters":{"id":5420,"nodeType":"ParameterList","parameters":[],"src":"1127:0:33"},"scope":5457,"src":"1074:229:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5455,"nodeType":"Block","src":"1358:35:33","statements":[{"expression":{"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5449,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"1368:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":5451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":5388,"src":"1368:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5454,"nodeType":"ExpressionStatement","src":"1368:18:33"}]},"id":5456,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:33","nodeType":"FunctionDefinition","parameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"mutability":"mutable","name":"counter","nameLocation":"1340:7:33","nodeType":"VariableDeclaration","scope":5456,"src":"1324:23:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":5445,"nodeType":"UserDefinedTypeName","pathNode":{"id":5444,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":5389,"src":"1324:7:33"},"referencedDeclaration":5389,"src":"1324:7:33","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$5389_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:33"},"returnParameters":{"id":5448,"nodeType":"ParameterList","parameters":[],"src":"1358:0:33"},"scope":5457,"src":"1309:84:33","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5458,"src":"424:971:33","usedErrors":[]}],"src":"87:1309:33"},"id":33},"contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[5683]},"id":5684,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5459,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:34"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5460,"nodeType":"StructuredDocumentation","src":"126:34:34","text":" @dev String operations."},"fullyImplemented":true,"id":5683,"linearizedBaseContracts":[5683],"name":"Strings","nameLocation":"169:7:34","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5463,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:34","nodeType":"VariableDeclaration","scope":5683,"src":"183:58:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":5461,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:34","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":5466,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:34","nodeType":"VariableDeclaration","scope":5683,"src":"247:43:34","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5464,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:34","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":5544,"nodeType":"Block","src":"463:632:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"665:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5480,"nodeType":"IfStatement","src":"661:51:34","trueBody":{"id":5479,"nodeType":"Block","src":"677:35:34","statements":[{"expression":{"hexValue":"30","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":5473,"id":5478,"nodeType":"Return","src":"691:10:34"}]}},{"assignments":[5482],"declarations":[{"constant":false,"id":5482,"mutability":"mutable","name":"temp","nameLocation":"729:4:34","nodeType":"VariableDeclaration","scope":5544,"src":"721:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5481,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5484,"initialValue":{"id":5483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"736:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:34"},{"assignments":[5486],"declarations":[{"constant":false,"id":5486,"mutability":"mutable","name":"digits","nameLocation":"759:6:34","nodeType":"VariableDeclaration","scope":5544,"src":"751:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5485,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5487,"nodeType":"VariableDeclarationStatement","src":"751:14:34"},{"body":{"id":5498,"nodeType":"Block","src":"793:57:34","statements":[{"expression":{"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:34","subExpression":{"id":5491,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"807:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5493,"nodeType":"ExpressionStatement","src":"807:8:34"},{"expression":{"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5494,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"829:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:34","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5497,"nodeType":"ExpressionStatement","src":"829:10:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5488,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"782:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5499,"nodeType":"WhileStatement","src":"775:75:34"},{"assignments":[5501],"declarations":[{"constant":false,"id":5501,"mutability":"mutable","name":"buffer","nameLocation":"872:6:34","nodeType":"VariableDeclaration","scope":5544,"src":"859:19:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5500,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5506,"initialValue":{"arguments":[{"id":5504,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"891:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:34","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5502,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:17:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:34"},{"body":{"id":5537,"nodeType":"Block","src":"927:131:34","statements":[{"expression":{"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5510,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"941:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5513,"nodeType":"ExpressionStatement","src":"941:11:34"},{"expression":{"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5514,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"966:6:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5516,"indexExpression":{"id":5515,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"973:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:34","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:34","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"1009:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:34","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:34","typeDescriptions":{}}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:19:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5519,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:34","typeDescriptions":{}}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"990:31:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5517,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:34","typeDescriptions":{}}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"983:39:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:34","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5532,"nodeType":"ExpressionStatement","src":"966:56:34"},{"expression":{"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"1036:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:34","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5536,"nodeType":"ExpressionStatement","src":"1036:11:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"915:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5538,"nodeType":"WhileStatement","src":"908:150:34"},{"expression":{"arguments":[{"id":5541,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"1081:6:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5539,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:34","typeDescriptions":{}}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5473,"id":5543,"nodeType":"Return","src":"1067:21:34"}]},"documentation":{"id":5467,"nodeType":"StructuredDocumentation","src":"297:90:34","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":5545,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:34","nodeType":"FunctionDefinition","parameters":{"id":5470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5469,"mutability":"mutable","name":"value","nameLocation":"418:5:34","nodeType":"VariableDeclaration","scope":5545,"src":"410:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5468,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:34"},"returnParameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5545,"src":"448:13:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5471,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:34"},"scope":5683,"src":"392:703:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5585,"nodeType":"Block","src":"1274:255:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"1288:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5559,"nodeType":"IfStatement","src":"1284:54:34","trueBody":{"id":5558,"nodeType":"Block","src":"1300:38:34","statements":[{"expression":{"hexValue":"30783030","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":5552,"id":5557,"nodeType":"Return","src":"1314:13:34"}]}},{"assignments":[5561],"declarations":[{"constant":false,"id":5561,"mutability":"mutable","name":"temp","nameLocation":"1355:4:34","nodeType":"VariableDeclaration","scope":5585,"src":"1347:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5563,"initialValue":{"id":5562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"1362:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:34"},{"assignments":[5565],"declarations":[{"constant":false,"id":5565,"mutability":"mutable","name":"length","nameLocation":"1385:6:34","nodeType":"VariableDeclaration","scope":5585,"src":"1377:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5567,"initialValue":{"hexValue":"30","id":5566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:34"},{"body":{"id":5578,"nodeType":"Block","src":"1423:57:34","statements":[{"expression":{"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:34","subExpression":{"id":5571,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"1437:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5573,"nodeType":"ExpressionStatement","src":"1437:8:34"},{"expression":{"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5574,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"1459:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:34","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5577,"nodeType":"ExpressionStatement","src":"1459:10:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5568,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"1412:4:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5579,"nodeType":"WhileStatement","src":"1405:75:34"},{"expression":{"arguments":[{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"1508:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5582,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"1515:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5580,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5586,5662,5682],"referencedDeclaration":5662,"src":"1496:11:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1496:26:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5552,"id":5584,"nodeType":"Return","src":"1489:33:34"}]},"documentation":{"id":5546,"nodeType":"StructuredDocumentation","src":"1101:94:34","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":5586,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:34","nodeType":"FunctionDefinition","parameters":{"id":5549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5548,"mutability":"mutable","name":"value","nameLocation":"1229:5:34","nodeType":"VariableDeclaration","scope":5586,"src":"1221:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:34"},"returnParameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5586,"src":"1259:13:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5550,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:34"},"scope":5683,"src":"1200:329:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5661,"nodeType":"Block","src":"1742:351:34","statements":[{"assignments":[5597],"declarations":[{"constant":false,"id":5597,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:34","nodeType":"VariableDeclaration","scope":5661,"src":"1752:19:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5596,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5606,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:34","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5601,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"1788:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":5603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:34","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:34","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5598,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1774:25:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:34"},{"expression":{"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5607,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"1809:6:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5609,"indexExpression":{"hexValue":"30","id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:34","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:34","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5612,"nodeType":"ExpressionStatement","src":"1809:15:34"},{"expression":{"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5613,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"1834:6:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5615,"indexExpression":{"hexValue":"31","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:34","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":5616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:34","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5618,"nodeType":"ExpressionStatement","src":"1834:15:34"},{"body":{"id":5647,"nodeType":"Block","src":"1904:87:34","statements":[{"expression":{"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5633,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"1918:6:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5635,"indexExpression":{"id":5634,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"1925:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:34","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5636,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"1930:12:34","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":5640,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"1943:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:34","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:34","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:34","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5642,"nodeType":"ExpressionStatement","src":"1918:37:34"},{"expression":{"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"1969:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:34","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5646,"nodeType":"ExpressionStatement","src":"1969:11:34"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5627,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"1892:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5648,"initializationExpression":{"assignments":[5620],"declarations":[{"constant":false,"id":5620,"mutability":"mutable","name":"i","nameLocation":"1872:1:34","nodeType":"VariableDeclaration","scope":5648,"src":"1864:9:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5619,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5626,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:34","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5622,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"1880:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:34","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:34"},"loopExpression":{"expression":{"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:34","subExpression":{"id":5630,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"1901:1:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5632,"nodeType":"ExpressionStatement","src":"1899:3:34"},"nodeType":"ForStatement","src":"1859:132:34"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"2008:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":5649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2000:55:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5655,"nodeType":"ExpressionStatement","src":"2000:55:34"},{"expression":{"arguments":[{"id":5658,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"2079:6:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:34","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5656,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:34","typeDescriptions":{}}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2072:14:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5595,"id":5660,"nodeType":"Return","src":"2065:21:34"}]},"documentation":{"id":5587,"nodeType":"StructuredDocumentation","src":"1535:112:34","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":5662,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:34","nodeType":"FunctionDefinition","parameters":{"id":5592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"value","nameLocation":"1681:5:34","nodeType":"VariableDeclaration","scope":5662,"src":"1673:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5591,"mutability":"mutable","name":"length","nameLocation":"1696:6:34","nodeType":"VariableDeclaration","scope":5662,"src":"1688:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5590,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:34"},"returnParameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5662,"src":"1727:13:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5593,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:34"},"scope":5683,"src":"1652:441:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5681,"nodeType":"Block","src":"2318:76:34","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":5675,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"2363:4:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5673,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:34","typeDescriptions":{}}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2355:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5671,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:34","typeDescriptions":{}}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2347:22:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5678,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"2371:15:34","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5670,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5586,5662,5682],"referencedDeclaration":5662,"src":"2335:11:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:52:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5669,"id":5680,"nodeType":"Return","src":"2328:59:34"}]},"documentation":{"id":5663,"nodeType":"StructuredDocumentation","src":"2099:141:34","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":5682,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:34","nodeType":"FunctionDefinition","parameters":{"id":5666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5665,"mutability":"mutable","name":"addr","nameLocation":"2274:4:34","nodeType":"VariableDeclaration","scope":5682,"src":"2266:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5664,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:34"},"returnParameters":{"id":5669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5682,"src":"2303:13:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5667,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:34"},"scope":5683,"src":"2245:149:34","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5684,"src":"161:2235:34","usedErrors":[]}],"src":"101:2296:34"},"id":34},"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[6071],"Strings":[5683]},"id":6072,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5685,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:35"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":5686,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6072,"sourceUnit":5684,"src":"137:24:35","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5687,"nodeType":"StructuredDocumentation","src":"163:205:35","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":6071,"linearizedBaseContracts":[6071],"name":"ECDSA","nameLocation":"377:5:35","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":5693,"members":[{"id":5688,"name":"NoError","nameLocation":"417:7:35","nodeType":"EnumValue","src":"417:7:35"},{"id":5689,"name":"InvalidSignature","nameLocation":"434:16:35","nodeType":"EnumValue","src":"434:16:35"},{"id":5690,"name":"InvalidSignatureLength","nameLocation":"460:22:35","nodeType":"EnumValue","src":"460:22:35"},{"id":5691,"name":"InvalidSignatureS","nameLocation":"492:17:35","nodeType":"EnumValue","src":"492:17:35"},{"id":5692,"name":"InvalidSignatureV","nameLocation":"519:17:35","nodeType":"EnumValue","src":"519:17:35"}],"name":"RecoverError","nameLocation":"394:12:35","nodeType":"EnumDefinition","src":"389:153:35"},{"body":{"id":5746,"nodeType":"Block","src":"602:577:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5699,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"616:5:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5700,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"625:12:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5693_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":5688,"src":"625:20:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"src":"616:29:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5705,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"712:5:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5706,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"721:12:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5693_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":5689,"src":"721:29:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"src":"712:38:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"821:5:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5715,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"830:12:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5693_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":5690,"src":"830:35:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"src":"821:44:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5723,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"943:5:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5724,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"952:12:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5693_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":5691,"src":"952:30:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"src":"943:39:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5732,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"1063:5:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5733,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"1072:12:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5693_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureV","nodeType":"MemberAccess","referencedDeclaration":5692,"src":"1072:30:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"src":"1063:39:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5741,"nodeType":"IfStatement","src":"1059:114:35","trueBody":{"id":5740,"nodeType":"Block","src":"1104:69:35","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202776272076616c7565","id":5737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1125:36:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""},"value":"ECDSA: invalid signature 'v' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""}],"id":5736,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1118:6:35","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1118:44:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5739,"nodeType":"ExpressionStatement","src":"1118:44:35"}]}},"id":5742,"nodeType":"IfStatement","src":"939:234:35","trueBody":{"id":5731,"nodeType":"Block","src":"984:69:35","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":5728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1005:36:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":5727,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"998:6:35","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:44:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5730,"nodeType":"ExpressionStatement","src":"998:44:35"}]}},"id":5743,"nodeType":"IfStatement","src":"817:356:35","trueBody":{"id":5722,"nodeType":"Block","src":"867:66:35","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"888:33:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":5718,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"881:6:35","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:41:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5721,"nodeType":"ExpressionStatement","src":"881:41:35"}]}},"id":5744,"nodeType":"IfStatement","src":"708:465:35","trueBody":{"id":5713,"nodeType":"Block","src":"752:59:35","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"773:26:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":5709,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"766:6:35","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"766:34:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5712,"nodeType":"ExpressionStatement","src":"766:34:35"}]}},"id":5745,"nodeType":"IfStatement","src":"612:561:35","trueBody":{"id":5704,"nodeType":"Block","src":"647:55:35","statements":[{"functionReturnParameters":5698,"id":5703,"nodeType":"Return","src":"661:7:35"}]}}]},"id":5747,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"557:11:35","nodeType":"FunctionDefinition","parameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5696,"mutability":"mutable","name":"error","nameLocation":"582:5:35","nodeType":"VariableDeclaration","scope":5747,"src":"569:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5695,"nodeType":"UserDefinedTypeName","pathNode":{"id":5694,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5693,"src":"569:12:35"},"referencedDeclaration":5693,"src":"569:12:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"568:20:35"},"returnParameters":{"id":5698,"nodeType":"ParameterList","parameters":[],"src":"602:0:35"},"scope":6071,"src":"548:631:35","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5792,"nodeType":"Block","src":"2347:626:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5760,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"2361:9:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2361:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":5762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2381:2:35","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2361:22:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5790,"nodeType":"Block","src":"2886:81:35","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2916:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2908:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5782,"name":"address","nodeType":"ElementaryTypeName","src":"2908:7:35","typeDescriptions":{}}},"id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2908:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5786,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"2920:12:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5693_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":5690,"src":"2920:35:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}}],"id":5788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2907:49:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5759,"id":5789,"nodeType":"Return","src":"2900:56:35"}]},"id":5791,"nodeType":"IfStatement","src":"2357:610:35","trueBody":{"id":5781,"nodeType":"Block","src":"2385:495:35","statements":[{"assignments":[5765],"declarations":[{"constant":false,"id":5765,"mutability":"mutable","name":"r","nameLocation":"2407:1:35","nodeType":"VariableDeclaration","scope":5781,"src":"2399:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2399:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5766,"nodeType":"VariableDeclarationStatement","src":"2399:9:35"},{"assignments":[5768],"declarations":[{"constant":false,"id":5768,"mutability":"mutable","name":"s","nameLocation":"2430:1:35","nodeType":"VariableDeclaration","scope":5781,"src":"2422:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2422:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5769,"nodeType":"VariableDeclarationStatement","src":"2422:9:35"},{"assignments":[5771],"declarations":[{"constant":false,"id":5771,"mutability":"mutable","name":"v","nameLocation":"2451:1:35","nodeType":"VariableDeclaration","scope":5781,"src":"2445:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5770,"name":"uint8","nodeType":"ElementaryTypeName","src":"2445:5:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5772,"nodeType":"VariableDeclarationStatement","src":"2445:7:35"},{"AST":{"nodeType":"YulBlock","src":"2653:171:35","statements":[{"nodeType":"YulAssignment","src":"2671:32:35","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2686:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"2697:4:35","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:35"},"nodeType":"YulFunctionCall","src":"2682:20:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2676:5:35"},"nodeType":"YulFunctionCall","src":"2676:27:35"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2671:1:35"}]},{"nodeType":"YulAssignment","src":"2720:32:35","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2735:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"2746:4:35","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:35"},"nodeType":"YulFunctionCall","src":"2731:20:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2725:5:35"},"nodeType":"YulFunctionCall","src":"2725:27:35"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2720:1:35"}]},{"nodeType":"YulAssignment","src":"2769:41:35","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2779:1:35","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2792:9:35"},{"kind":"number","nodeType":"YulLiteral","src":"2803:4:35","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2788:3:35"},"nodeType":"YulFunctionCall","src":"2788:20:35"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2782:5:35"},"nodeType":"YulFunctionCall","src":"2782:27:35"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2774:4:35"},"nodeType":"YulFunctionCall","src":"2774:36:35"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2769:1:35"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"istanbul","externalReferences":[{"declaration":5765,"isOffset":false,"isSlot":false,"src":"2671:1:35","valueSize":1},{"declaration":5768,"isOffset":false,"isSlot":false,"src":"2720:1:35","valueSize":1},{"declaration":5752,"isOffset":false,"isSlot":false,"src":"2686:9:35","valueSize":1},{"declaration":5752,"isOffset":false,"isSlot":false,"src":"2735:9:35","valueSize":1},{"declaration":5752,"isOffset":false,"isSlot":false,"src":"2792:9:35","valueSize":1},{"declaration":5771,"isOffset":false,"isSlot":false,"src":"2769:1:35","valueSize":1}],"id":5773,"nodeType":"InlineAssembly","src":"2644:180:35"},{"expression":{"arguments":[{"id":5775,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"2855:4:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5776,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"2861:1:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5777,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5765,"src":"2864:1:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5778,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"2867:1:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5774,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5793,5867,5978],"referencedDeclaration":5978,"src":"2844:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2844:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5759,"id":5780,"nodeType":"Return","src":"2837:32:35"}]}}]},"documentation":{"id":5748,"nodeType":"StructuredDocumentation","src":"1185:1053:35","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":5793,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2252:10:35","nodeType":"FunctionDefinition","parameters":{"id":5753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5750,"mutability":"mutable","name":"hash","nameLocation":"2271:4:35","nodeType":"VariableDeclaration","scope":5793,"src":"2263:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2263:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5752,"mutability":"mutable","name":"signature","nameLocation":"2290:9:35","nodeType":"VariableDeclaration","scope":5793,"src":"2277:22:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5751,"name":"bytes","nodeType":"ElementaryTypeName","src":"2277:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2262:38:35"},"returnParameters":{"id":5759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5793,"src":"2324:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5754,"name":"address","nodeType":"ElementaryTypeName","src":"2324:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5793,"src":"2333:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5757,"nodeType":"UserDefinedTypeName","pathNode":{"id":5756,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5693,"src":"2333:12:35"},"referencedDeclaration":5693,"src":"2333:12:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2323:23:35"},"scope":6071,"src":"2243:730:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5819,"nodeType":"Block","src":"3846:140:35","statements":[{"assignments":[5804,5807],"declarations":[{"constant":false,"id":5804,"mutability":"mutable","name":"recovered","nameLocation":"3865:9:35","nodeType":"VariableDeclaration","scope":5819,"src":"3857:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5803,"name":"address","nodeType":"ElementaryTypeName","src":"3857:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5807,"mutability":"mutable","name":"error","nameLocation":"3889:5:35","nodeType":"VariableDeclaration","scope":5819,"src":"3876:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5806,"nodeType":"UserDefinedTypeName","pathNode":{"id":5805,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5693,"src":"3876:12:35"},"referencedDeclaration":5693,"src":"3876:12:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":5812,"initialValue":{"arguments":[{"id":5809,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"3909:4:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5810,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"3915:9:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5808,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5793,5867,5978],"referencedDeclaration":5793,"src":"3898:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3898:27:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3856:69:35"},{"expression":{"arguments":[{"id":5814,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5807,"src":"3947:5:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}],"id":5813,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"3935:11:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5693_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3935:18:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5816,"nodeType":"ExpressionStatement","src":"3935:18:35"},{"expression":{"id":5817,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"3970:9:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5802,"id":5818,"nodeType":"Return","src":"3963:16:35"}]},"documentation":{"id":5794,"nodeType":"StructuredDocumentation","src":"2979:775:35","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":5820,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3768:7:35","nodeType":"FunctionDefinition","parameters":{"id":5799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5796,"mutability":"mutable","name":"hash","nameLocation":"3784:4:35","nodeType":"VariableDeclaration","scope":5820,"src":"3776:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3776:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5798,"mutability":"mutable","name":"signature","nameLocation":"3803:9:35","nodeType":"VariableDeclaration","scope":5820,"src":"3790:22:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5797,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:38:35"},"returnParameters":{"id":5802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5820,"src":"3837:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5800,"name":"address","nodeType":"ElementaryTypeName","src":"3837:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3836:9:35"},"scope":6071,"src":"3759:227:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5866,"nodeType":"Block","src":"4373:203:35","statements":[{"assignments":[5836],"declarations":[{"constant":false,"id":5836,"mutability":"mutable","name":"s","nameLocation":"4391:1:35","nodeType":"VariableDeclaration","scope":5866,"src":"4383:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4383:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5843,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5837,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"4395:2:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4408:66:35","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":5839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4400:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4400:7:35","typeDescriptions":{}}},"id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4400:75:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4395:80:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4383:92:35"},{"assignments":[5845],"declarations":[{"constant":false,"id":5845,"mutability":"mutable","name":"v","nameLocation":"4491:1:35","nodeType":"VariableDeclaration","scope":5866,"src":"4485:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5844,"name":"uint8","nodeType":"ElementaryTypeName","src":"4485:5:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5858,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5850,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"4510:2:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4502:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5848,"name":"uint256","nodeType":"ElementaryTypeName","src":"4502:7:35","typeDescriptions":{}}},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4502:11:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4517:3:35","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4502:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4501:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4524:2:35","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4501:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4495:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5846,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:35","typeDescriptions":{}}},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4495:32:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4485:42:35"},{"expression":{"arguments":[{"id":5860,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"4555:4:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5861,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"4561:1:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5862,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"4564:1:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5863,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"4567:1:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5859,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5793,5867,5978],"referencedDeclaration":5978,"src":"4544:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4544:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5834,"id":5865,"nodeType":"Return","src":"4537:32:35"}]},"documentation":{"id":5821,"nodeType":"StructuredDocumentation","src":"3992:243:35","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":5867,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4249:10:35","nodeType":"FunctionDefinition","parameters":{"id":5828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"hash","nameLocation":"4277:4:35","nodeType":"VariableDeclaration","scope":5867,"src":"4269:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4269:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5825,"mutability":"mutable","name":"r","nameLocation":"4299:1:35","nodeType":"VariableDeclaration","scope":5867,"src":"4291:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5827,"mutability":"mutable","name":"vs","nameLocation":"4318:2:35","nodeType":"VariableDeclaration","scope":5867,"src":"4310:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4310:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4259:67:35"},"returnParameters":{"id":5834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5867,"src":"4350:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5829,"name":"address","nodeType":"ElementaryTypeName","src":"4350:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5867,"src":"4359:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5832,"nodeType":"UserDefinedTypeName","pathNode":{"id":5831,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5693,"src":"4359:12:35"},"referencedDeclaration":5693,"src":"4359:12:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4349:23:35"},"scope":6071,"src":"4240:336:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5896,"nodeType":"Block","src":"4857:136:35","statements":[{"assignments":[5880,5883],"declarations":[{"constant":false,"id":5880,"mutability":"mutable","name":"recovered","nameLocation":"4876:9:35","nodeType":"VariableDeclaration","scope":5896,"src":"4868:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5879,"name":"address","nodeType":"ElementaryTypeName","src":"4868:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5883,"mutability":"mutable","name":"error","nameLocation":"4900:5:35","nodeType":"VariableDeclaration","scope":5896,"src":"4887:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5882,"nodeType":"UserDefinedTypeName","pathNode":{"id":5881,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5693,"src":"4887:12:35"},"referencedDeclaration":5693,"src":"4887:12:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":5889,"initialValue":{"arguments":[{"id":5885,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"4920:4:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5886,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"4926:1:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5887,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"4929:2:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5884,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5793,5867,5978],"referencedDeclaration":5867,"src":"4909:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4909:23:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4867:65:35"},{"expression":{"arguments":[{"id":5891,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"4954:5:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}],"id":5890,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"4942:11:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5693_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4942:18:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5893,"nodeType":"ExpressionStatement","src":"4942:18:35"},{"expression":{"id":5894,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"4977:9:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5878,"id":5895,"nodeType":"Return","src":"4970:16:35"}]},"documentation":{"id":5868,"nodeType":"StructuredDocumentation","src":"4582:154:35","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":5897,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4750:7:35","nodeType":"FunctionDefinition","parameters":{"id":5875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5870,"mutability":"mutable","name":"hash","nameLocation":"4775:4:35","nodeType":"VariableDeclaration","scope":5897,"src":"4767:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5869,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4767:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5872,"mutability":"mutable","name":"r","nameLocation":"4797:1:35","nodeType":"VariableDeclaration","scope":5897,"src":"4789:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4789:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5874,"mutability":"mutable","name":"vs","nameLocation":"4816:2:35","nodeType":"VariableDeclaration","scope":5897,"src":"4808:10:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4808:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4757:67:35"},"returnParameters":{"id":5878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5897,"src":"4848:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5876,"name":"address","nodeType":"ElementaryTypeName","src":"4848:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4847:9:35"},"scope":6071,"src":"4741:252:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5977,"nodeType":"Block","src":"5316:1454:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5916,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"6212:1:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6204:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5914,"name":"uint256","nodeType":"ElementaryTypeName","src":"6204:7:35","typeDescriptions":{}}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6204:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:66:35","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6204:79:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5929,"nodeType":"IfStatement","src":"6200:161:35","trueBody":{"id":5928,"nodeType":"Block","src":"6285:76:35","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6315:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6307:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5920,"name":"address","nodeType":"ElementaryTypeName","src":"6307:7:35","typeDescriptions":{}}},"id":5923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6307:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5924,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"6319:12:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5693_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":5691,"src":"6319:30:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}}],"id":5926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6306:44:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5913,"id":5927,"nodeType":"Return","src":"6299:51:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5930,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"6374:1:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3237","id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6379:2:35","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"6374:7:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5933,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"6385:1:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3238","id":5934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6390:2:35","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"6385:7:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6374:18:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5946,"nodeType":"IfStatement","src":"6370:100:35","trueBody":{"id":5945,"nodeType":"Block","src":"6394:76:35","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6424:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6416:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5937,"name":"address","nodeType":"ElementaryTypeName","src":"6416:7:35","typeDescriptions":{}}},"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6416:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5941,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"6428:12:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5693_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureV","nodeType":"MemberAccess","referencedDeclaration":5692,"src":"6428:30:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}}],"id":5943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6415:44:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5913,"id":5944,"nodeType":"Return","src":"6408:51:35"}]}},{"assignments":[5948],"declarations":[{"constant":false,"id":5948,"mutability":"mutable","name":"signer","nameLocation":"6572:6:35","nodeType":"VariableDeclaration","scope":5977,"src":"6564:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5947,"name":"address","nodeType":"ElementaryTypeName","src":"6564:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5955,"initialValue":{"arguments":[{"id":5950,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"6591:4:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5951,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"6597:1:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5952,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"6600:1:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5953,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"6603:1:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5949,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6581:9:35","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6581:24:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6564:41:35"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5956,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"6619:6:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6637:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6629:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5957,"name":"address","nodeType":"ElementaryTypeName","src":"6629:7:35","typeDescriptions":{}}},"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6629:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6619:20:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5971,"nodeType":"IfStatement","src":"6615:101:35","trueBody":{"id":5970,"nodeType":"Block","src":"6641:75:35","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6671:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6663:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5962,"name":"address","nodeType":"ElementaryTypeName","src":"6663:7:35","typeDescriptions":{}}},"id":5965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6663:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5966,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"6675:12:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5693_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":5689,"src":"6675:29:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}}],"id":5968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6662:43:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5913,"id":5969,"nodeType":"Return","src":"6655:50:35"}]}},{"expression":{"components":[{"id":5972,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"6734:6:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5973,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"6742:12:35","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5693_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":5688,"src":"6742:20:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}}],"id":5975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6733:30:35","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5913,"id":5976,"nodeType":"Return","src":"6726:37:35"}]},"documentation":{"id":5898,"nodeType":"StructuredDocumentation","src":"4999:163:35","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":5978,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5176:10:35","nodeType":"FunctionDefinition","parameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"hash","nameLocation":"5204:4:35","nodeType":"VariableDeclaration","scope":5978,"src":"5196:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5196:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5902,"mutability":"mutable","name":"v","nameLocation":"5224:1:35","nodeType":"VariableDeclaration","scope":5978,"src":"5218:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5901,"name":"uint8","nodeType":"ElementaryTypeName","src":"5218:5:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5904,"mutability":"mutable","name":"r","nameLocation":"5243:1:35","nodeType":"VariableDeclaration","scope":5978,"src":"5235:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5235:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5906,"mutability":"mutable","name":"s","nameLocation":"5262:1:35","nodeType":"VariableDeclaration","scope":5978,"src":"5254:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5254:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5186:83:35"},"returnParameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5978,"src":"5293:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5908,"name":"address","nodeType":"ElementaryTypeName","src":"5293:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5978,"src":"5302:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5911,"nodeType":"UserDefinedTypeName","pathNode":{"id":5910,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5693,"src":"5302:12:35"},"referencedDeclaration":5693,"src":"5302:12:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5292:23:35"},"scope":6071,"src":"5167:1603:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6010,"nodeType":"Block","src":"7035:138:35","statements":[{"assignments":[5993,5996],"declarations":[{"constant":false,"id":5993,"mutability":"mutable","name":"recovered","nameLocation":"7054:9:35","nodeType":"VariableDeclaration","scope":6010,"src":"7046:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5992,"name":"address","nodeType":"ElementaryTypeName","src":"7046:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5996,"mutability":"mutable","name":"error","nameLocation":"7078:5:35","nodeType":"VariableDeclaration","scope":6010,"src":"7065:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5995,"nodeType":"UserDefinedTypeName","pathNode":{"id":5994,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":5693,"src":"7065:12:35"},"referencedDeclaration":5693,"src":"7065:12:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":6003,"initialValue":{"arguments":[{"id":5998,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"7098:4:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5999,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"7104:1:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":6000,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"7107:1:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6001,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"7110:1:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5997,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5793,5867,5978],"referencedDeclaration":5978,"src":"7087:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7087:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5693_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"7045:67:35"},{"expression":{"arguments":[{"id":6005,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"7134:5:35","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5693","typeString":"enum ECDSA.RecoverError"}],"id":6004,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"7122:11:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5693_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7122:18:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6007,"nodeType":"ExpressionStatement","src":"7122:18:35"},{"expression":{"id":6008,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"7157:9:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5991,"id":6009,"nodeType":"Return","src":"7150:16:35"}]},"documentation":{"id":5979,"nodeType":"StructuredDocumentation","src":"6776:122:35","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":6011,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6912:7:35","nodeType":"FunctionDefinition","parameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"hash","nameLocation":"6937:4:35","nodeType":"VariableDeclaration","scope":6011,"src":"6929:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6929:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5983,"mutability":"mutable","name":"v","nameLocation":"6957:1:35","nodeType":"VariableDeclaration","scope":6011,"src":"6951:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5982,"name":"uint8","nodeType":"ElementaryTypeName","src":"6951:5:35","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5985,"mutability":"mutable","name":"r","nameLocation":"6976:1:35","nodeType":"VariableDeclaration","scope":6011,"src":"6968:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6968:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5987,"mutability":"mutable","name":"s","nameLocation":"6995:1:35","nodeType":"VariableDeclaration","scope":6011,"src":"6987:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6987:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6919:83:35"},"returnParameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6011,"src":"7026:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5989,"name":"address","nodeType":"ElementaryTypeName","src":"7026:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7025:9:35"},"scope":6071,"src":"6903:270:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6027,"nodeType":"Block","src":"7541:187:35","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":6022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7679:34:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":6023,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"7715:4:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6020,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7662:3:35","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7662:16:35","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7662:58:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6019,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7652:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7652:69:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6018,"id":6026,"nodeType":"Return","src":"7645:76:35"}]},"documentation":{"id":6012,"nodeType":"StructuredDocumentation","src":"7179:279:35","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":6028,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7472:22:35","nodeType":"FunctionDefinition","parameters":{"id":6015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6014,"mutability":"mutable","name":"hash","nameLocation":"7503:4:35","nodeType":"VariableDeclaration","scope":6028,"src":"7495:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7495:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7494:14:35"},"returnParameters":{"id":6018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6028,"src":"7532:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7532:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7531:9:35"},"scope":6071,"src":"7463:265:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6049,"nodeType":"Block","src":"8093:116:35","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":6039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8137:32:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":6042,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"8188:1:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8188:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6040,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"8171:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$5683_$","typeString":"type(library Strings)"}},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":5545,"src":"8171:16:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8171:26:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6045,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"8199:1:35","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6037,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8120:3:35","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8120:16:35","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8120:81:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6036,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8110:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8110:92:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6035,"id":6048,"nodeType":"Return","src":"8103:99:35"}]},"documentation":{"id":6029,"nodeType":"StructuredDocumentation","src":"7734:274:35","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":6050,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"8022:22:35","nodeType":"FunctionDefinition","parameters":{"id":6032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"mutability":"mutable","name":"s","nameLocation":"8058:1:35","nodeType":"VariableDeclaration","scope":6050,"src":"8045:14:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6030,"name":"bytes","nodeType":"ElementaryTypeName","src":"8045:5:35","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8044:16:35"},"returnParameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6050,"src":"8084:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8084:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8083:9:35"},"scope":6071,"src":"8013:196:35","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6069,"nodeType":"Block","src":"8650:92:35","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":6063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8694:10:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":6064,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"8706:15:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6065,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"8723:10:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6061,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8677:3:35","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8677:16:35","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8677:57:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6060,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8667:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8667:68:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6059,"id":6068,"nodeType":"Return","src":"8660:75:35"}]},"documentation":{"id":6051,"nodeType":"StructuredDocumentation","src":"8215:328:35","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":6070,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8557:15:35","nodeType":"FunctionDefinition","parameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"domainSeparator","nameLocation":"8581:15:35","nodeType":"VariableDeclaration","scope":6070,"src":"8573:23:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8573:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6055,"mutability":"mutable","name":"structHash","nameLocation":"8606:10:35","nodeType":"VariableDeclaration","scope":6070,"src":"8598:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8598:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8572:45:35"},"returnParameters":{"id":6059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6070,"src":"8641:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8641:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8640:9:35"},"scope":6071,"src":"8548:194:35","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6072,"src":"369:8375:35","usedErrors":[]}],"src":"112:8633:35"},"id":35},"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol","exportedSymbols":{"ECDSA":[6071],"EIP712":[6225],"Strings":[5683]},"id":6226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6073,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:36"},{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":6074,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6226,"sourceUnit":6072,"src":"129:21:36","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":6075,"nodeType":"StructuredDocumentation","src":"152:1142:36","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"},"fullyImplemented":true,"id":6225,"linearizedBaseContracts":[6225],"name":"EIP712","nameLocation":"1313:6:36","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6077,"mutability":"immutable","name":"_CACHED_DOMAIN_SEPARATOR","nameLocation":"1589:24:36","nodeType":"VariableDeclaration","scope":6225,"src":"1563:50:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1563:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":6079,"mutability":"immutable","name":"_CACHED_CHAIN_ID","nameLocation":"1645:16:36","nodeType":"VariableDeclaration","scope":6225,"src":"1619:42:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1619:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":6081,"mutability":"immutable","name":"_CACHED_THIS","nameLocation":"1693:12:36","nodeType":"VariableDeclaration","scope":6225,"src":"1667:38:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6080,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:36","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":6083,"mutability":"immutable","name":"_HASHED_NAME","nameLocation":"1738:12:36","nodeType":"VariableDeclaration","scope":6225,"src":"1712:38:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1712:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":6085,"mutability":"immutable","name":"_HASHED_VERSION","nameLocation":"1782:15:36","nodeType":"VariableDeclaration","scope":6225,"src":"1756:41:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1756:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":6087,"mutability":"immutable","name":"_TYPE_HASH","nameLocation":"1829:10:36","nodeType":"VariableDeclaration","scope":6225,"src":"1803:36:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1803:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":6151,"nodeType":"Block","src":"2510:547:36","statements":[{"assignments":[6096],"declarations":[{"constant":false,"id":6096,"mutability":"mutable","name":"hashedName","nameLocation":"2528:10:36","nodeType":"VariableDeclaration","scope":6151,"src":"2520:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2520:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6103,"initialValue":{"arguments":[{"arguments":[{"id":6100,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"2557:4:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2551:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6098,"name":"bytes","nodeType":"ElementaryTypeName","src":"2551:5:36","typeDescriptions":{}}},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2551:11:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6097,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2541:9:36","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2541:22:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2520:43:36"},{"assignments":[6105],"declarations":[{"constant":false,"id":6105,"mutability":"mutable","name":"hashedVersion","nameLocation":"2581:13:36","nodeType":"VariableDeclaration","scope":6151,"src":"2573:21:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2573:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6112,"initialValue":{"arguments":[{"arguments":[{"id":6109,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"2613:7:36","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2607:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6107,"name":"bytes","nodeType":"ElementaryTypeName","src":"2607:5:36","typeDescriptions":{}}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:14:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6106,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2597:9:36","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2597:25:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2573:49:36"},{"assignments":[6114],"declarations":[{"constant":false,"id":6114,"mutability":"mutable","name":"typeHash","nameLocation":"2640:8:36","nodeType":"VariableDeclaration","scope":6151,"src":"2632:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2632:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6118,"initialValue":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":6116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2674:84:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":6115,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2651:9:36","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2651:117:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2632:136:36"},{"expression":{"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6119,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"2778:12:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6120,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"2793:10:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2778:25:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6122,"nodeType":"ExpressionStatement","src":"2778:25:36"},{"expression":{"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6123,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"2813:15:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6124,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"2831:13:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2813:31:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6126,"nodeType":"ExpressionStatement","src":"2813:31:36"},{"expression":{"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6127,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"2854:16:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6128,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2873:5:36","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"2873:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2854:32:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6131,"nodeType":"ExpressionStatement","src":"2854:32:36"},{"expression":{"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6132,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"2896:24:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6134,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"2945:8:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6135,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6096,"src":"2955:10:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6136,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"2967:13:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6133,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"2923:21:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2923:58:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2896:85:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6139,"nodeType":"ExpressionStatement","src":"2896:85:36"},{"expression":{"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6140,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"2991:12:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6143,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3014:4:36","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$6225","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$6225","typeString":"contract EIP712"}],"id":6142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3006:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6141,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:36","typeDescriptions":{}}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3006:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2991:28:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6146,"nodeType":"ExpressionStatement","src":"2991:28:36"},{"expression":{"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6147,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"3029:10:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6148,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"3042:8:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3029:21:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6150,"nodeType":"ExpressionStatement","src":"3029:21:36"}]},"documentation":{"id":6088,"nodeType":"StructuredDocumentation","src":"1891:559:36","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":6152,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6090,"mutability":"mutable","name":"name","nameLocation":"2481:4:36","nodeType":"VariableDeclaration","scope":6152,"src":"2467:18:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6089,"name":"string","nodeType":"ElementaryTypeName","src":"2467:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6092,"mutability":"mutable","name":"version","nameLocation":"2501:7:36","nodeType":"VariableDeclaration","scope":6152,"src":"2487:21:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6091,"name":"string","nodeType":"ElementaryTypeName","src":"2487:6:36","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2466:43:36"},"returnParameters":{"id":6094,"nodeType":"ParameterList","parameters":[],"src":"2510:0:36"},"scope":6225,"src":"2455:602:36","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6180,"nodeType":"Block","src":"3205:246:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6160,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3227:4:36","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$6225","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$6225","typeString":"contract EIP712"}],"id":6159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3219:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6158,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:36","typeDescriptions":{}}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3219:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6162,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"3236:12:36","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3219:29:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6164,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3252:5:36","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3252:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6166,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"3269:16:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3252:33:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3219:66:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6178,"nodeType":"Block","src":"3349:96:36","statements":[{"expression":{"arguments":[{"id":6173,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"3392:10:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6174,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"3404:12:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6175,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"3418:15:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6172,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"3370:21:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3370:64:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6157,"id":6177,"nodeType":"Return","src":"3363:71:36"}]},"id":6179,"nodeType":"IfStatement","src":"3215:230:36","trueBody":{"id":6171,"nodeType":"Block","src":"3287:56:36","statements":[{"expression":{"id":6169,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"3308:24:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6157,"id":6170,"nodeType":"Return","src":"3301:31:36"}]}}]},"documentation":{"id":6153,"nodeType":"StructuredDocumentation","src":"3063:75:36","text":" @dev Returns the domain separator for the current chain."},"id":6181,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3152:18:36","nodeType":"FunctionDefinition","parameters":{"id":6154,"nodeType":"ParameterList","parameters":[],"src":"3170:2:36"},"returnParameters":{"id":6157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6181,"src":"3196:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3196:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3195:9:36"},"scope":6225,"src":"3143:308:36","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6207,"nodeType":"Block","src":"3606:108:36","statements":[{"expression":{"arguments":[{"arguments":[{"id":6195,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"3644:8:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6196,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"3654:8:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6197,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"3664:11:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6198,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3677:5:36","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3677:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6202,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3700:4:36","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$6225","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$6225","typeString":"contract EIP712"}],"id":6201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3692:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6200,"name":"address","nodeType":"ElementaryTypeName","src":"3692:7:36","typeDescriptions":{}}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3692:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6193,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3633:3:36","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3633:10:36","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3633:73:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6192,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3623:9:36","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3623:84:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6191,"id":6206,"nodeType":"Return","src":"3616:91:36"}]},"id":6208,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3466:21:36","nodeType":"FunctionDefinition","parameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6183,"mutability":"mutable","name":"typeHash","nameLocation":"3505:8:36","nodeType":"VariableDeclaration","scope":6208,"src":"3497:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3497:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6185,"mutability":"mutable","name":"nameHash","nameLocation":"3531:8:36","nodeType":"VariableDeclaration","scope":6208,"src":"3523:16:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3523:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6187,"mutability":"mutable","name":"versionHash","nameLocation":"3557:11:36","nodeType":"VariableDeclaration","scope":6208,"src":"3549:19:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3549:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3487:87:36"},"returnParameters":{"id":6191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6208,"src":"3597:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3597:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3596:9:36"},"scope":6225,"src":"3457:257:36","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6223,"nodeType":"Block","src":"4425:79:36","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6218,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"4464:18:36","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4464:20:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6220,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"4486:10:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6216,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"4442:5:36","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$6071_$","typeString":"type(library ECDSA)"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":6070,"src":"4442:21:36","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4442:55:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6215,"id":6222,"nodeType":"Return","src":"4435:62:36"}]},"documentation":{"id":6209,"nodeType":"StructuredDocumentation","src":"3720:614:36","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":6224,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4348:16:36","nodeType":"FunctionDefinition","parameters":{"id":6212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"structHash","nameLocation":"4373:10:36","nodeType":"VariableDeclaration","scope":6224,"src":"4365:18:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4365:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4364:20:36"},"returnParameters":{"id":6215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6224,"src":"4416:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4416:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4415:9:36"},"scope":6225,"src":"4339:165:36","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":6226,"src":"1295:3211:36","usedErrors":[]}],"src":"104:4403:36"},"id":36},"contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6729]},"id":6730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6227,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:37"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":6228,"nodeType":"StructuredDocumentation","src":"128:73:37","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6729,"linearizedBaseContracts":[6729],"name":"Math","nameLocation":"210:4:37","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":6232,"members":[{"id":6229,"name":"Down","nameLocation":"245:4:37","nodeType":"EnumValue","src":"245:4:37"},{"id":6230,"name":"Up","nameLocation":"287:2:37","nodeType":"EnumValue","src":"287:2:37"},{"id":6231,"name":"Zero","nameLocation":"318:4:37","nodeType":"EnumValue","src":"318:4:37"}],"name":"Rounding","nameLocation":"226:8:37","nodeType":"EnumDefinition","src":"221:122:37"},{"body":{"id":6249,"nodeType":"Block","src":"480:38:37","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6242,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"497:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6243,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"502:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:6:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6246,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"510:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:14:37","trueExpression":{"id":6245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"506:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6241,"id":6248,"nodeType":"Return","src":"490:21:37"}]},"documentation":{"id":6233,"nodeType":"StructuredDocumentation","src":"349:59:37","text":" @dev Returns the largest of two numbers."},"id":6250,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:37","nodeType":"FunctionDefinition","parameters":{"id":6238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6235,"mutability":"mutable","name":"a","nameLocation":"434:1:37","nodeType":"VariableDeclaration","scope":6250,"src":"426:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6234,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6237,"mutability":"mutable","name":"b","nameLocation":"445:1:37","nodeType":"VariableDeclaration","scope":6250,"src":"437:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6236,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:37"},"returnParameters":{"id":6241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6250,"src":"471:7:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6239,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:37"},"scope":6729,"src":"413:105:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6267,"nodeType":"Block","src":"656:37:37","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"673:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6261,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"677:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"673:5:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6264,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"685:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"673:13:37","trueExpression":{"id":6263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"681:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6259,"id":6266,"nodeType":"Return","src":"666:20:37"}]},"documentation":{"id":6251,"nodeType":"StructuredDocumentation","src":"524:60:37","text":" @dev Returns the smallest of two numbers."},"id":6268,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"598:3:37","nodeType":"FunctionDefinition","parameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6253,"mutability":"mutable","name":"a","nameLocation":"610:1:37","nodeType":"VariableDeclaration","scope":6268,"src":"602:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6252,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6255,"mutability":"mutable","name":"b","nameLocation":"621:1:37","nodeType":"VariableDeclaration","scope":6268,"src":"613:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6254,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:37"},"returnParameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6268,"src":"647:7:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6257,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:9:37"},"scope":6729,"src":"589:104:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6290,"nodeType":"Block","src":"877:82:37","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"932:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6279,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"936:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"932:5:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"931:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6282,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"942:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6283,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"946:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:37","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"941:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6277,"id":6289,"nodeType":"Return","src":"924:28:37"}]},"documentation":{"id":6269,"nodeType":"StructuredDocumentation","src":"699:102:37","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":6291,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"815:7:37","nodeType":"FunctionDefinition","parameters":{"id":6274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6271,"mutability":"mutable","name":"a","nameLocation":"831:1:37","nodeType":"VariableDeclaration","scope":6291,"src":"823:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6270,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6273,"mutability":"mutable","name":"b","nameLocation":"842:1:37","nodeType":"VariableDeclaration","scope":6291,"src":"834:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6272,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"822:22:37"},"returnParameters":{"id":6277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6291,"src":"868:7:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6275,"name":"uint256","nodeType":"ElementaryTypeName","src":"868:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"867:9:37"},"scope":6729,"src":"806:153:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6315,"nodeType":"Block","src":"1229:123:37","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6301,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"1317:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1322:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1317:6:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"1331:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1335:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1331:5:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1330:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6309,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"1340:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1330:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1344:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:15:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1317:28:37","trueExpression":{"hexValue":"30","id":6304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1326:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6300,"id":6314,"nodeType":"Return","src":"1310:35:37"}]},"documentation":{"id":6292,"nodeType":"StructuredDocumentation","src":"965:188:37","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":6316,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1167:7:37","nodeType":"FunctionDefinition","parameters":{"id":6297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6294,"mutability":"mutable","name":"a","nameLocation":"1183:1:37","nodeType":"VariableDeclaration","scope":6316,"src":"1175:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1175:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6296,"mutability":"mutable","name":"b","nameLocation":"1194:1:37","nodeType":"VariableDeclaration","scope":6316,"src":"1186:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1174:22:37"},"returnParameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6316,"src":"1220:7:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1219:9:37"},"scope":6729,"src":"1158:194:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6437,"nodeType":"Block","src":"1796:3797:37","statements":[{"id":6436,"nodeType":"UncheckedBlock","src":"1806:3781:37","statements":[{"assignments":[6329],"declarations":[{"constant":false,"id":6329,"mutability":"mutable","name":"prod0","nameLocation":"2135:5:37","nodeType":"VariableDeclaration","scope":6436,"src":"2127:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6328,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6330,"nodeType":"VariableDeclarationStatement","src":"2127:13:37"},{"assignments":[6332],"declarations":[{"constant":false,"id":6332,"mutability":"mutable","name":"prod1","nameLocation":"2207:5:37","nodeType":"VariableDeclaration","scope":6436,"src":"2199:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2199:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6333,"nodeType":"VariableDeclarationStatement","src":"2199:13:37"},{"AST":{"nodeType":"YulBlock","src":"2279:157:37","statements":[{"nodeType":"YulVariableDeclaration","src":"2297:30:37","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2314:1:37"},{"name":"y","nodeType":"YulIdentifier","src":"2317:1:37"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2324:1:37","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2320:3:37"},"nodeType":"YulFunctionCall","src":"2320:6:37"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2307:6:37"},"nodeType":"YulFunctionCall","src":"2307:20:37"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2301:2:37","type":""}]},{"nodeType":"YulAssignment","src":"2344:18:37","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2357:1:37"},{"name":"y","nodeType":"YulIdentifier","src":"2360:1:37"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2353:3:37"},"nodeType":"YulFunctionCall","src":"2353:9:37"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2344:5:37"}]},{"nodeType":"YulAssignment","src":"2379:43:37","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2396:2:37"},{"name":"prod0","nodeType":"YulIdentifier","src":"2400:5:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2392:3:37"},"nodeType":"YulFunctionCall","src":"2392:14:37"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2411:2:37"},{"name":"prod0","nodeType":"YulIdentifier","src":"2415:5:37"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2408:2:37"},"nodeType":"YulFunctionCall","src":"2408:13:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2388:3:37"},"nodeType":"YulFunctionCall","src":"2388:34:37"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2379:5:37"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6329,"isOffset":false,"isSlot":false,"src":"2344:5:37","valueSize":1},{"declaration":6329,"isOffset":false,"isSlot":false,"src":"2400:5:37","valueSize":1},{"declaration":6329,"isOffset":false,"isSlot":false,"src":"2415:5:37","valueSize":1},{"declaration":6332,"isOffset":false,"isSlot":false,"src":"2379:5:37","valueSize":1},{"declaration":6319,"isOffset":false,"isSlot":false,"src":"2314:1:37","valueSize":1},{"declaration":6319,"isOffset":false,"isSlot":false,"src":"2357:1:37","valueSize":1},{"declaration":6321,"isOffset":false,"isSlot":false,"src":"2317:1:37","valueSize":1},{"declaration":6321,"isOffset":false,"isSlot":false,"src":"2360:1:37","valueSize":1}],"id":6334,"nodeType":"InlineAssembly","src":"2270:166:37"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6335,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"2517:5:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2526:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2517:10:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6343,"nodeType":"IfStatement","src":"2513:75:37","trueBody":{"id":6342,"nodeType":"Block","src":"2529:59:37","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6338,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"2554:5:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6339,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"2562:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2554:19:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6327,"id":6341,"nodeType":"Return","src":"2547:26:37"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6345,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"2698:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6346,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"2712:5:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2698:19:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2690:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2690:28:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6349,"nodeType":"ExpressionStatement","src":"2690:28:37"},{"assignments":[6351],"declarations":[{"constant":false,"id":6351,"mutability":"mutable","name":"remainder","nameLocation":"2982:9:37","nodeType":"VariableDeclaration","scope":6436,"src":"2974:17:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6350,"name":"uint256","nodeType":"ElementaryTypeName","src":"2974:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6352,"nodeType":"VariableDeclarationStatement","src":"2974:17:37"},{"AST":{"nodeType":"YulBlock","src":"3014:291:37","statements":[{"nodeType":"YulAssignment","src":"3083:38:37","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3103:1:37"},{"name":"y","nodeType":"YulIdentifier","src":"3106:1:37"},{"name":"denominator","nodeType":"YulIdentifier","src":"3109:11:37"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3096:6:37"},"nodeType":"YulFunctionCall","src":"3096:25:37"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3083:9:37"}]},{"nodeType":"YulAssignment","src":"3203:41:37","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3216:5:37"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3226:9:37"},{"name":"prod0","nodeType":"YulIdentifier","src":"3237:5:37"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3223:2:37"},"nodeType":"YulFunctionCall","src":"3223:20:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3212:3:37"},"nodeType":"YulFunctionCall","src":"3212:32:37"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3203:5:37"}]},{"nodeType":"YulAssignment","src":"3261:30:37","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3274:5:37"},{"name":"remainder","nodeType":"YulIdentifier","src":"3281:9:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3270:3:37"},"nodeType":"YulFunctionCall","src":"3270:21:37"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3261:5:37"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6323,"isOffset":false,"isSlot":false,"src":"3109:11:37","valueSize":1},{"declaration":6329,"isOffset":false,"isSlot":false,"src":"3237:5:37","valueSize":1},{"declaration":6329,"isOffset":false,"isSlot":false,"src":"3261:5:37","valueSize":1},{"declaration":6329,"isOffset":false,"isSlot":false,"src":"3274:5:37","valueSize":1},{"declaration":6332,"isOffset":false,"isSlot":false,"src":"3203:5:37","valueSize":1},{"declaration":6332,"isOffset":false,"isSlot":false,"src":"3216:5:37","valueSize":1},{"declaration":6351,"isOffset":false,"isSlot":false,"src":"3083:9:37","valueSize":1},{"declaration":6351,"isOffset":false,"isSlot":false,"src":"3226:9:37","valueSize":1},{"declaration":6351,"isOffset":false,"isSlot":false,"src":"3281:9:37","valueSize":1},{"declaration":6319,"isOffset":false,"isSlot":false,"src":"3103:1:37","valueSize":1},{"declaration":6321,"isOffset":false,"isSlot":false,"src":"3106:1:37","valueSize":1}],"id":6353,"nodeType":"InlineAssembly","src":"3005:300:37"},{"assignments":[6355],"declarations":[{"constant":false,"id":6355,"mutability":"mutable","name":"twos","nameLocation":"3620:4:37","nodeType":"VariableDeclaration","scope":6436,"src":"3612:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6354,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6363,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6356,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"3627:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3642:12:37","subExpression":{"id":6357,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"3643:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3657:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3642:16:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3641:18:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:32:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3612:47:37"},{"AST":{"nodeType":"YulBlock","src":"3682:362:37","statements":[{"nodeType":"YulAssignment","src":"3747:37:37","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3766:11:37"},{"name":"twos","nodeType":"YulIdentifier","src":"3779:4:37"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3762:3:37"},"nodeType":"YulFunctionCall","src":"3762:22:37"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3747:11:37"}]},{"nodeType":"YulAssignment","src":"3851:25:37","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3864:5:37"},{"name":"twos","nodeType":"YulIdentifier","src":"3871:4:37"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3860:3:37"},"nodeType":"YulFunctionCall","src":"3860:16:37"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3851:5:37"}]},{"nodeType":"YulAssignment","src":"3991:39:37","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4011:1:37","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4014:4:37"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4007:3:37"},"nodeType":"YulFunctionCall","src":"4007:12:37"},{"name":"twos","nodeType":"YulIdentifier","src":"4021:4:37"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4003:3:37"},"nodeType":"YulFunctionCall","src":"4003:23:37"},{"kind":"number","nodeType":"YulLiteral","src":"4028:1:37","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:37"},"nodeType":"YulFunctionCall","src":"3999:31:37"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3991:4:37"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6323,"isOffset":false,"isSlot":false,"src":"3747:11:37","valueSize":1},{"declaration":6323,"isOffset":false,"isSlot":false,"src":"3766:11:37","valueSize":1},{"declaration":6329,"isOffset":false,"isSlot":false,"src":"3851:5:37","valueSize":1},{"declaration":6329,"isOffset":false,"isSlot":false,"src":"3864:5:37","valueSize":1},{"declaration":6355,"isOffset":false,"isSlot":false,"src":"3779:4:37","valueSize":1},{"declaration":6355,"isOffset":false,"isSlot":false,"src":"3871:4:37","valueSize":1},{"declaration":6355,"isOffset":false,"isSlot":false,"src":"3991:4:37","valueSize":1},{"declaration":6355,"isOffset":false,"isSlot":false,"src":"4014:4:37","valueSize":1},{"declaration":6355,"isOffset":false,"isSlot":false,"src":"4021:4:37","valueSize":1}],"id":6364,"nodeType":"InlineAssembly","src":"3673:371:37"},{"expression":{"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6365,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"4110:5:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"4119:5:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6367,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"4127:4:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4119:12:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4110:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6370,"nodeType":"ExpressionStatement","src":"4110:21:37"},{"assignments":[6372],"declarations":[{"constant":false,"id":6372,"mutability":"mutable","name":"inverse","nameLocation":"4457:7:37","nodeType":"VariableDeclaration","scope":6436,"src":"4449:15:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6371,"name":"uint256","nodeType":"ElementaryTypeName","src":"4449:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6379,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4468:1:37","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6374,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4472:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4468:15:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4467:17:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":6377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4487:1:37","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4467:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4449:39:37"},{"expression":{"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6380,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"4705:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4716:1:37","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6382,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4720:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6383,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"4734:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4720:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4716:25:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4705:36:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6387,"nodeType":"ExpressionStatement","src":"4705:36:37"},{"expression":{"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6388,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"4774:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:37","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6390,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4789:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6391,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"4803:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4789:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4785:25:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4774:36:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6395,"nodeType":"ExpressionStatement","src":"4774:36:37"},{"expression":{"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6396,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"4844:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4855:1:37","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6398,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4859:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6399,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"4873:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4859:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4855:25:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4844:36:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6403,"nodeType":"ExpressionStatement","src":"4844:36:37"},{"expression":{"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6404,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"4914:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4925:1:37","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6406,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4929:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6407,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"4943:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4929:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:25:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4914:36:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6411,"nodeType":"ExpressionStatement","src":"4914:36:37"},{"expression":{"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6412,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"4984:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4995:1:37","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6414,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4999:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6415,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"5013:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4999:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4995:25:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4984:36:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6419,"nodeType":"ExpressionStatement","src":"4984:36:37"},{"expression":{"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6420,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"5055:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:37","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6422,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"5070:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6423,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"5084:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5070:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5066:25:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5055:36:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6427,"nodeType":"ExpressionStatement","src":"5055:36:37"},{"expression":{"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"5525:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6429,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"5534:5:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6430,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"5542:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5534:15:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5525:24:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6433,"nodeType":"ExpressionStatement","src":"5525:24:37"},{"expression":{"id":6434,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"5570:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6327,"id":6435,"nodeType":"Return","src":"5563:13:37"}]}]},"documentation":{"id":6317,"nodeType":"StructuredDocumentation","src":"1358:305:37","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":6438,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1677:6:37","nodeType":"FunctionDefinition","parameters":{"id":6324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6319,"mutability":"mutable","name":"x","nameLocation":"1701:1:37","nodeType":"VariableDeclaration","scope":6438,"src":"1693:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6318,"name":"uint256","nodeType":"ElementaryTypeName","src":"1693:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6321,"mutability":"mutable","name":"y","nameLocation":"1720:1:37","nodeType":"VariableDeclaration","scope":6438,"src":"1712:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1712:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6323,"mutability":"mutable","name":"denominator","nameLocation":"1739:11:37","nodeType":"VariableDeclaration","scope":6438,"src":"1731:19:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1731:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:73:37"},"returnParameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"result","nameLocation":"1788:6:37","nodeType":"VariableDeclaration","scope":6438,"src":"1780:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1780:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1779:16:37"},"scope":6729,"src":"1668:3925:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6481,"nodeType":"Block","src":"5873:189:37","statements":[{"assignments":[6454],"declarations":[{"constant":false,"id":6454,"mutability":"mutable","name":"result","nameLocation":"5891:6:37","nodeType":"VariableDeclaration","scope":6481,"src":"5883:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6453,"name":"uint256","nodeType":"ElementaryTypeName","src":"5883:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6460,"initialValue":{"arguments":[{"id":6456,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"5907:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6457,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6443,"src":"5910:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6458,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"5913:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6455,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[6438,6482],"referencedDeclaration":6438,"src":"5900:6:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5900:25:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5883:42:37"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$6232","typeString":"enum Math.Rounding"},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6461,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"5939:8:37","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6232","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6462,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"5951:8:37","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$6232_$","typeString":"type(enum Math.Rounding)"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":6230,"src":"5951:11:37","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6232","typeString":"enum Math.Rounding"}},"src":"5939:23:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6466,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"5973:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6467,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6443,"src":"5976:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6468,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"5979:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6465,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5966:6:37","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5966:25:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5994:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5966:29:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5939:56:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6478,"nodeType":"IfStatement","src":"5935:98:37","trueBody":{"id":6477,"nodeType":"Block","src":"5997:36:37","statements":[{"expression":{"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6473,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"6011:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6011:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6476,"nodeType":"ExpressionStatement","src":"6011:11:37"}]}},{"expression":{"id":6479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"6049:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6452,"id":6480,"nodeType":"Return","src":"6042:13:37"}]},"documentation":{"id":6439,"nodeType":"StructuredDocumentation","src":"5599:121:37","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":6482,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5734:6:37","nodeType":"FunctionDefinition","parameters":{"id":6449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6441,"mutability":"mutable","name":"x","nameLocation":"5758:1:37","nodeType":"VariableDeclaration","scope":6482,"src":"5750:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6440,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6443,"mutability":"mutable","name":"y","nameLocation":"5777:1:37","nodeType":"VariableDeclaration","scope":6482,"src":"5769:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6442,"name":"uint256","nodeType":"ElementaryTypeName","src":"5769:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6445,"mutability":"mutable","name":"denominator","nameLocation":"5796:11:37","nodeType":"VariableDeclaration","scope":6482,"src":"5788:19:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6444,"name":"uint256","nodeType":"ElementaryTypeName","src":"5788:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6448,"mutability":"mutable","name":"rounding","nameLocation":"5826:8:37","nodeType":"VariableDeclaration","scope":6482,"src":"5817:17:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6232","typeString":"enum Math.Rounding"},"typeName":{"id":6447,"nodeType":"UserDefinedTypeName","pathNode":{"id":6446,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":6232,"src":"5817:8:37"},"referencedDeclaration":6232,"src":"5817:8:37","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6232","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5740:100:37"},"returnParameters":{"id":6452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6482,"src":"5864:7:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6450,"name":"uint256","nodeType":"ElementaryTypeName","src":"5864:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5863:9:37"},"scope":6729,"src":"5725:337:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6691,"nodeType":"Block","src":"6338:2149:37","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6490,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"6352:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6357:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6352:6:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6496,"nodeType":"IfStatement","src":"6348:45:37","trueBody":{"id":6495,"nodeType":"Block","src":"6360:33:37","statements":[{"expression":{"hexValue":"30","id":6493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6489,"id":6494,"nodeType":"Return","src":"6374:8:37"}]}},{"assignments":[6498],"declarations":[{"constant":false,"id":6498,"mutability":"mutable","name":"result","nameLocation":"7066:6:37","nodeType":"VariableDeclaration","scope":6691,"src":"7058:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6497,"name":"uint256","nodeType":"ElementaryTypeName","src":"7058:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6500,"initialValue":{"hexValue":"31","id":6499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7075:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"7058:18:37"},{"assignments":[6502],"declarations":[{"constant":false,"id":6502,"mutability":"mutable","name":"x","nameLocation":"7094:1:37","nodeType":"VariableDeclaration","scope":6691,"src":"7086:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6501,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6504,"initialValue":{"id":6503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"7098:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7086:13:37"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6505,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"7113:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:3:37","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"7113:8:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7124:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7113:12:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6519,"nodeType":"IfStatement","src":"7109:79:37","trueBody":{"id":6518,"nodeType":"Block","src":"7127:61:37","statements":[{"expression":{"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6510,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"7141:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7147:3:37","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"7141:9:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6513,"nodeType":"ExpressionStatement","src":"7141:9:37"},{"expression":{"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"7164:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":6515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7175:2:37","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7164:13:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6517,"nodeType":"ExpressionStatement","src":"7164:13:37"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6520,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"7201:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":6521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7206:2:37","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7201:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7211:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7201:11:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6534,"nodeType":"IfStatement","src":"7197:77:37","trueBody":{"id":6533,"nodeType":"Block","src":"7214:60:37","statements":[{"expression":{"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6525,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"7228:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7234:2:37","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7228:8:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6528,"nodeType":"ExpressionStatement","src":"7228:8:37"},{"expression":{"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"7250:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":6530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:2:37","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7250:13:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6532,"nodeType":"ExpressionStatement","src":"7250:13:37"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6535,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"7287:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":6536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:2:37","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7287:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7297:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7287:11:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6549,"nodeType":"IfStatement","src":"7283:77:37","trueBody":{"id":6548,"nodeType":"Block","src":"7300:60:37","statements":[{"expression":{"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6540,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"7314:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7320:2:37","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7314:8:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6543,"nodeType":"ExpressionStatement","src":"7314:8:37"},{"expression":{"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"7336:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":6545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7347:2:37","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7336:13:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6547,"nodeType":"ExpressionStatement","src":"7336:13:37"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6550,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"7373:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":6551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7378:2:37","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7373:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7383:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7373:11:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6564,"nodeType":"IfStatement","src":"7369:76:37","trueBody":{"id":6563,"nodeType":"Block","src":"7386:59:37","statements":[{"expression":{"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6555,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"7400:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7406:2:37","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7400:8:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6558,"nodeType":"ExpressionStatement","src":"7400:8:37"},{"expression":{"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"7422:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":6560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7433:1:37","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"7422:12:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6562,"nodeType":"ExpressionStatement","src":"7422:12:37"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6565,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"7458:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":6566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7463:1:37","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"7458:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7467:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7458:10:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6579,"nodeType":"IfStatement","src":"7454:74:37","trueBody":{"id":6578,"nodeType":"Block","src":"7470:58:37","statements":[{"expression":{"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6570,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"7484:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7490:1:37","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"7484:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6573,"nodeType":"ExpressionStatement","src":"7484:7:37"},{"expression":{"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"7505:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":6575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7516:1:37","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7505:12:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6577,"nodeType":"ExpressionStatement","src":"7505:12:37"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6580,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"7541:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":6581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7546:1:37","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7541:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7550:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7541:10:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6594,"nodeType":"IfStatement","src":"7537:74:37","trueBody":{"id":6593,"nodeType":"Block","src":"7553:58:37","statements":[{"expression":{"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6585,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"7567:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7573:1:37","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7567:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6588,"nodeType":"ExpressionStatement","src":"7567:7:37"},{"expression":{"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"7588:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":6590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7599:1:37","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7588:12:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6592,"nodeType":"ExpressionStatement","src":"7588:12:37"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6595,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"7624:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":6596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7629:1:37","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7624:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7633:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7624:10:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6605,"nodeType":"IfStatement","src":"7620:53:37","trueBody":{"id":6604,"nodeType":"Block","src":"7636:37:37","statements":[{"expression":{"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6600,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"7650:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":6601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7661:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7650:12:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6603,"nodeType":"ExpressionStatement","src":"7650:12:37"}]}},{"id":6690,"nodeType":"UncheckedBlock","src":"8073:408:37","statements":[{"expression":{"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8097:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8107:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"8116:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8120:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8116:10:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8107:19:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8106:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8131:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8106:26:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8097:35:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6616,"nodeType":"ExpressionStatement","src":"8097:35:37"},{"expression":{"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8146:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8156:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6619,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"8165:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8169:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8165:10:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8156:19:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6623,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8155:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8180:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8155:26:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8146:35:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6627,"nodeType":"ExpressionStatement","src":"8146:35:37"},{"expression":{"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8195:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8205:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"8214:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8218:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:10:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8205:19:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6634,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8204:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8229:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8204:26:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8195:35:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6638,"nodeType":"ExpressionStatement","src":"8195:35:37"},{"expression":{"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6639,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8244:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6640,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8254:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"8263:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8267:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8263:10:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8254:19:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8253:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8278:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8253:26:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8244:35:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6649,"nodeType":"ExpressionStatement","src":"8244:35:37"},{"expression":{"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8293:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6651,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8303:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6652,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"8312:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8316:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:10:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8303:19:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8302:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8327:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:26:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8293:35:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6660,"nodeType":"ExpressionStatement","src":"8293:35:37"},{"expression":{"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8342:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8352:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6663,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"8361:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6664,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8365:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8361:10:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8352:19:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8351:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8376:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8351:26:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8342:35:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6671,"nodeType":"ExpressionStatement","src":"8342:35:37"},{"expression":{"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6672,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8391:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6673,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8401:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6674,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"8410:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8414:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8410:10:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8401:19:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6678,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8400:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8425:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8400:26:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8391:35:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6682,"nodeType":"ExpressionStatement","src":"8391:35:37"},{"expression":{"arguments":[{"id":6684,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8451:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"8459:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"8463:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8459:10:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6683,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"8447:3:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8447:23:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6489,"id":6689,"nodeType":"Return","src":"8440:30:37"}]}]},"documentation":{"id":6483,"nodeType":"StructuredDocumentation","src":"6068:208:37","text":" @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":6692,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6290:4:37","nodeType":"FunctionDefinition","parameters":{"id":6486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6485,"mutability":"mutable","name":"a","nameLocation":"6303:1:37","nodeType":"VariableDeclaration","scope":6692,"src":"6295:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6484,"name":"uint256","nodeType":"ElementaryTypeName","src":"6295:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6294:11:37"},"returnParameters":{"id":6489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6692,"src":"6329:7:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6487,"name":"uint256","nodeType":"ElementaryTypeName","src":"6329:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6328:9:37"},"scope":6729,"src":"6281:2206:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6727,"nodeType":"Block","src":"8663:161:37","statements":[{"assignments":[6704],"declarations":[{"constant":false,"id":6704,"mutability":"mutable","name":"result","nameLocation":"8681:6:37","nodeType":"VariableDeclaration","scope":6727,"src":"8673:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6703,"name":"uint256","nodeType":"ElementaryTypeName","src":"8673:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6708,"initialValue":{"arguments":[{"id":6706,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"8695:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6705,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6692,6728],"referencedDeclaration":6692,"src":"8690:4:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8690:7:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8673:24:37"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$6232","typeString":"enum Math.Rounding"},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6709,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"8711:8:37","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6232","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6710,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"8723:8:37","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$6232_$","typeString":"type(enum Math.Rounding)"}},"id":6711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":6230,"src":"8723:11:37","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6232","typeString":"enum Math.Rounding"}},"src":"8711:23:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"8738:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"8747:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8738:15:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6716,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"8756:1:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8738:19:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8711:46:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6724,"nodeType":"IfStatement","src":"8707:88:37","trueBody":{"id":6723,"nodeType":"Block","src":"8759:36:37","statements":[{"expression":{"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"8773:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8783:1:37","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8773:11:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6722,"nodeType":"ExpressionStatement","src":"8773:11:37"}]}},{"expression":{"id":6725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"8811:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6702,"id":6726,"nodeType":"Return","src":"8804:13:37"}]},"documentation":{"id":6693,"nodeType":"StructuredDocumentation","src":"8493:89:37","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":6728,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:37","nodeType":"FunctionDefinition","parameters":{"id":6699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6695,"mutability":"mutable","name":"a","nameLocation":"8609:1:37","nodeType":"VariableDeclaration","scope":6728,"src":"8601:9:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6694,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6698,"mutability":"mutable","name":"rounding","nameLocation":"8621:8:37","nodeType":"VariableDeclaration","scope":6728,"src":"8612:17:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6232","typeString":"enum Math.Rounding"},"typeName":{"id":6697,"nodeType":"UserDefinedTypeName","pathNode":{"id":6696,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":6232,"src":"8612:8:37"},"referencedDeclaration":6232,"src":"8612:8:37","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6232","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8600:30:37"},"returnParameters":{"id":6702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6728,"src":"8654:7:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6700,"name":"uint256","nodeType":"ElementaryTypeName","src":"8654:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8653:9:37"},"scope":6729,"src":"8587:237:37","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6730,"src":"202:8624:37","usedErrors":[]}],"src":"103:8724:37"},"id":37},"contracts/.deps/npm/@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"contracts/.deps/npm/@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[7041]},"id":7042,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6731,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:38"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":6732,"nodeType":"StructuredDocumentation","src":"285:196:38","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":7041,"linearizedBaseContracts":[7041],"name":"SafeMath","nameLocation":"490:8:38","nodeType":"ContractDefinition","nodes":[{"body":{"id":6763,"nodeType":"Block","src":"717:140:38","statements":[{"id":6762,"nodeType":"UncheckedBlock","src":"727:124:38","statements":[{"assignments":[6745],"declarations":[{"constant":false,"id":6745,"mutability":"mutable","name":"c","nameLocation":"759:1:38","nodeType":"VariableDeclaration","scope":6762,"src":"751:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6744,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6749,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6746,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"763:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6747,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"767:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6750,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"786:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6751,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"790:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6757,"nodeType":"IfStatement","src":"782:28:38","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6743,"id":6756,"nodeType":"Return","src":"793:17:38"}},{"expression":{"components":[{"hexValue":"74727565","id":6758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":6759,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"838:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6743,"id":6761,"nodeType":"Return","src":"824:16:38"}]}]},"documentation":{"id":6733,"nodeType":"StructuredDocumentation","src":"505:131:38","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":6764,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:38","nodeType":"FunctionDefinition","parameters":{"id":6738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6735,"mutability":"mutable","name":"a","nameLocation":"665:1:38","nodeType":"VariableDeclaration","scope":6764,"src":"657:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6734,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6737,"mutability":"mutable","name":"b","nameLocation":"676:1:38","nodeType":"VariableDeclaration","scope":6764,"src":"668:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6736,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:38"},"returnParameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6764,"src":"702:4:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6739,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6764,"src":"708:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6741,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:38"},"scope":7041,"src":"641:216:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6791,"nodeType":"Block","src":"1078:113:38","statements":[{"id":6790,"nodeType":"UncheckedBlock","src":"1088:97:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6776,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"1116:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6777,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"1120:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6783,"nodeType":"IfStatement","src":"1112:28:38","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6775,"id":6782,"nodeType":"Return","src":"1123:17:38"}},{"expression":{"components":[{"hexValue":"74727565","id":6784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6785,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"1168:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6786,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"1172:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6775,"id":6789,"nodeType":"Return","src":"1154:20:38"}]}]},"documentation":{"id":6765,"nodeType":"StructuredDocumentation","src":"863:134:38","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":6792,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:38","nodeType":"FunctionDefinition","parameters":{"id":6770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6767,"mutability":"mutable","name":"a","nameLocation":"1026:1:38","nodeType":"VariableDeclaration","scope":6792,"src":"1018:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6769,"mutability":"mutable","name":"b","nameLocation":"1037:1:38","nodeType":"VariableDeclaration","scope":6792,"src":"1029:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6768,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:38"},"returnParameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6792,"src":"1063:4:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6771,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6792,"src":"1069:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:38"},"scope":7041,"src":"1002:189:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6833,"nodeType":"Block","src":"1415:417:38","statements":[{"id":6832,"nodeType":"UncheckedBlock","src":"1425:401:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6804,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"1683:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6811,"nodeType":"IfStatement","src":"1679:28:38","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":6807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":6808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6803,"id":6810,"nodeType":"Return","src":"1691:16:38"}},{"assignments":[6813],"declarations":[{"constant":false,"id":6813,"mutability":"mutable","name":"c","nameLocation":"1729:1:38","nodeType":"VariableDeclaration","scope":6832,"src":"1721:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6817,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6814,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"1733:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6815,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"1737:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:38"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6818,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"1756:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6819,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"1760:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6821,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"1765:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6827,"nodeType":"IfStatement","src":"1752:33:38","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6803,"id":6826,"nodeType":"Return","src":"1768:17:38"}},{"expression":{"components":[{"hexValue":"74727565","id":6828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":6829,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"1813:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6803,"id":6831,"nodeType":"Return","src":"1799:16:38"}]}]},"documentation":{"id":6793,"nodeType":"StructuredDocumentation","src":"1197:137:38","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":6834,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:38","nodeType":"FunctionDefinition","parameters":{"id":6798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6795,"mutability":"mutable","name":"a","nameLocation":"1363:1:38","nodeType":"VariableDeclaration","scope":6834,"src":"1355:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6797,"mutability":"mutable","name":"b","nameLocation":"1374:1:38","nodeType":"VariableDeclaration","scope":6834,"src":"1366:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6796,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:38"},"returnParameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6834,"src":"1400:4:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6799,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6834,"src":"1406:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6801,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:38"},"scope":7041,"src":"1339:493:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6861,"nodeType":"Block","src":"2057:114:38","statements":[{"id":6860,"nodeType":"UncheckedBlock","src":"2067:98:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6846,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"2095:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6853,"nodeType":"IfStatement","src":"2091:29:38","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6845,"id":6852,"nodeType":"Return","src":"2103:17:38"}},{"expression":{"components":[{"hexValue":"74727565","id":6854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6855,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"2148:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6856,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"2152:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6845,"id":6859,"nodeType":"Return","src":"2134:20:38"}]}]},"documentation":{"id":6835,"nodeType":"StructuredDocumentation","src":"1838:138:38","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":6862,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:38","nodeType":"FunctionDefinition","parameters":{"id":6840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6837,"mutability":"mutable","name":"a","nameLocation":"2005:1:38","nodeType":"VariableDeclaration","scope":6862,"src":"1997:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6839,"mutability":"mutable","name":"b","nameLocation":"2016:1:38","nodeType":"VariableDeclaration","scope":6862,"src":"2008:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6838,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:38"},"returnParameters":{"id":6845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6862,"src":"2042:4:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6841,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6862,"src":"2048:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6843,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:38"},"scope":7041,"src":"1981:190:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6889,"nodeType":"Block","src":"2406:114:38","statements":[{"id":6888,"nodeType":"UncheckedBlock","src":"2416:98:38","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6874,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"2444:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6881,"nodeType":"IfStatement","src":"2440:29:38","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6873,"id":6880,"nodeType":"Return","src":"2452:17:38"}},{"expression":{"components":[{"hexValue":"74727565","id":6882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6883,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"2497:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6884,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"2501:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:38","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6873,"id":6887,"nodeType":"Return","src":"2483:20:38"}]}]},"documentation":{"id":6863,"nodeType":"StructuredDocumentation","src":"2177:148:38","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":6890,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:38","nodeType":"FunctionDefinition","parameters":{"id":6868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"a","nameLocation":"2354:1:38","nodeType":"VariableDeclaration","scope":6890,"src":"2346:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6864,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6867,"mutability":"mutable","name":"b","nameLocation":"2365:1:38","nodeType":"VariableDeclaration","scope":6890,"src":"2357:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6866,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:38"},"returnParameters":{"id":6873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6890,"src":"2391:4:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6869,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6890,"src":"2397:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6871,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:38"},"scope":7041,"src":"2330:190:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6904,"nodeType":"Block","src":"2822:29:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6900,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"2839:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6901,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6895,"src":"2843:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6899,"id":6903,"nodeType":"Return","src":"2832:12:38"}]},"documentation":{"id":6891,"nodeType":"StructuredDocumentation","src":"2526:224:38","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":6905,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:38","nodeType":"FunctionDefinition","parameters":{"id":6896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6893,"mutability":"mutable","name":"a","nameLocation":"2776:1:38","nodeType":"VariableDeclaration","scope":6905,"src":"2768:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6892,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6895,"mutability":"mutable","name":"b","nameLocation":"2787:1:38","nodeType":"VariableDeclaration","scope":6905,"src":"2779:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:38"},"returnParameters":{"id":6899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6905,"src":"2813:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6897,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:38"},"scope":7041,"src":"2755:96:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6919,"nodeType":"Block","src":"3189:29:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6915,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"3206:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6916,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"3210:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6914,"id":6918,"nodeType":"Return","src":"3199:12:38"}]},"documentation":{"id":6906,"nodeType":"StructuredDocumentation","src":"2857:260:38","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":6920,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:38","nodeType":"FunctionDefinition","parameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"mutability":"mutable","name":"a","nameLocation":"3143:1:38","nodeType":"VariableDeclaration","scope":6920,"src":"3135:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6907,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6910,"mutability":"mutable","name":"b","nameLocation":"3154:1:38","nodeType":"VariableDeclaration","scope":6920,"src":"3146:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6909,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:38"},"returnParameters":{"id":6914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6920,"src":"3180:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6912,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:38"},"scope":7041,"src":"3122:96:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6934,"nodeType":"Block","src":"3532:29:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6930,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"3549:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6931,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"3553:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6929,"id":6933,"nodeType":"Return","src":"3542:12:38"}]},"documentation":{"id":6921,"nodeType":"StructuredDocumentation","src":"3224:236:38","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":6935,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:38","nodeType":"FunctionDefinition","parameters":{"id":6926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6923,"mutability":"mutable","name":"a","nameLocation":"3486:1:38","nodeType":"VariableDeclaration","scope":6935,"src":"3478:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6922,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6925,"mutability":"mutable","name":"b","nameLocation":"3497:1:38","nodeType":"VariableDeclaration","scope":6935,"src":"3489:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6924,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:38"},"returnParameters":{"id":6929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6935,"src":"3523:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6927,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:38"},"scope":7041,"src":"3465:96:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6949,"nodeType":"Block","src":"3917:29:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6945,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"3934:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6946,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"3938:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6944,"id":6948,"nodeType":"Return","src":"3927:12:38"}]},"documentation":{"id":6936,"nodeType":"StructuredDocumentation","src":"3567:278:38","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":6950,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:38","nodeType":"FunctionDefinition","parameters":{"id":6941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6938,"mutability":"mutable","name":"a","nameLocation":"3871:1:38","nodeType":"VariableDeclaration","scope":6950,"src":"3863:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6937,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6940,"mutability":"mutable","name":"b","nameLocation":"3882:1:38","nodeType":"VariableDeclaration","scope":6950,"src":"3874:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6939,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:38"},"returnParameters":{"id":6944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6950,"src":"3908:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6942,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:38"},"scope":7041,"src":"3850:96:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6964,"nodeType":"Block","src":"4466:29:38","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6960,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"4483:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6961,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"4487:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6959,"id":6963,"nodeType":"Return","src":"4476:12:38"}]},"documentation":{"id":6951,"nodeType":"StructuredDocumentation","src":"3952:442:38","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":6965,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:38","nodeType":"FunctionDefinition","parameters":{"id":6956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6953,"mutability":"mutable","name":"a","nameLocation":"4420:1:38","nodeType":"VariableDeclaration","scope":6965,"src":"4412:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6952,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6955,"mutability":"mutable","name":"b","nameLocation":"4431:1:38","nodeType":"VariableDeclaration","scope":6965,"src":"4423:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6954,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:38"},"returnParameters":{"id":6959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6965,"src":"4457:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6957,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:38"},"scope":7041,"src":"4399:96:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6989,"nodeType":"Block","src":"5084:106:38","statements":[{"id":6988,"nodeType":"UncheckedBlock","src":"5094:90:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6978,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"5126:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6979,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"5131:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6981,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"5134:12:38","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6977,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5118:29:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6983,"nodeType":"ExpressionStatement","src":"5118:29:38"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6984,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"5168:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6985,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"5172:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6976,"id":6987,"nodeType":"Return","src":"5161:12:38"}]}]},"documentation":{"id":6966,"nodeType":"StructuredDocumentation","src":"4501:453:38","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":6990,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:38","nodeType":"FunctionDefinition","parameters":{"id":6973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6968,"mutability":"mutable","name":"a","nameLocation":"4989:1:38","nodeType":"VariableDeclaration","scope":6990,"src":"4981:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6967,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6970,"mutability":"mutable","name":"b","nameLocation":"5008:1:38","nodeType":"VariableDeclaration","scope":6990,"src":"5000:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6969,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6972,"mutability":"mutable","name":"errorMessage","nameLocation":"5033:12:38","nodeType":"VariableDeclaration","scope":6990,"src":"5019:26:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6971,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:38"},"returnParameters":{"id":6976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6990,"src":"5075:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6974,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:38"},"scope":7041,"src":"4959:231:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7014,"nodeType":"Block","src":"5799:105:38","statements":[{"id":7013,"nodeType":"UncheckedBlock","src":"5809:89:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7003,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"5841:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7006,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"5848:12:38","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7002,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5833:28:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7008,"nodeType":"ExpressionStatement","src":"5833:28:38"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"5882:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7010,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"5886:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7001,"id":7012,"nodeType":"Return","src":"5875:12:38"}]}]},"documentation":{"id":6991,"nodeType":"StructuredDocumentation","src":"5196:473:38","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":7015,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5683:3:38","nodeType":"FunctionDefinition","parameters":{"id":6998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6993,"mutability":"mutable","name":"a","nameLocation":"5704:1:38","nodeType":"VariableDeclaration","scope":7015,"src":"5696:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6992,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6995,"mutability":"mutable","name":"b","nameLocation":"5723:1:38","nodeType":"VariableDeclaration","scope":7015,"src":"5715:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6994,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6997,"mutability":"mutable","name":"errorMessage","nameLocation":"5748:12:38","nodeType":"VariableDeclaration","scope":7015,"src":"5734:26:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6996,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:38"},"returnParameters":{"id":7001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7015,"src":"5790:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6999,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:38"},"scope":7041,"src":"5674:230:38","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7039,"nodeType":"Block","src":"6675:105:38","statements":[{"id":7038,"nodeType":"UncheckedBlock","src":"6685:89:38","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7028,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"6717:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:38","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:38","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7031,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"6724:12:38","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7027,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:38","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6709:28:38","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7033,"nodeType":"ExpressionStatement","src":"6709:28:38"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7034,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"6758:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":7035,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"6762:1:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7026,"id":7037,"nodeType":"Return","src":"6751:12:38"}]}]},"documentation":{"id":7016,"nodeType":"StructuredDocumentation","src":"5910:635:38","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":7040,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6559:3:38","nodeType":"FunctionDefinition","parameters":{"id":7023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7018,"mutability":"mutable","name":"a","nameLocation":"6580:1:38","nodeType":"VariableDeclaration","scope":7040,"src":"6572:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7017,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7020,"mutability":"mutable","name":"b","nameLocation":"6599:1:38","nodeType":"VariableDeclaration","scope":7040,"src":"6591:9:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7019,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7022,"mutability":"mutable","name":"errorMessage","nameLocation":"6624:12:38","nodeType":"VariableDeclaration","scope":7040,"src":"6610:26:38","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7021,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:38","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:38"},"returnParameters":{"id":7026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7040,"src":"6666:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7024,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:38"},"scope":7041,"src":"6550:230:38","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7042,"src":"482:6300:38","usedErrors":[]}],"src":"107:6676:38"},"id":38},"contracts/manilla.sol":{"ast":{"absolutePath":"contracts/manilla.sol","exportedSymbols":{"Context":[229],"IERC20":[182],"IERC20Metadata":[207],"Manilla":[7587],"Ownable":[104]},"id":7588,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":7043,"literals":["solidity","0.8",".4"],"nodeType":"PragmaDirective","src":"102:22:39"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7044,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7588,"sourceUnit":183,"src":"125:56:39","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":7045,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7588,"sourceUnit":208,"src":"182:75:39","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":7046,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7588,"sourceUnit":230,"src":"258:51:39","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7047,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7588,"sourceUnit":105,"src":"310:52:39","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7048,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":182,"src":"384:6:39"},"id":7049,"nodeType":"InheritanceSpecifier","src":"384:6:39"},{"baseName":{"id":7050,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":207,"src":"392:14:39"},"id":7051,"nodeType":"InheritanceSpecifier","src":"392:14:39"},{"baseName":{"id":7052,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":229,"src":"408:7:39"},"id":7053,"nodeType":"InheritanceSpecifier","src":"408:7:39"},{"baseName":{"id":7054,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":104,"src":"417:7:39"},"id":7055,"nodeType":"InheritanceSpecifier","src":"417:7:39"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7587,"linearizedBaseContracts":[7587,104,229,207,182],"name":"Manilla","nameLocation":"373:7:39","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7059,"mutability":"mutable","name":"_balances","nameLocation":"466:9:39","nodeType":"VariableDeclaration","scope":7587,"src":"430:45:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7058,"keyType":{"id":7056,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"430:27:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":7057,"name":"uint256","nodeType":"ElementaryTypeName","src":"449:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":7065,"mutability":"mutable","name":"_allowances","nameLocation":"537:11:39","nodeType":"VariableDeclaration","scope":7587,"src":"481:67:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":7064,"keyType":{"id":7060,"name":"address","nodeType":"ElementaryTypeName","src":"489:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"481:47:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":7063,"keyType":{"id":7061,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"500:27:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":7062,"name":"uint256","nodeType":"ElementaryTypeName","src":"519:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":7067,"mutability":"mutable","name":"_totalSupply","nameLocation":"570:12:39","nodeType":"VariableDeclaration","scope":7587,"src":"554:28:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7066,"name":"uint256","nodeType":"ElementaryTypeName","src":"554:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":7069,"mutability":"mutable","name":"_name","nameLocation":"603:5:39","nodeType":"VariableDeclaration","scope":7587,"src":"588:20:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7068,"name":"string","nodeType":"ElementaryTypeName","src":"588:6:39","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":7071,"mutability":"mutable","name":"_symbol","nameLocation":"629:7:39","nodeType":"VariableDeclaration","scope":7587,"src":"614:22:39","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7070,"name":"string","nodeType":"ElementaryTypeName","src":"614:6:39","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":7116,"nodeType":"Block","src":"1045:227:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7084,"name":"adminAccount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"1063:13:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1080:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7085,"name":"address","nodeType":"ElementaryTypeName","src":"1080:7:39","typeDescriptions":{}}},"id":7088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1080:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1063:27:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1055:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1055:36:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7091,"nodeType":"ExpressionStatement","src":"1055:36:39"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7093,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"1109:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"id":7096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1120:1:39","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"314539","id":7095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1124:3:39","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1E9"},"src":"1120:7:39","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31453138","id":7097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:39","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1E18"},"src":"1120:14:39","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"}},"src":"1109:25:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616d6f756e7420746f206265206d696e746564206578636565647320312062696c6c696f6e","id":7100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1136:39:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b2d71d4d2d7e0cbb62ac44e65a87be2b38e93941464dceb83157bb9e96bd19e","typeString":"literal_string \"amount to be minted exceeds 1 billion\""},"value":"amount to be minted exceeds 1 billion"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b2d71d4d2d7e0cbb62ac44e65a87be2b38e93941464dceb83157bb9e96bd19e","typeString":"literal_string \"amount to be minted exceeds 1 billion\""}],"id":7092,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1101:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1101:75:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7102,"nodeType":"ExpressionStatement","src":"1101:75:39"},{"expression":{"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7103,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"1186:5:39","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7104,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"1194:5:39","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1186:13:39","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7106,"nodeType":"ExpressionStatement","src":"1186:13:39"},{"expression":{"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7107,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"1209:7:39","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7108,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"1219:7:39","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1209:17:39","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7110,"nodeType":"ExpressionStatement","src":"1209:17:39"},{"expression":{"arguments":[{"id":7112,"name":"adminAccount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"1242:13:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7113,"name":"amount_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"1257:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7111,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"1236:5:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1236:29:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7115,"nodeType":"ExpressionStatement","src":"1236:29:39"}]},"documentation":{"id":7072,"nodeType":"StructuredDocumentation","src":"643:301:39","text":" @dev Sets the values for {name} and {symbol}.\n   \n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":7117,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7074,"mutability":"mutable","name":"name_","nameLocation":"975:5:39","nodeType":"VariableDeclaration","scope":7117,"src":"961:19:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7073,"name":"string","nodeType":"ElementaryTypeName","src":"961:6:39","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7076,"mutability":"mutable","name":"symbol_","nameLocation":"996:7:39","nodeType":"VariableDeclaration","scope":7117,"src":"982:21:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7075,"name":"string","nodeType":"ElementaryTypeName","src":"982:6:39","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7078,"mutability":"mutable","name":"amount_","nameLocation":"1013:7:39","nodeType":"VariableDeclaration","scope":7117,"src":"1005:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7077,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7080,"mutability":"mutable","name":"adminAccount_","nameLocation":"1030:13:39","nodeType":"VariableDeclaration","scope":7117,"src":"1022:21:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7079,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"960:84:39"},"returnParameters":{"id":7082,"nodeType":"ParameterList","parameters":[],"src":"1045:0:39"},"scope":7587,"src":"949:323:39","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[194],"body":{"id":7126,"nodeType":"Block","src":"1406:29:39","statements":[{"expression":{"id":7124,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7069,"src":"1423:5:39","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":7123,"id":7125,"nodeType":"Return","src":"1416:12:39"}]},"documentation":{"id":7118,"nodeType":"StructuredDocumentation","src":"1278:54:39","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":7127,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1346:4:39","nodeType":"FunctionDefinition","overrides":{"id":7120,"nodeType":"OverrideSpecifier","overrides":[],"src":"1373:8:39"},"parameters":{"id":7119,"nodeType":"ParameterList","parameters":[],"src":"1350:2:39"},"returnParameters":{"id":7123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7127,"src":"1391:13:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7121,"name":"string","nodeType":"ElementaryTypeName","src":"1391:6:39","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1390:15:39"},"scope":7587,"src":"1337:98:39","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[200],"body":{"id":7136,"nodeType":"Block","src":"1619:31:39","statements":[{"expression":{"id":7134,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"1636:7:39","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":7133,"id":7135,"nodeType":"Return","src":"1629:14:39"}]},"documentation":{"id":7128,"nodeType":"StructuredDocumentation","src":"1441:102:39","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":7137,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1557:6:39","nodeType":"FunctionDefinition","overrides":{"id":7130,"nodeType":"OverrideSpecifier","overrides":[],"src":"1586:8:39"},"parameters":{"id":7129,"nodeType":"ParameterList","parameters":[],"src":"1563:2:39"},"returnParameters":{"id":7133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7137,"src":"1604:13:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7131,"name":"string","nodeType":"ElementaryTypeName","src":"1604:6:39","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1603:15:39"},"scope":7587,"src":"1548:102:39","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[206],"body":{"id":7146,"nodeType":"Block","src":"2339:26:39","statements":[{"expression":{"hexValue":"3138","id":7144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2356:2:39","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":7143,"id":7145,"nodeType":"Return","src":"2349:9:39"}]},"documentation":{"id":7138,"nodeType":"StructuredDocumentation","src":"1656:613:39","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":7147,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2283:8:39","nodeType":"FunctionDefinition","overrides":{"id":7140,"nodeType":"OverrideSpecifier","overrides":[],"src":"2314:8:39"},"parameters":{"id":7139,"nodeType":"ParameterList","parameters":[],"src":"2291:2:39"},"returnParameters":{"id":7143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7147,"src":"2332:5:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7141,"name":"uint8","nodeType":"ElementaryTypeName","src":"2332:5:39","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2331:7:39"},"scope":7587,"src":"2274:91:39","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[131],"body":{"id":7156,"nodeType":"Block","src":"2495:36:39","statements":[{"expression":{"id":7154,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"2512:12:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7153,"id":7155,"nodeType":"Return","src":"2505:19:39"}]},"documentation":{"id":7148,"nodeType":"StructuredDocumentation","src":"2371:49:39","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":7157,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2434:11:39","nodeType":"FunctionDefinition","overrides":{"id":7150,"nodeType":"OverrideSpecifier","overrides":[],"src":"2468:8:39"},"parameters":{"id":7149,"nodeType":"ParameterList","parameters":[],"src":"2445:2:39"},"returnParameters":{"id":7153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7157,"src":"2486:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7151,"name":"uint256","nodeType":"ElementaryTypeName","src":"2486:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2485:9:39"},"scope":7587,"src":"2425:106:39","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[139],"body":{"id":7170,"nodeType":"Block","src":"2672:42:39","statements":[{"expression":{"baseExpression":{"id":7166,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"2689:9:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7168,"indexExpression":{"id":7167,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7160,"src":"2699:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2689:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7165,"id":7169,"nodeType":"Return","src":"2682:25:39"}]},"documentation":{"id":7158,"nodeType":"StructuredDocumentation","src":"2537:47:39","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":7171,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2598:9:39","nodeType":"FunctionDefinition","overrides":{"id":7162,"nodeType":"OverrideSpecifier","overrides":[],"src":"2645:8:39"},"parameters":{"id":7161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7160,"mutability":"mutable","name":"account","nameLocation":"2616:7:39","nodeType":"VariableDeclaration","scope":7171,"src":"2608:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7159,"name":"address","nodeType":"ElementaryTypeName","src":"2608:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2607:17:39"},"returnParameters":{"id":7165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7171,"src":"2663:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7163,"name":"uint256","nodeType":"ElementaryTypeName","src":"2663:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2662:9:39"},"scope":7587,"src":"2589:125:39","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[149],"body":{"id":7195,"nodeType":"Block","src":"2995:104:39","statements":[{"assignments":[7183],"declarations":[{"constant":false,"id":7183,"mutability":"mutable","name":"owner","nameLocation":"3013:5:39","nodeType":"VariableDeclaration","scope":7195,"src":"3005:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7182,"name":"address","nodeType":"ElementaryTypeName","src":"3005:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7186,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7184,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3021:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3021:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3005:28:39"},{"expression":{"arguments":[{"id":7188,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"3053:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7189,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"3060:2:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7190,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"3064:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7187,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"3043:9:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3043:28:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7192,"nodeType":"ExpressionStatement","src":"3043:28:39"},{"expression":{"hexValue":"74727565","id":7193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3088:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7181,"id":7194,"nodeType":"Return","src":"3081:11:39"}]},"documentation":{"id":7172,"nodeType":"StructuredDocumentation","src":"2720:185:39","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":7196,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2919:8:39","nodeType":"FunctionDefinition","overrides":{"id":7178,"nodeType":"OverrideSpecifier","overrides":[],"src":"2971:8:39"},"parameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7174,"mutability":"mutable","name":"to","nameLocation":"2936:2:39","nodeType":"VariableDeclaration","scope":7196,"src":"2928:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7173,"name":"address","nodeType":"ElementaryTypeName","src":"2928:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7176,"mutability":"mutable","name":"amount","nameLocation":"2948:6:39","nodeType":"VariableDeclaration","scope":7196,"src":"2940:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7175,"name":"uint256","nodeType":"ElementaryTypeName","src":"2940:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2927:28:39"},"returnParameters":{"id":7181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7196,"src":"2989:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7179,"name":"bool","nodeType":"ElementaryTypeName","src":"2989:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2988:6:39"},"scope":7587,"src":"2910:189:39","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[159],"body":{"id":7213,"nodeType":"Block","src":"3255:51:39","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":7207,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"3272:11:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":7209,"indexExpression":{"id":7208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"3284:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3272:18:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7211,"indexExpression":{"id":7210,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"3291:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3272:27:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7206,"id":7212,"nodeType":"Return","src":"3265:34:39"}]},"documentation":{"id":7197,"nodeType":"StructuredDocumentation","src":"3105:47:39","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":7214,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3166:9:39","nodeType":"FunctionDefinition","overrides":{"id":7203,"nodeType":"OverrideSpecifier","overrides":[],"src":"3228:8:39"},"parameters":{"id":7202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7199,"mutability":"mutable","name":"owner","nameLocation":"3184:5:39","nodeType":"VariableDeclaration","scope":7214,"src":"3176:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7198,"name":"address","nodeType":"ElementaryTypeName","src":"3176:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7201,"mutability":"mutable","name":"spender","nameLocation":"3199:7:39","nodeType":"VariableDeclaration","scope":7214,"src":"3191:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7200,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3175:32:39"},"returnParameters":{"id":7206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7214,"src":"3246:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3245:9:39"},"scope":7587,"src":"3157:149:39","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[169],"body":{"id":7238,"nodeType":"Block","src":"3703:108:39","statements":[{"assignments":[7226],"declarations":[{"constant":false,"id":7226,"mutability":"mutable","name":"owner","nameLocation":"3721:5:39","nodeType":"VariableDeclaration","scope":7238,"src":"3713:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7225,"name":"address","nodeType":"ElementaryTypeName","src":"3713:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7229,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7227,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3729:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3729:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3713:28:39"},{"expression":{"arguments":[{"id":7231,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"3760:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7232,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"3767:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7233,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"3776:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7230,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"3751:8:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3751:32:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7235,"nodeType":"ExpressionStatement","src":"3751:32:39"},{"expression":{"hexValue":"74727565","id":7236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3800:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7224,"id":7237,"nodeType":"Return","src":"3793:11:39"}]},"documentation":{"id":7215,"nodeType":"StructuredDocumentation","src":"3312:297:39","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":7239,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3623:7:39","nodeType":"FunctionDefinition","overrides":{"id":7221,"nodeType":"OverrideSpecifier","overrides":[],"src":"3679:8:39"},"parameters":{"id":7220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7217,"mutability":"mutable","name":"spender","nameLocation":"3639:7:39","nodeType":"VariableDeclaration","scope":7239,"src":"3631:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7216,"name":"address","nodeType":"ElementaryTypeName","src":"3631:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7219,"mutability":"mutable","name":"amount","nameLocation":"3656:6:39","nodeType":"VariableDeclaration","scope":7239,"src":"3648:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3648:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:33:39"},"returnParameters":{"id":7224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7239,"src":"3697:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7222,"name":"bool","nodeType":"ElementaryTypeName","src":"3697:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3696:6:39"},"scope":7587,"src":"3614:197:39","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[181],"body":{"id":7271,"nodeType":"Block","src":"4506:153:39","statements":[{"assignments":[7253],"declarations":[{"constant":false,"id":7253,"mutability":"mutable","name":"spender","nameLocation":"4524:7:39","nodeType":"VariableDeclaration","scope":7271,"src":"4516:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7252,"name":"address","nodeType":"ElementaryTypeName","src":"4516:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7256,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7254,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4534:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4534:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4516:30:39"},{"expression":{"arguments":[{"id":7258,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"4572:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7259,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"4578:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7260,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"4587:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7257,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"4556:15:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4556:38:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7262,"nodeType":"ExpressionStatement","src":"4556:38:39"},{"expression":{"arguments":[{"id":7264,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"4614:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7265,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"4620:2:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7266,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"4624:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7263,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"4604:9:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4604:27:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7268,"nodeType":"ExpressionStatement","src":"4604:27:39"},{"expression":{"hexValue":"74727565","id":7269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4648:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7251,"id":7270,"nodeType":"Return","src":"4641:11:39"}]},"documentation":{"id":7240,"nodeType":"StructuredDocumentation","src":"3817:551:39","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":7272,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4382:12:39","nodeType":"FunctionDefinition","overrides":{"id":7248,"nodeType":"OverrideSpecifier","overrides":[],"src":"4482:8:39"},"parameters":{"id":7247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7242,"mutability":"mutable","name":"from","nameLocation":"4412:4:39","nodeType":"VariableDeclaration","scope":7272,"src":"4404:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7241,"name":"address","nodeType":"ElementaryTypeName","src":"4404:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7244,"mutability":"mutable","name":"to","nameLocation":"4434:2:39","nodeType":"VariableDeclaration","scope":7272,"src":"4426:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7243,"name":"address","nodeType":"ElementaryTypeName","src":"4426:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7246,"mutability":"mutable","name":"amount","nameLocation":"4454:6:39","nodeType":"VariableDeclaration","scope":7272,"src":"4446:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7245,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4394:72:39"},"returnParameters":{"id":7251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7272,"src":"4500:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7249,"name":"bool","nodeType":"ElementaryTypeName","src":"4500:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4499:6:39"},"scope":7587,"src":"4373:286:39","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":7300,"nodeType":"Block","src":"5148:140:39","statements":[{"assignments":[7283],"declarations":[{"constant":false,"id":7283,"mutability":"mutable","name":"owner","nameLocation":"5166:5:39","nodeType":"VariableDeclaration","scope":7300,"src":"5158:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7282,"name":"address","nodeType":"ElementaryTypeName","src":"5158:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7286,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7284,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5174:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5174:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5158:28:39"},{"expression":{"arguments":[{"id":7288,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"5205:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7289,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"5212:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7291,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"5231:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7292,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"5238:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7290,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"5221:9:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5221:25:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7294,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"5249:10:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5221:38:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7287,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"5196:8:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5196:64:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7297,"nodeType":"ExpressionStatement","src":"5196:64:39"},{"expression":{"hexValue":"74727565","id":7298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5277:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7281,"id":7299,"nodeType":"Return","src":"5270:11:39"}]},"documentation":{"id":7273,"nodeType":"StructuredDocumentation","src":"4665:384:39","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":7301,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5063:17:39","nodeType":"FunctionDefinition","parameters":{"id":7278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7275,"mutability":"mutable","name":"spender","nameLocation":"5089:7:39","nodeType":"VariableDeclaration","scope":7301,"src":"5081:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7274,"name":"address","nodeType":"ElementaryTypeName","src":"5081:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7277,"mutability":"mutable","name":"addedValue","nameLocation":"5106:10:39","nodeType":"VariableDeclaration","scope":7301,"src":"5098:18:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7276,"name":"uint256","nodeType":"ElementaryTypeName","src":"5098:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5080:37:39"},"returnParameters":{"id":7281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7301,"src":"5142:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7279,"name":"bool","nodeType":"ElementaryTypeName","src":"5142:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5141:6:39"},"scope":7587,"src":"5054:234:39","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":7341,"nodeType":"Block","src":"5874:328:39","statements":[{"assignments":[7312],"declarations":[{"constant":false,"id":7312,"mutability":"mutable","name":"owner","nameLocation":"5892:5:39","nodeType":"VariableDeclaration","scope":7341,"src":"5884:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7311,"name":"address","nodeType":"ElementaryTypeName","src":"5884:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7315,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7313,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5900:10:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5900:12:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5884:28:39"},{"assignments":[7317],"declarations":[{"constant":false,"id":7317,"mutability":"mutable","name":"currentAllowance","nameLocation":"5930:16:39","nodeType":"VariableDeclaration","scope":7341,"src":"5922:24:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5922:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7322,"initialValue":{"arguments":[{"id":7319,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"5959:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7320,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"5966:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7318,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"5949:9:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5949:25:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5922:52:39"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7324,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"5992:16:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7325,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"6012:15:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5992:35:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":7327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6029:39:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":7323,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5984:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5984:85:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7329,"nodeType":"ExpressionStatement","src":"5984:85:39"},{"id":7338,"nodeType":"UncheckedBlock","src":"6079:95:39","statements":[{"expression":{"arguments":[{"id":7331,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"6112:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7332,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"6119:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7333,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"6128:16:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7334,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"6147:15:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6128:34:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7330,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"6103:8:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6103:60:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7337,"nodeType":"ExpressionStatement","src":"6103:60:39"}]},{"expression":{"hexValue":"74727565","id":7339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6191:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7310,"id":7340,"nodeType":"Return","src":"6184:11:39"}]},"documentation":{"id":7302,"nodeType":"StructuredDocumentation","src":"5294:476:39","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":7342,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"5784:17:39","nodeType":"FunctionDefinition","parameters":{"id":7307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7304,"mutability":"mutable","name":"spender","nameLocation":"5810:7:39","nodeType":"VariableDeclaration","scope":7342,"src":"5802:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7303,"name":"address","nodeType":"ElementaryTypeName","src":"5802:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7306,"mutability":"mutable","name":"subtractedValue","nameLocation":"5827:15:39","nodeType":"VariableDeclaration","scope":7342,"src":"5819:23:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7305,"name":"uint256","nodeType":"ElementaryTypeName","src":"5819:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5801:42:39"},"returnParameters":{"id":7310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7342,"src":"5868:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7308,"name":"bool","nodeType":"ElementaryTypeName","src":"5868:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5867:6:39"},"scope":7587,"src":"5775:427:39","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":7418,"nodeType":"Block","src":"6764:710:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7353,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"6782:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6798:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6790:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7354,"name":"address","nodeType":"ElementaryTypeName","src":"6790:7:39","typeDescriptions":{}}},"id":7357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6790:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6782:18:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":7359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6802:39:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":7352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6774:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6774:68:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7361,"nodeType":"ExpressionStatement","src":"6774:68:39"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7363,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"6860:2:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6874:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6866:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7364,"name":"address","nodeType":"ElementaryTypeName","src":"6866:7:39","typeDescriptions":{}}},"id":7367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6866:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6860:16:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":7369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6878:37:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":7362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6852:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6852:64:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7371,"nodeType":"ExpressionStatement","src":"6852:64:39"},{"expression":{"arguments":[{"id":7373,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"6948:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7374,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"6954:2:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7375,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"6958:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7372,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"6927:20:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6927:38:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7377,"nodeType":"ExpressionStatement","src":"6927:38:39"},{"assignments":[7379],"declarations":[{"constant":false,"id":7379,"mutability":"mutable","name":"fromBalance","nameLocation":"6984:11:39","nodeType":"VariableDeclaration","scope":7418,"src":"6976:19:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7378,"name":"uint256","nodeType":"ElementaryTypeName","src":"6976:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7383,"initialValue":{"baseExpression":{"id":7380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"6998:9:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7382,"indexExpression":{"id":7381,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"7008:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6998:15:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6976:37:39"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7385,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"7031:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7386,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"7046:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:21:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":7388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7054:40:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":7384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7023:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7023:72:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7390,"nodeType":"ExpressionStatement","src":"7023:72:39"},{"id":7405,"nodeType":"UncheckedBlock","src":"7105:273:39","statements":[{"expression":{"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7391,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"7129:9:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7393,"indexExpression":{"id":7392,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"7139:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7129:15:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7394,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7379,"src":"7147:11:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7395,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"7161:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7147:20:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7129:38:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7398,"nodeType":"ExpressionStatement","src":"7129:38:39"},{"expression":{"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7399,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"7344:9:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7401,"indexExpression":{"id":7400,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"7354:2:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7344:13:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7402,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"7361:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7344:23:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7404,"nodeType":"ExpressionStatement","src":"7344:23:39"}]},{"eventCall":{"arguments":[{"id":7407,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"7402:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7408,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"7408:2:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7409,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"7412:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7406,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"7393:8:39","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7393:26:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7411,"nodeType":"EmitStatement","src":"7388:31:39"},{"expression":{"arguments":[{"id":7413,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7345,"src":"7450:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"7456:2:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7415,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"7460:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7412,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"7430:19:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7430:37:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7417,"nodeType":"ExpressionStatement","src":"7430:37:39"}]},"documentation":{"id":7343,"nodeType":"StructuredDocumentation","src":"6208:443:39","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":7419,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6665:9:39","nodeType":"FunctionDefinition","parameters":{"id":7350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7345,"mutability":"mutable","name":"from","nameLocation":"6692:4:39","nodeType":"VariableDeclaration","scope":7419,"src":"6684:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7344,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7347,"mutability":"mutable","name":"to","nameLocation":"6714:2:39","nodeType":"VariableDeclaration","scope":7419,"src":"6706:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7346,"name":"address","nodeType":"ElementaryTypeName","src":"6706:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7349,"mutability":"mutable","name":"amount","nameLocation":"6734:6:39","nodeType":"VariableDeclaration","scope":7419,"src":"6726:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7348,"name":"uint256","nodeType":"ElementaryTypeName","src":"6726:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6674:72:39"},"returnParameters":{"id":7351,"nodeType":"ParameterList","parameters":[],"src":"6764:0:39"},"scope":7587,"src":"6656:818:39","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7475,"nodeType":"Block","src":"7815:468:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7428,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"7833:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7852:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7844:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7429,"name":"address","nodeType":"ElementaryTypeName","src":"7844:7:39","typeDescriptions":{}}},"id":7432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7844:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7833:21:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":7434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7856:33:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":7427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7825:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7825:65:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7436,"nodeType":"ExpressionStatement","src":"7825:65:39"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":7440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7929:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7921:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7438,"name":"address","nodeType":"ElementaryTypeName","src":"7921:7:39","typeDescriptions":{}}},"id":7441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7921:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7442,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"7933:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7443,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"7942:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7437,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"7900:20:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7900:49:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7445,"nodeType":"ExpressionStatement","src":"7900:49:39"},{"expression":{"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7446,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"7959:12:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"7975:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7959:22:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7449,"nodeType":"ExpressionStatement","src":"7959:22:39"},{"id":7456,"nodeType":"UncheckedBlock","src":"7991:175:39","statements":[{"expression":{"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7450,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"8127:9:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7452,"indexExpression":{"id":7451,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"8137:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8127:18:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7453,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"8149:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8127:28:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7455,"nodeType":"ExpressionStatement","src":"8127:28:39"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":7460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8197:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8189:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7458,"name":"address","nodeType":"ElementaryTypeName","src":"8189:7:39","typeDescriptions":{}}},"id":7461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8189:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7462,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"8201:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7463,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"8210:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7457,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"8180:8:39","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8180:37:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7465,"nodeType":"EmitStatement","src":"8175:42:39"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":7469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8256:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8248:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7467,"name":"address","nodeType":"ElementaryTypeName","src":"8248:7:39","typeDescriptions":{}}},"id":7470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8248:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7471,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"8260:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7472,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"8269:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7466,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"8228:19:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8228:48:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7474,"nodeType":"ExpressionStatement","src":"8228:48:39"}]},"documentation":{"id":7420,"nodeType":"StructuredDocumentation","src":"7480:265:39","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":7476,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7759:5:39","nodeType":"FunctionDefinition","parameters":{"id":7425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7422,"mutability":"mutable","name":"account","nameLocation":"7773:7:39","nodeType":"VariableDeclaration","scope":7476,"src":"7765:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7421,"name":"address","nodeType":"ElementaryTypeName","src":"7765:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7424,"mutability":"mutable","name":"amount","nameLocation":"7790:6:39","nodeType":"VariableDeclaration","scope":7476,"src":"7782:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7423,"name":"uint256","nodeType":"ElementaryTypeName","src":"7782:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7764:33:39"},"returnParameters":{"id":7426,"nodeType":"ParameterList","parameters":[],"src":"7815:0:39"},"scope":7587,"src":"7750:533:39","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7520,"nodeType":"Block","src":"9134:257:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7487,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"9152:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9169:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9161:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7488,"name":"address","nodeType":"ElementaryTypeName","src":"9161:7:39","typeDescriptions":{}}},"id":7491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9161:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9152:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":7493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9173:38:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":7486,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9144:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9144:68:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7495,"nodeType":"ExpressionStatement","src":"9144:68:39"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7497,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7481,"src":"9230:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9249:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9241:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7498,"name":"address","nodeType":"ElementaryTypeName","src":"9241:7:39","typeDescriptions":{}}},"id":7501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9241:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9230:21:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":7503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9253:36:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":7496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9222:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9222:68:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7505,"nodeType":"ExpressionStatement","src":"9222:68:39"},{"expression":{"id":7512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7506,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"9301:11:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":7509,"indexExpression":{"id":7507,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"9313:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9301:18:39","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7510,"indexExpression":{"id":7508,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7481,"src":"9320:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9301:27:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7511,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7483,"src":"9331:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9301:36:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7513,"nodeType":"ExpressionStatement","src":"9301:36:39"},{"eventCall":{"arguments":[{"id":7515,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"9361:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7516,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7481,"src":"9368:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7517,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7483,"src":"9377:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7514,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"9352:8:39","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9352:32:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7519,"nodeType":"EmitStatement","src":"9347:37:39"}]},"documentation":{"id":7477,"nodeType":"StructuredDocumentation","src":"8604:412:39","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":7521,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9030:8:39","nodeType":"FunctionDefinition","parameters":{"id":7484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7479,"mutability":"mutable","name":"owner","nameLocation":"9056:5:39","nodeType":"VariableDeclaration","scope":7521,"src":"9048:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7478,"name":"address","nodeType":"ElementaryTypeName","src":"9048:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7481,"mutability":"mutable","name":"spender","nameLocation":"9079:7:39","nodeType":"VariableDeclaration","scope":7521,"src":"9071:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7480,"name":"address","nodeType":"ElementaryTypeName","src":"9071:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7483,"mutability":"mutable","name":"amount","nameLocation":"9104:6:39","nodeType":"VariableDeclaration","scope":7521,"src":"9096:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7482,"name":"uint256","nodeType":"ElementaryTypeName","src":"9096:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9038:78:39"},"returnParameters":{"id":7485,"nodeType":"ParameterList","parameters":[],"src":"9134:0:39"},"scope":7587,"src":"9021:370:39","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7563,"nodeType":"Block","src":"9792:321:39","statements":[{"assignments":[7532],"declarations":[{"constant":false,"id":7532,"mutability":"mutable","name":"currentAllowance","nameLocation":"9810:16:39","nodeType":"VariableDeclaration","scope":7563,"src":"9802:24:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7531,"name":"uint256","nodeType":"ElementaryTypeName","src":"9802:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7537,"initialValue":{"arguments":[{"id":7534,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"9839:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7535,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"9846:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7533,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"9829:9:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9829:25:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9802:52:39"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7538,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"9868:16:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":7541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9893:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7540,"name":"uint256","nodeType":"ElementaryTypeName","src":"9893:7:39","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":7539,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9888:4:39","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9888:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":7543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9888:17:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9868:37:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7562,"nodeType":"IfStatement","src":"9864:243:39","trueBody":{"id":7561,"nodeType":"Block","src":"9907:200:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7546,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"9929:16:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7547,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"9949:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9929:26:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":7549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9957:31:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":7545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9921:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9921:68:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7551,"nodeType":"ExpressionStatement","src":"9921:68:39"},{"id":7560,"nodeType":"UncheckedBlock","src":"10003:94:39","statements":[{"expression":{"arguments":[{"id":7553,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7524,"src":"10040:5:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7554,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"10047:7:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7555,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"10056:16:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7556,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"10075:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10056:25:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7552,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"10031:8:39","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10031:51:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7559,"nodeType":"ExpressionStatement","src":"10031:51:39"}]}]}}]},"documentation":{"id":7522,"nodeType":"StructuredDocumentation","src":"9397:270:39","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":7564,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"9681:15:39","nodeType":"FunctionDefinition","parameters":{"id":7529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7524,"mutability":"mutable","name":"owner","nameLocation":"9714:5:39","nodeType":"VariableDeclaration","scope":7564,"src":"9706:13:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7523,"name":"address","nodeType":"ElementaryTypeName","src":"9706:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7526,"mutability":"mutable","name":"spender","nameLocation":"9737:7:39","nodeType":"VariableDeclaration","scope":7564,"src":"9729:15:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7525,"name":"address","nodeType":"ElementaryTypeName","src":"9729:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7528,"mutability":"mutable","name":"amount","nameLocation":"9762:6:39","nodeType":"VariableDeclaration","scope":7564,"src":"9754:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7527,"name":"uint256","nodeType":"ElementaryTypeName","src":"9754:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9696:78:39"},"returnParameters":{"id":7530,"nodeType":"ParameterList","parameters":[],"src":"9792:0:39"},"scope":7587,"src":"9672:441:39","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7574,"nodeType":"Block","src":"10816:2:39","statements":[]},"documentation":{"id":7565,"nodeType":"StructuredDocumentation","src":"10119:573:39","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":7575,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"10706:20:39","nodeType":"FunctionDefinition","parameters":{"id":7572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7567,"mutability":"mutable","name":"from","nameLocation":"10744:4:39","nodeType":"VariableDeclaration","scope":7575,"src":"10736:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7566,"name":"address","nodeType":"ElementaryTypeName","src":"10736:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7569,"mutability":"mutable","name":"to","nameLocation":"10766:2:39","nodeType":"VariableDeclaration","scope":7575,"src":"10758:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7568,"name":"address","nodeType":"ElementaryTypeName","src":"10758:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7571,"mutability":"mutable","name":"amount","nameLocation":"10786:6:39","nodeType":"VariableDeclaration","scope":7575,"src":"10778:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7570,"name":"uint256","nodeType":"ElementaryTypeName","src":"10778:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10726:72:39"},"returnParameters":{"id":7573,"nodeType":"ParameterList","parameters":[],"src":"10816:0:39"},"scope":7587,"src":"10697:121:39","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7585,"nodeType":"Block","src":"11524:2:39","statements":[]},"documentation":{"id":7576,"nodeType":"StructuredDocumentation","src":"10824:577:39","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":7586,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"11415:19:39","nodeType":"FunctionDefinition","parameters":{"id":7583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7578,"mutability":"mutable","name":"from","nameLocation":"11452:4:39","nodeType":"VariableDeclaration","scope":7586,"src":"11444:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7577,"name":"address","nodeType":"ElementaryTypeName","src":"11444:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7580,"mutability":"mutable","name":"to","nameLocation":"11474:2:39","nodeType":"VariableDeclaration","scope":7586,"src":"11466:10:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7579,"name":"address","nodeType":"ElementaryTypeName","src":"11466:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7582,"mutability":"mutable","name":"amount","nameLocation":"11494:6:39","nodeType":"VariableDeclaration","scope":7586,"src":"11486:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7581,"name":"uint256","nodeType":"ElementaryTypeName","src":"11486:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11434:72:39"},"returnParameters":{"id":7584,"nodeType":"ParameterList","parameters":[],"src":"11524:0:39"},"scope":7587,"src":"11406:120:39","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":7588,"src":"364:11164:39","usedErrors":[]}],"src":"102:11426:39"},"id":39}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":757,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":760,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2790,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":240,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":360,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":757,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":760,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":739,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":757,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":760,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf7db9b91442fb9426403fda8893b60444066d9682f2913e14a96f12196afb96e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2bd84e37357b89a4f19dee68a5b8667083d4b85681b36bf7eda2d38d8c162a6\",\"dweb:/ipfs/QmULmgN6yaoax1wA66SffeJCkZijDSugu4GGD8DSWLLxQN\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":757,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":760,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":739,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1054,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":757,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":760,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2790,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1076,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":1181,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061124e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d14565b60405180910390f35b6100e660048036038101906100e19190610b62565b610308565b6040516100f39190610cf9565b60405180910390f35b61010461032b565b6040516101119190610e16565b60405180910390f35b610134600480360381019061012f9190610b13565b610335565b6040516101419190610cf9565b60405180910390f35b610152610364565b60405161015f9190610e31565b60405180910390f35b610182600480360381019061017d9190610b62565b61036d565b60405161018f9190610cf9565b60405180910390f35b6101b260048036038101906101ad9190610aae565b6103a4565b6040516101bf9190610e16565b60405180910390f35b6101d06103ed565b6040516101dd9190610d14565b60405180910390f35b61020060048036038101906101fb9190610b62565b61047f565b60405161020d9190610cf9565b60405180910390f35b610230600480360381019061022b9190610b62565b6104f6565b60405161023d9190610cf9565b60405180910390f35b610260600480360381019061025b9190610ad7565b610519565b60405161026d9190610e16565b60405180910390f35b60606036805461028590610f46565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f46565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105a0565b90506103208185856105a8565b600191505092915050565b6000603554905090565b6000806103406105a0565b905061034d858285610773565b6103588585856107ff565b60019150509392505050565b60006012905090565b6000806103786105a0565b905061039981858561038a8589610519565b6103949190610e68565b6105a8565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546103fc90610f46565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610f46565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60008061048a6105a0565b905060006104988286610519565b9050838110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610df6565b60405180910390fd5b6104ea82868684036105a8565b60019250505092915050565b6000806105016105a0565b905061050e8185856107ff565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90610dd6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90610d56565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107669190610e16565b60405180910390a3505050565b600061077f8484610519565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f957818110156107eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e290610d76565b60405180910390fd5b6107f884848484036105a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690610db6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d690610d36565b60405180910390fd5b6108ea838383610a7a565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610971576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096890610d96565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a619190610e16565b60405180910390a3610a74848484610a7f565b50505050565b505050565b505050565b600081359050610a93816111ea565b92915050565b600081359050610aa881611201565b92915050565b600060208284031215610ac057600080fd5b6000610ace84828501610a84565b91505092915050565b60008060408385031215610aea57600080fd5b6000610af885828601610a84565b9250506020610b0985828601610a84565b9150509250929050565b600080600060608486031215610b2857600080fd5b6000610b3686828701610a84565b9350506020610b4786828701610a84565b9250506040610b5886828701610a99565b9150509250925092565b60008060408385031215610b7557600080fd5b6000610b8385828601610a84565b9250506020610b9485828601610a99565b9150509250929050565b610ba781610ed0565b82525050565b6000610bb882610e4c565b610bc28185610e57565b9350610bd2818560208601610f13565b610bdb81610fd6565b840191505092915050565b6000610bf3602383610e57565b9150610bfe82610fe7565b604082019050919050565b6000610c16602283610e57565b9150610c2182611036565b604082019050919050565b6000610c39601d83610e57565b9150610c4482611085565b602082019050919050565b6000610c5c602683610e57565b9150610c67826110ae565b604082019050919050565b6000610c7f602583610e57565b9150610c8a826110fd565b604082019050919050565b6000610ca2602483610e57565b9150610cad8261114c565b604082019050919050565b6000610cc5602583610e57565b9150610cd08261119b565b604082019050919050565b610ce481610efc565b82525050565b610cf381610f06565b82525050565b6000602082019050610d0e6000830184610b9e565b92915050565b60006020820190508181036000830152610d2e8184610bad565b905092915050565b60006020820190508181036000830152610d4f81610be6565b9050919050565b60006020820190508181036000830152610d6f81610c09565b9050919050565b60006020820190508181036000830152610d8f81610c2c565b9050919050565b60006020820190508181036000830152610daf81610c4f565b9050919050565b60006020820190508181036000830152610dcf81610c72565b9050919050565b60006020820190508181036000830152610def81610c95565b9050919050565b60006020820190508181036000830152610e0f81610cb8565b9050919050565b6000602082019050610e2b6000830184610cdb565b92915050565b6000602082019050610e466000830184610cea565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7382610efc565b9150610e7e83610efc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eb357610eb2610f78565b5b828201905092915050565b6000610ec982610edc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f31578082015181840152602081019050610f16565b83811115610f40576000848401525b50505050565b60006002820490506001821680610f5e57607f821691505b60208210811415610f7257610f71610fa7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6111f381610ebe565b81146111fe57600080fd5b50565b61120a81610efc565b811461121557600080fd5b5056fea2646970667358221220d2aab79fe1035ab8fa774d4342b228d9b590a222f69b8911f0336adb6491bd2864736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF46 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF46 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x773 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xF46 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xF46 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48A PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x498 DUP3 DUP7 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x501 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77F DUP5 DUP5 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EA DUP4 DUP4 DUP4 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA61 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA74 DUP5 DUP5 DUP5 PUSH2 0xA7F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA93 DUP2 PUSH2 0x11EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA8 DUP2 PUSH2 0x1201 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP5 DUP3 DUP6 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAF8 DUP6 DUP3 DUP7 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB09 DUP6 DUP3 DUP7 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB36 DUP7 DUP3 DUP8 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB47 DUP7 DUP3 DUP8 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB58 DUP7 DUP3 DUP8 ADD PUSH2 0xA99 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB83 DUP6 DUP3 DUP7 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB94 DUP6 DUP3 DUP7 ADD PUSH2 0xA99 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA7 DUP2 PUSH2 0xED0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB8 DUP3 PUSH2 0xE4C JUMP JUMPDEST PUSH2 0xBC2 DUP2 DUP6 PUSH2 0xE57 JUMP JUMPDEST SWAP4 POP PUSH2 0xBD2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF13 JUMP JUMPDEST PUSH2 0xBDB DUP2 PUSH2 0xFD6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF3 PUSH1 0x23 DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFE DUP3 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC16 PUSH1 0x22 DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xC21 DUP3 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC39 PUSH1 0x1D DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xC44 DUP3 PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5C PUSH1 0x26 DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xC67 DUP3 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7F PUSH1 0x25 DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xC8A DUP3 PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA2 PUSH1 0x24 DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xCAD DUP3 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC5 PUSH1 0x25 DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD0 DUP3 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE4 DUP2 PUSH2 0xEFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCF3 DUP2 PUSH2 0xF06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD2E DUP2 DUP5 PUSH2 0xBAD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD4F DUP2 PUSH2 0xBE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD6F DUP2 PUSH2 0xC09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD8F DUP2 PUSH2 0xC2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDAF DUP2 PUSH2 0xC4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDCF DUP2 PUSH2 0xC72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDEF DUP2 PUSH2 0xC95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE0F DUP2 PUSH2 0xCB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE2B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE46 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE73 DUP3 PUSH2 0xEFC JUMP JUMPDEST SWAP2 POP PUSH2 0xE7E DUP4 PUSH2 0xEFC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xEB2 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC9 DUP3 PUSH2 0xEDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF31 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF16 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF40 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF5E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF72 JUMPI PUSH2 0xF71 PUSH2 0xFA7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x11F3 DUP2 PUSH2 0xEBE JUMP JUMPDEST DUP2 EQ PUSH2 0x11FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x120A DUP2 PUSH2 0xEFC JUMP JUMPDEST DUP2 EQ PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xAA 0xB7 SWAP16 0xE1 SUB GAS 0xB8 STATICCALL PUSH24 0x4D4342B228D9B590A222F69B8911F0336ADB6491BD286473 PUSH16 0x6C634300080400330000000000000000 ","sourceMap":"1485:12159:11:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13266:40","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:40","statements":[{"nodeType":"YulAssignment","src":"69:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:40"},"nodeType":"YulFunctionCall","src":"78:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:40"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:40"},"nodeType":"YulFunctionCall","src":"107:33:40"},"nodeType":"YulExpressionStatement","src":"107:33:40"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:40","type":""}],"src":"7:139:40"},{"body":{"nodeType":"YulBlock","src":"204:87:40","statements":[{"nodeType":"YulAssignment","src":"214:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:40"},"nodeType":"YulFunctionCall","src":"223:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:40"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"252:26:40"},"nodeType":"YulFunctionCall","src":"252:33:40"},"nodeType":"YulExpressionStatement","src":"252:33:40"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:40","type":""}],"src":"152:139:40"},{"body":{"nodeType":"YulBlock","src":"363:196:40","statements":[{"body":{"nodeType":"YulBlock","src":"409:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"418:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"421:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"411:6:40"},"nodeType":"YulFunctionCall","src":"411:12:40"},"nodeType":"YulExpressionStatement","src":"411:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"384:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"393:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"380:3:40"},"nodeType":"YulFunctionCall","src":"380:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"405:2:40","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"376:3:40"},"nodeType":"YulFunctionCall","src":"376:32:40"},"nodeType":"YulIf","src":"373:2:40"},{"nodeType":"YulBlock","src":"435:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"450:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"464:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"454:6:40","type":""}]},{"nodeType":"YulAssignment","src":"479:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"514:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"525:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"510:3:40"},"nodeType":"YulFunctionCall","src":"510:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"534:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"489:20:40"},"nodeType":"YulFunctionCall","src":"489:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"479:6:40"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"333:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"344:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"356:6:40","type":""}],"src":"297:262:40"},{"body":{"nodeType":"YulBlock","src":"648:324:40","statements":[{"body":{"nodeType":"YulBlock","src":"694:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"706:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"696:6:40"},"nodeType":"YulFunctionCall","src":"696:12:40"},"nodeType":"YulExpressionStatement","src":"696:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"669:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"678:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"665:3:40"},"nodeType":"YulFunctionCall","src":"665:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"690:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"661:3:40"},"nodeType":"YulFunctionCall","src":"661:32:40"},"nodeType":"YulIf","src":"658:2:40"},{"nodeType":"YulBlock","src":"720:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"735:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"749:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"739:6:40","type":""}]},{"nodeType":"YulAssignment","src":"764:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"799:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"810:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"795:3:40"},"nodeType":"YulFunctionCall","src":"795:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"819:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"774:20:40"},"nodeType":"YulFunctionCall","src":"774:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"764:6:40"}]}]},{"nodeType":"YulBlock","src":"847:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"862:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"876:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"866:6:40","type":""}]},{"nodeType":"YulAssignment","src":"892:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"927:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"938:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"923:3:40"},"nodeType":"YulFunctionCall","src":"923:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"947:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"902:20:40"},"nodeType":"YulFunctionCall","src":"902:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"892:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"610:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"621:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"633:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"641:6:40","type":""}],"src":"565:407:40"},{"body":{"nodeType":"YulBlock","src":"1078:452:40","statements":[{"body":{"nodeType":"YulBlock","src":"1124:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1133:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1136:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1126:6:40"},"nodeType":"YulFunctionCall","src":"1126:12:40"},"nodeType":"YulExpressionStatement","src":"1126:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1099:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"1108:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1095:3:40"},"nodeType":"YulFunctionCall","src":"1095:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"1120:2:40","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:40"},"nodeType":"YulFunctionCall","src":"1091:32:40"},"nodeType":"YulIf","src":"1088:2:40"},{"nodeType":"YulBlock","src":"1150:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1165:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1179:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1169:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1194:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1229:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1240:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1225:3:40"},"nodeType":"YulFunctionCall","src":"1225:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1249:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1204:20:40"},"nodeType":"YulFunctionCall","src":"1204:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1194:6:40"}]}]},{"nodeType":"YulBlock","src":"1277:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1292:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1306:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1296:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1322:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1368:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1353:3:40"},"nodeType":"YulFunctionCall","src":"1353:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1377:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1332:20:40"},"nodeType":"YulFunctionCall","src":"1332:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1322:6:40"}]}]},{"nodeType":"YulBlock","src":"1405:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1420:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1434:2:40","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1424:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1450:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1485:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1496:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1481:3:40"},"nodeType":"YulFunctionCall","src":"1481:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1505:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1460:20:40"},"nodeType":"YulFunctionCall","src":"1460:53:40"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1450:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1032:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1043:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1055:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1063:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1071:6:40","type":""}],"src":"978:552:40"},{"body":{"nodeType":"YulBlock","src":"1619:324:40","statements":[{"body":{"nodeType":"YulBlock","src":"1665:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1674:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1677:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1667:6:40"},"nodeType":"YulFunctionCall","src":"1667:12:40"},"nodeType":"YulExpressionStatement","src":"1667:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1640:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"1649:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1636:3:40"},"nodeType":"YulFunctionCall","src":"1636:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"1661:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1632:3:40"},"nodeType":"YulFunctionCall","src":"1632:32:40"},"nodeType":"YulIf","src":"1629:2:40"},{"nodeType":"YulBlock","src":"1691:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1706:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1720:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1710:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1735:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1770:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1781:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1766:3:40"},"nodeType":"YulFunctionCall","src":"1766:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1790:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1745:20:40"},"nodeType":"YulFunctionCall","src":"1745:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1735:6:40"}]}]},{"nodeType":"YulBlock","src":"1818:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1833:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1847:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1837:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1863:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1898:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1909:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1894:3:40"},"nodeType":"YulFunctionCall","src":"1894:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1918:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1873:20:40"},"nodeType":"YulFunctionCall","src":"1873:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1863:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1581:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1592:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1604:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1612:6:40","type":""}],"src":"1536:407:40"},{"body":{"nodeType":"YulBlock","src":"2008:50:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2025:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2045:5:40"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2030:14:40"},"nodeType":"YulFunctionCall","src":"2030:21:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2018:6:40"},"nodeType":"YulFunctionCall","src":"2018:34:40"},"nodeType":"YulExpressionStatement","src":"2018:34:40"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1996:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2003:3:40","type":""}],"src":"1949:109:40"},{"body":{"nodeType":"YulBlock","src":"2156:272:40","statements":[{"nodeType":"YulVariableDeclaration","src":"2166:53:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:40"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2180:32:40"},"nodeType":"YulFunctionCall","src":"2180:39:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2170:6:40","type":""}]},{"nodeType":"YulAssignment","src":"2228:78:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2294:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"2299:6:40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2235:58:40"},"nodeType":"YulFunctionCall","src":"2235:71:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2228:3:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2341:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"2348:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2337:3:40"},"nodeType":"YulFunctionCall","src":"2337:16:40"},{"name":"pos","nodeType":"YulIdentifier","src":"2355:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"2360:6:40"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2315:21:40"},"nodeType":"YulFunctionCall","src":"2315:52:40"},"nodeType":"YulExpressionStatement","src":"2315:52:40"},{"nodeType":"YulAssignment","src":"2376:46:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2387:3:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2414:6:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2392:21:40"},"nodeType":"YulFunctionCall","src":"2392:29:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2383:3:40"},"nodeType":"YulFunctionCall","src":"2383:39:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2376:3:40"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2137:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2144:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2152:3:40","type":""}],"src":"2064:364:40"},{"body":{"nodeType":"YulBlock","src":"2580:220:40","statements":[{"nodeType":"YulAssignment","src":"2590:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2656:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"2661:2:40","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2597:58:40"},"nodeType":"YulFunctionCall","src":"2597:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2590:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2762:3:40"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"2673:88:40"},"nodeType":"YulFunctionCall","src":"2673:93:40"},"nodeType":"YulExpressionStatement","src":"2673:93:40"},{"nodeType":"YulAssignment","src":"2775:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2786:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"2791:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2782:3:40"},"nodeType":"YulFunctionCall","src":"2782:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2775:3:40"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2568:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2576:3:40","type":""}],"src":"2434:366:40"},{"body":{"nodeType":"YulBlock","src":"2952:220:40","statements":[{"nodeType":"YulAssignment","src":"2962:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3028:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3033:2:40","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2969:58:40"},"nodeType":"YulFunctionCall","src":"2969:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2962:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3134:3:40"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"3045:88:40"},"nodeType":"YulFunctionCall","src":"3045:93:40"},"nodeType":"YulExpressionStatement","src":"3045:93:40"},{"nodeType":"YulAssignment","src":"3147:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3158:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3163:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3154:3:40"},"nodeType":"YulFunctionCall","src":"3154:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3147:3:40"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2940:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2948:3:40","type":""}],"src":"2806:366:40"},{"body":{"nodeType":"YulBlock","src":"3324:220:40","statements":[{"nodeType":"YulAssignment","src":"3334:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3400:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3405:2:40","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3341:58:40"},"nodeType":"YulFunctionCall","src":"3341:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3334:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3506:3:40"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"3417:88:40"},"nodeType":"YulFunctionCall","src":"3417:93:40"},"nodeType":"YulExpressionStatement","src":"3417:93:40"},{"nodeType":"YulAssignment","src":"3519:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3530:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3535:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3526:3:40"},"nodeType":"YulFunctionCall","src":"3526:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3519:3:40"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3312:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3320:3:40","type":""}],"src":"3178:366:40"},{"body":{"nodeType":"YulBlock","src":"3696:220:40","statements":[{"nodeType":"YulAssignment","src":"3706:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3772:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3777:2:40","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3713:58:40"},"nodeType":"YulFunctionCall","src":"3713:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3706:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3878:3:40"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"3789:88:40"},"nodeType":"YulFunctionCall","src":"3789:93:40"},"nodeType":"YulExpressionStatement","src":"3789:93:40"},{"nodeType":"YulAssignment","src":"3891:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3902:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3907:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3898:3:40"},"nodeType":"YulFunctionCall","src":"3898:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3891:3:40"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3684:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3692:3:40","type":""}],"src":"3550:366:40"},{"body":{"nodeType":"YulBlock","src":"4068:220:40","statements":[{"nodeType":"YulAssignment","src":"4078:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4144:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4149:2:40","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4085:58:40"},"nodeType":"YulFunctionCall","src":"4085:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4078:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4250:3:40"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"4161:88:40"},"nodeType":"YulFunctionCall","src":"4161:93:40"},"nodeType":"YulExpressionStatement","src":"4161:93:40"},{"nodeType":"YulAssignment","src":"4263:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4274:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4279:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4270:3:40"},"nodeType":"YulFunctionCall","src":"4270:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4263:3:40"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4056:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4064:3:40","type":""}],"src":"3922:366:40"},{"body":{"nodeType":"YulBlock","src":"4440:220:40","statements":[{"nodeType":"YulAssignment","src":"4450:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4516:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4521:2:40","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4457:58:40"},"nodeType":"YulFunctionCall","src":"4457:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4450:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4622:3:40"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"4533:88:40"},"nodeType":"YulFunctionCall","src":"4533:93:40"},"nodeType":"YulExpressionStatement","src":"4533:93:40"},{"nodeType":"YulAssignment","src":"4635:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4646:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4651:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4642:3:40"},"nodeType":"YulFunctionCall","src":"4642:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4635:3:40"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4428:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4436:3:40","type":""}],"src":"4294:366:40"},{"body":{"nodeType":"YulBlock","src":"4812:220:40","statements":[{"nodeType":"YulAssignment","src":"4822:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4888:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4893:2:40","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4829:58:40"},"nodeType":"YulFunctionCall","src":"4829:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4822:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4994:3:40"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"4905:88:40"},"nodeType":"YulFunctionCall","src":"4905:93:40"},"nodeType":"YulExpressionStatement","src":"4905:93:40"},{"nodeType":"YulAssignment","src":"5007:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"5023:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5014:3:40"},"nodeType":"YulFunctionCall","src":"5014:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5007:3:40"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4800:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4808:3:40","type":""}],"src":"4666:366:40"},{"body":{"nodeType":"YulBlock","src":"5103:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5120:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5143:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5125:17:40"},"nodeType":"YulFunctionCall","src":"5125:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5113:6:40"},"nodeType":"YulFunctionCall","src":"5113:37:40"},"nodeType":"YulExpressionStatement","src":"5113:37:40"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5091:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5098:3:40","type":""}],"src":"5038:118:40"},{"body":{"nodeType":"YulBlock","src":"5223:51:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5240:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5261:5:40"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5245:15:40"},"nodeType":"YulFunctionCall","src":"5245:22:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5233:6:40"},"nodeType":"YulFunctionCall","src":"5233:35:40"},"nodeType":"YulExpressionStatement","src":"5233:35:40"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5211:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5218:3:40","type":""}],"src":"5162:112:40"},{"body":{"nodeType":"YulBlock","src":"5372:118:40","statements":[{"nodeType":"YulAssignment","src":"5382:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5394:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5405:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5390:3:40"},"nodeType":"YulFunctionCall","src":"5390:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5382:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5456:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5469:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5480:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5465:3:40"},"nodeType":"YulFunctionCall","src":"5465:17:40"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5418:37:40"},"nodeType":"YulFunctionCall","src":"5418:65:40"},"nodeType":"YulExpressionStatement","src":"5418:65:40"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5344:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5356:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5367:4:40","type":""}],"src":"5280:210:40"},{"body":{"nodeType":"YulBlock","src":"5614:195:40","statements":[{"nodeType":"YulAssignment","src":"5624:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5636:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5647:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5632:3:40"},"nodeType":"YulFunctionCall","src":"5632:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5624:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5671:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5682:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5667:3:40"},"nodeType":"YulFunctionCall","src":"5667:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5690:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"5696:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5686:3:40"},"nodeType":"YulFunctionCall","src":"5686:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5660:6:40"},"nodeType":"YulFunctionCall","src":"5660:47:40"},"nodeType":"YulExpressionStatement","src":"5660:47:40"},{"nodeType":"YulAssignment","src":"5716:86:40","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5788:6:40"},{"name":"tail","nodeType":"YulIdentifier","src":"5797:4:40"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5724:63:40"},"nodeType":"YulFunctionCall","src":"5724:78:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5716:4:40"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5586:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5598:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5609:4:40","type":""}],"src":"5496:313:40"},{"body":{"nodeType":"YulBlock","src":"5986:248:40","statements":[{"nodeType":"YulAssignment","src":"5996:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6008:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6019:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6004:3:40"},"nodeType":"YulFunctionCall","src":"6004:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5996:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6043:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6054:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6039:3:40"},"nodeType":"YulFunctionCall","src":"6039:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6062:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"6068:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6058:3:40"},"nodeType":"YulFunctionCall","src":"6058:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6032:6:40"},"nodeType":"YulFunctionCall","src":"6032:47:40"},"nodeType":"YulExpressionStatement","src":"6032:47:40"},{"nodeType":"YulAssignment","src":"6088:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6222:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6096:124:40"},"nodeType":"YulFunctionCall","src":"6096:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6088:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5966:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5981:4:40","type":""}],"src":"5815:419:40"},{"body":{"nodeType":"YulBlock","src":"6411:248:40","statements":[{"nodeType":"YulAssignment","src":"6421:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6433:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6444:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6429:3:40"},"nodeType":"YulFunctionCall","src":"6429:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6421:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6468:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6479:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6464:3:40"},"nodeType":"YulFunctionCall","src":"6464:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6487:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"6493:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6483:3:40"},"nodeType":"YulFunctionCall","src":"6483:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6457:6:40"},"nodeType":"YulFunctionCall","src":"6457:47:40"},"nodeType":"YulExpressionStatement","src":"6457:47:40"},{"nodeType":"YulAssignment","src":"6513:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6647:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6521:124:40"},"nodeType":"YulFunctionCall","src":"6521:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6513:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6391:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6406:4:40","type":""}],"src":"6240:419:40"},{"body":{"nodeType":"YulBlock","src":"6836:248:40","statements":[{"nodeType":"YulAssignment","src":"6846:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6858:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6869:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6854:3:40"},"nodeType":"YulFunctionCall","src":"6854:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6846:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6893:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6904:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6889:3:40"},"nodeType":"YulFunctionCall","src":"6889:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6912:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"6918:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6908:3:40"},"nodeType":"YulFunctionCall","src":"6908:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6882:6:40"},"nodeType":"YulFunctionCall","src":"6882:47:40"},"nodeType":"YulExpressionStatement","src":"6882:47:40"},{"nodeType":"YulAssignment","src":"6938:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7072:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6946:124:40"},"nodeType":"YulFunctionCall","src":"6946:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6938:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6816:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6831:4:40","type":""}],"src":"6665:419:40"},{"body":{"nodeType":"YulBlock","src":"7261:248:40","statements":[{"nodeType":"YulAssignment","src":"7271:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7283:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"7294:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7279:3:40"},"nodeType":"YulFunctionCall","src":"7279:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7271:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7318:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"7329:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7314:3:40"},"nodeType":"YulFunctionCall","src":"7314:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7337:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"7343:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7333:3:40"},"nodeType":"YulFunctionCall","src":"7333:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7307:6:40"},"nodeType":"YulFunctionCall","src":"7307:47:40"},"nodeType":"YulExpressionStatement","src":"7307:47:40"},{"nodeType":"YulAssignment","src":"7363:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7497:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7371:124:40"},"nodeType":"YulFunctionCall","src":"7371:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7363:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7241:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7256:4:40","type":""}],"src":"7090:419:40"},{"body":{"nodeType":"YulBlock","src":"7686:248:40","statements":[{"nodeType":"YulAssignment","src":"7696:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7708:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"7719:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7704:3:40"},"nodeType":"YulFunctionCall","src":"7704:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7696:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7743:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"7754:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7739:3:40"},"nodeType":"YulFunctionCall","src":"7739:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7762:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"7768:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7758:3:40"},"nodeType":"YulFunctionCall","src":"7758:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7732:6:40"},"nodeType":"YulFunctionCall","src":"7732:47:40"},"nodeType":"YulExpressionStatement","src":"7732:47:40"},{"nodeType":"YulAssignment","src":"7788:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7922:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7796:124:40"},"nodeType":"YulFunctionCall","src":"7796:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7788:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7666:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7681:4:40","type":""}],"src":"7515:419:40"},{"body":{"nodeType":"YulBlock","src":"8111:248:40","statements":[{"nodeType":"YulAssignment","src":"8121:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8133:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8144:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8129:3:40"},"nodeType":"YulFunctionCall","src":"8129:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8121:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8168:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8179:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8164:3:40"},"nodeType":"YulFunctionCall","src":"8164:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8187:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"8193:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8183:3:40"},"nodeType":"YulFunctionCall","src":"8183:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8157:6:40"},"nodeType":"YulFunctionCall","src":"8157:47:40"},"nodeType":"YulExpressionStatement","src":"8157:47:40"},{"nodeType":"YulAssignment","src":"8213:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8347:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8221:124:40"},"nodeType":"YulFunctionCall","src":"8221:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8213:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8091:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8106:4:40","type":""}],"src":"7940:419:40"},{"body":{"nodeType":"YulBlock","src":"8536:248:40","statements":[{"nodeType":"YulAssignment","src":"8546:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8558:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8569:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8554:3:40"},"nodeType":"YulFunctionCall","src":"8554:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8546:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8593:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8604:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8589:3:40"},"nodeType":"YulFunctionCall","src":"8589:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8612:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"8618:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8608:3:40"},"nodeType":"YulFunctionCall","src":"8608:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8582:6:40"},"nodeType":"YulFunctionCall","src":"8582:47:40"},"nodeType":"YulExpressionStatement","src":"8582:47:40"},{"nodeType":"YulAssignment","src":"8638:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8772:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8646:124:40"},"nodeType":"YulFunctionCall","src":"8646:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8638:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8516:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8531:4:40","type":""}],"src":"8365:419:40"},{"body":{"nodeType":"YulBlock","src":"8888:124:40","statements":[{"nodeType":"YulAssignment","src":"8898:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8910:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8921:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8906:3:40"},"nodeType":"YulFunctionCall","src":"8906:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8898:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8978:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8991:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9002:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8987:3:40"},"nodeType":"YulFunctionCall","src":"8987:17:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8934:43:40"},"nodeType":"YulFunctionCall","src":"8934:71:40"},"nodeType":"YulExpressionStatement","src":"8934:71:40"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8860:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8872:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8883:4:40","type":""}],"src":"8790:222:40"},{"body":{"nodeType":"YulBlock","src":"9112:120:40","statements":[{"nodeType":"YulAssignment","src":"9122:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9134:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9145:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9130:3:40"},"nodeType":"YulFunctionCall","src":"9130:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9122:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9198:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9211:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9222:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9207:3:40"},"nodeType":"YulFunctionCall","src":"9207:17:40"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"9158:39:40"},"nodeType":"YulFunctionCall","src":"9158:67:40"},"nodeType":"YulExpressionStatement","src":"9158:67:40"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9084:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9096:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9107:4:40","type":""}],"src":"9018:214:40"},{"body":{"nodeType":"YulBlock","src":"9297:40:40","statements":[{"nodeType":"YulAssignment","src":"9308:22:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9324:5:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9318:5:40"},"nodeType":"YulFunctionCall","src":"9318:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9308:6:40"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9280:5:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9290:6:40","type":""}],"src":"9238:99:40"},{"body":{"nodeType":"YulBlock","src":"9439:73:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9456:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"9461:6:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9449:6:40"},"nodeType":"YulFunctionCall","src":"9449:19:40"},"nodeType":"YulExpressionStatement","src":"9449:19:40"},{"nodeType":"YulAssignment","src":"9477:29:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9496:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"9501:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9492:3:40"},"nodeType":"YulFunctionCall","src":"9492:14:40"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9477:11:40"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9411:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"9416:6:40","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9427:11:40","type":""}],"src":"9343:169:40"},{"body":{"nodeType":"YulBlock","src":"9562:261:40","statements":[{"nodeType":"YulAssignment","src":"9572:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9595:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9577:17:40"},"nodeType":"YulFunctionCall","src":"9577:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9572:1:40"}]},{"nodeType":"YulAssignment","src":"9606:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9629:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9611:17:40"},"nodeType":"YulFunctionCall","src":"9611:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9606:1:40"}]},{"body":{"nodeType":"YulBlock","src":"9769:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9771:16:40"},"nodeType":"YulFunctionCall","src":"9771:18:40"},"nodeType":"YulExpressionStatement","src":"9771:18:40"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9690:1:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9697:66:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"9765:1:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9693:3:40"},"nodeType":"YulFunctionCall","src":"9693:74:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9687:2:40"},"nodeType":"YulFunctionCall","src":"9687:81:40"},"nodeType":"YulIf","src":"9684:2:40"},{"nodeType":"YulAssignment","src":"9801:16:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9812:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"9815:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9808:3:40"},"nodeType":"YulFunctionCall","src":"9808:9:40"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9801:3:40"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9549:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"9552:1:40","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9558:3:40","type":""}],"src":"9518:305:40"},{"body":{"nodeType":"YulBlock","src":"9874:51:40","statements":[{"nodeType":"YulAssignment","src":"9884:35:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9913:5:40"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9895:17:40"},"nodeType":"YulFunctionCall","src":"9895:24:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9884:7:40"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9856:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9866:7:40","type":""}],"src":"9829:96:40"},{"body":{"nodeType":"YulBlock","src":"9973:48:40","statements":[{"nodeType":"YulAssignment","src":"9983:32:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10008:5:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10001:6:40"},"nodeType":"YulFunctionCall","src":"10001:13:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9994:6:40"},"nodeType":"YulFunctionCall","src":"9994:21:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9983:7:40"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9955:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9965:7:40","type":""}],"src":"9931:90:40"},{"body":{"nodeType":"YulBlock","src":"10072:81:40","statements":[{"nodeType":"YulAssignment","src":"10082:65:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10097:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"10104:42:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10093:3:40"},"nodeType":"YulFunctionCall","src":"10093:54:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10082:7:40"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10054:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10064:7:40","type":""}],"src":"10027:126:40"},{"body":{"nodeType":"YulBlock","src":"10204:32:40","statements":[{"nodeType":"YulAssignment","src":"10214:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"10225:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10214:7:40"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10186:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10196:7:40","type":""}],"src":"10159:77:40"},{"body":{"nodeType":"YulBlock","src":"10285:43:40","statements":[{"nodeType":"YulAssignment","src":"10295:27:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10310:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"10317:4:40","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10306:3:40"},"nodeType":"YulFunctionCall","src":"10306:16:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10295:7:40"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10267:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10277:7:40","type":""}],"src":"10242:86:40"},{"body":{"nodeType":"YulBlock","src":"10383:258:40","statements":[{"nodeType":"YulVariableDeclaration","src":"10393:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"10402:1:40","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10397:1:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"10462:63:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10487:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"10492:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10483:3:40"},"nodeType":"YulFunctionCall","src":"10483:11:40"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10506:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"10511:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10502:3:40"},"nodeType":"YulFunctionCall","src":"10502:11:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10496:5:40"},"nodeType":"YulFunctionCall","src":"10496:18:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10476:6:40"},"nodeType":"YulFunctionCall","src":"10476:39:40"},"nodeType":"YulExpressionStatement","src":"10476:39:40"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10423:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"10426:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10420:2:40"},"nodeType":"YulFunctionCall","src":"10420:13:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10434:19:40","statements":[{"nodeType":"YulAssignment","src":"10436:15:40","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10445:1:40"},{"kind":"number","nodeType":"YulLiteral","src":"10448:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10441:3:40"},"nodeType":"YulFunctionCall","src":"10441:10:40"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10436:1:40"}]}]},"pre":{"nodeType":"YulBlock","src":"10416:3:40","statements":[]},"src":"10412:113:40"},{"body":{"nodeType":"YulBlock","src":"10559:76:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10609:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"10614:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10605:3:40"},"nodeType":"YulFunctionCall","src":"10605:16:40"},{"kind":"number","nodeType":"YulLiteral","src":"10623:1:40","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10598:6:40"},"nodeType":"YulFunctionCall","src":"10598:27:40"},"nodeType":"YulExpressionStatement","src":"10598:27:40"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10540:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"10543:6:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10537:2:40"},"nodeType":"YulFunctionCall","src":"10537:13:40"},"nodeType":"YulIf","src":"10534:2:40"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10365:3:40","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10370:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"10375:6:40","type":""}],"src":"10334:307:40"},{"body":{"nodeType":"YulBlock","src":"10698:269:40","statements":[{"nodeType":"YulAssignment","src":"10708:22:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10722:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"10728:1:40","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10718:3:40"},"nodeType":"YulFunctionCall","src":"10718:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10708:6:40"}]},{"nodeType":"YulVariableDeclaration","src":"10739:38:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10769:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"10775:1:40","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10765:3:40"},"nodeType":"YulFunctionCall","src":"10765:12:40"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10743:18:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"10816:51:40","statements":[{"nodeType":"YulAssignment","src":"10830:27:40","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10844:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"10852:4:40","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10840:3:40"},"nodeType":"YulFunctionCall","src":"10840:17:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10830:6:40"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10796:18:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10789:6:40"},"nodeType":"YulFunctionCall","src":"10789:26:40"},"nodeType":"YulIf","src":"10786:2:40"},{"body":{"nodeType":"YulBlock","src":"10919:42:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10933:16:40"},"nodeType":"YulFunctionCall","src":"10933:18:40"},"nodeType":"YulExpressionStatement","src":"10933:18:40"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10883:18:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10906:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"10914:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10903:2:40"},"nodeType":"YulFunctionCall","src":"10903:14:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10880:2:40"},"nodeType":"YulFunctionCall","src":"10880:38:40"},"nodeType":"YulIf","src":"10877:2:40"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10682:4:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10691:6:40","type":""}],"src":"10647:320:40"},{"body":{"nodeType":"YulBlock","src":"11001:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11018:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11021:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11011:6:40"},"nodeType":"YulFunctionCall","src":"11011:88:40"},"nodeType":"YulExpressionStatement","src":"11011:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11115:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11118:4:40","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11108:6:40"},"nodeType":"YulFunctionCall","src":"11108:15:40"},"nodeType":"YulExpressionStatement","src":"11108:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11139:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11142:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11132:6:40"},"nodeType":"YulFunctionCall","src":"11132:15:40"},"nodeType":"YulExpressionStatement","src":"11132:15:40"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10973:180:40"},{"body":{"nodeType":"YulBlock","src":"11187:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11204:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11207:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11197:6:40"},"nodeType":"YulFunctionCall","src":"11197:88:40"},"nodeType":"YulExpressionStatement","src":"11197:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11301:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11304:4:40","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11294:6:40"},"nodeType":"YulFunctionCall","src":"11294:15:40"},"nodeType":"YulExpressionStatement","src":"11294:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11325:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11328:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11318:6:40"},"nodeType":"YulFunctionCall","src":"11318:15:40"},"nodeType":"YulExpressionStatement","src":"11318:15:40"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"11159:180:40"},{"body":{"nodeType":"YulBlock","src":"11393:54:40","statements":[{"nodeType":"YulAssignment","src":"11403:38:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11421:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:40","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11417:3:40"},"nodeType":"YulFunctionCall","src":"11417:14:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11437:2:40","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11433:3:40"},"nodeType":"YulFunctionCall","src":"11433:7:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11413:3:40"},"nodeType":"YulFunctionCall","src":"11413:28:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11403:6:40"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11376:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11386:6:40","type":""}],"src":"11345:102:40"},{"body":{"nodeType":"YulBlock","src":"11559:116:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11581:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"11589:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11577:3:40"},"nodeType":"YulFunctionCall","src":"11577:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"11593:34:40","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11570:6:40"},"nodeType":"YulFunctionCall","src":"11570:58:40"},"nodeType":"YulExpressionStatement","src":"11570:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11649:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"11657:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11645:3:40"},"nodeType":"YulFunctionCall","src":"11645:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"11662:5:40","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11638:6:40"},"nodeType":"YulFunctionCall","src":"11638:30:40"},"nodeType":"YulExpressionStatement","src":"11638:30:40"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11551:6:40","type":""}],"src":"11453:222:40"},{"body":{"nodeType":"YulBlock","src":"11787:115:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11809:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"11817:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11805:3:40"},"nodeType":"YulFunctionCall","src":"11805:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"11821:34:40","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11798:6:40"},"nodeType":"YulFunctionCall","src":"11798:58:40"},"nodeType":"YulExpressionStatement","src":"11798:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11877:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"11885:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11873:3:40"},"nodeType":"YulFunctionCall","src":"11873:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"11890:4:40","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11866:6:40"},"nodeType":"YulFunctionCall","src":"11866:29:40"},"nodeType":"YulExpressionStatement","src":"11866:29:40"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11779:6:40","type":""}],"src":"11681:221:40"},{"body":{"nodeType":"YulBlock","src":"12014:73:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12036:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12044:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12032:3:40"},"nodeType":"YulFunctionCall","src":"12032:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"12048:31:40","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12025:6:40"},"nodeType":"YulFunctionCall","src":"12025:55:40"},"nodeType":"YulExpressionStatement","src":"12025:55:40"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12006:6:40","type":""}],"src":"11908:179:40"},{"body":{"nodeType":"YulBlock","src":"12199:119:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12221:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12229:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12217:3:40"},"nodeType":"YulFunctionCall","src":"12217:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"12233:34:40","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12210:6:40"},"nodeType":"YulFunctionCall","src":"12210:58:40"},"nodeType":"YulExpressionStatement","src":"12210:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12289:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12297:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12285:3:40"},"nodeType":"YulFunctionCall","src":"12285:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"12302:8:40","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12278:6:40"},"nodeType":"YulFunctionCall","src":"12278:33:40"},"nodeType":"YulExpressionStatement","src":"12278:33:40"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12191:6:40","type":""}],"src":"12093:225:40"},{"body":{"nodeType":"YulBlock","src":"12430:118:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12452:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12460:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12448:3:40"},"nodeType":"YulFunctionCall","src":"12448:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"12464:34:40","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12441:6:40"},"nodeType":"YulFunctionCall","src":"12441:58:40"},"nodeType":"YulExpressionStatement","src":"12441:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12520:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12528:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12516:3:40"},"nodeType":"YulFunctionCall","src":"12516:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"12533:7:40","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12509:6:40"},"nodeType":"YulFunctionCall","src":"12509:32:40"},"nodeType":"YulExpressionStatement","src":"12509:32:40"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12422:6:40","type":""}],"src":"12324:224:40"},{"body":{"nodeType":"YulBlock","src":"12660:117:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12682:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12690:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12678:3:40"},"nodeType":"YulFunctionCall","src":"12678:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"12694:34:40","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12671:6:40"},"nodeType":"YulFunctionCall","src":"12671:58:40"},"nodeType":"YulExpressionStatement","src":"12671:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12750:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12758:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12746:3:40"},"nodeType":"YulFunctionCall","src":"12746:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"12763:6:40","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12739:6:40"},"nodeType":"YulFunctionCall","src":"12739:31:40"},"nodeType":"YulExpressionStatement","src":"12739:31:40"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12652:6:40","type":""}],"src":"12554:223:40"},{"body":{"nodeType":"YulBlock","src":"12889:118:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12911:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12919:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12907:3:40"},"nodeType":"YulFunctionCall","src":"12907:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"12923:34:40","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12900:6:40"},"nodeType":"YulFunctionCall","src":"12900:58:40"},"nodeType":"YulExpressionStatement","src":"12900:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12979:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12987:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12975:3:40"},"nodeType":"YulFunctionCall","src":"12975:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"12992:7:40","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12968:6:40"},"nodeType":"YulFunctionCall","src":"12968:32:40"},"nodeType":"YulExpressionStatement","src":"12968:32:40"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12881:6:40","type":""}],"src":"12783:224:40"},{"body":{"nodeType":"YulBlock","src":"13056:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"13113:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13122:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13125:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13115:6:40"},"nodeType":"YulFunctionCall","src":"13115:12:40"},"nodeType":"YulExpressionStatement","src":"13115:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13079:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13104:5:40"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13086:17:40"},"nodeType":"YulFunctionCall","src":"13086:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13076:2:40"},"nodeType":"YulFunctionCall","src":"13076:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13069:6:40"},"nodeType":"YulFunctionCall","src":"13069:43:40"},"nodeType":"YulIf","src":"13066:2:40"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13049:5:40","type":""}],"src":"13013:122:40"},{"body":{"nodeType":"YulBlock","src":"13184:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"13241:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13250:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13253:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13243:6:40"},"nodeType":"YulFunctionCall","src":"13243:12:40"},"nodeType":"YulExpressionStatement","src":"13243:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13207:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13232:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13214:17:40"},"nodeType":"YulFunctionCall","src":"13214:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13204:2:40"},"nodeType":"YulFunctionCall","src":"13204:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13197:6:40"},"nodeType":"YulFunctionCall","src":"13197:43:40"},"nodeType":"YulIf","src":"13194:2:40"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13177:5:40","type":""}],"src":"13141:122:40"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":40,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d14565b60405180910390f35b6100e660048036038101906100e19190610b62565b610308565b6040516100f39190610cf9565b60405180910390f35b61010461032b565b6040516101119190610e16565b60405180910390f35b610134600480360381019061012f9190610b13565b610335565b6040516101419190610cf9565b60405180910390f35b610152610364565b60405161015f9190610e31565b60405180910390f35b610182600480360381019061017d9190610b62565b61036d565b60405161018f9190610cf9565b60405180910390f35b6101b260048036038101906101ad9190610aae565b6103a4565b6040516101bf9190610e16565b60405180910390f35b6101d06103ed565b6040516101dd9190610d14565b60405180910390f35b61020060048036038101906101fb9190610b62565b61047f565b60405161020d9190610cf9565b60405180910390f35b610230600480360381019061022b9190610b62565b6104f6565b60405161023d9190610cf9565b60405180910390f35b610260600480360381019061025b9190610ad7565b610519565b60405161026d9190610e16565b60405180910390f35b60606036805461028590610f46565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f46565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105a0565b90506103208185856105a8565b600191505092915050565b6000603554905090565b6000806103406105a0565b905061034d858285610773565b6103588585856107ff565b60019150509392505050565b60006012905090565b6000806103786105a0565b905061039981858561038a8589610519565b6103949190610e68565b6105a8565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546103fc90610f46565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610f46565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60008061048a6105a0565b905060006104988286610519565b9050838110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610df6565b60405180910390fd5b6104ea82868684036105a8565b60019250505092915050565b6000806105016105a0565b905061050e8185856107ff565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060f90610dd6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90610d56565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107669190610e16565b60405180910390a3505050565b600061077f8484610519565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f957818110156107eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e290610d76565b60405180910390fd5b6107f884848484036105a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690610db6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d690610d36565b60405180910390fd5b6108ea838383610a7a565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610971576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096890610d96565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a619190610e16565b60405180910390a3610a74848484610a7f565b50505050565b505050565b505050565b600081359050610a93816111ea565b92915050565b600081359050610aa881611201565b92915050565b600060208284031215610ac057600080fd5b6000610ace84828501610a84565b91505092915050565b60008060408385031215610aea57600080fd5b6000610af885828601610a84565b9250506020610b0985828601610a84565b9150509250929050565b600080600060608486031215610b2857600080fd5b6000610b3686828701610a84565b9350506020610b4786828701610a84565b9250506040610b5886828701610a99565b9150509250925092565b60008060408385031215610b7557600080fd5b6000610b8385828601610a84565b9250506020610b9485828601610a99565b9150509250929050565b610ba781610ed0565b82525050565b6000610bb882610e4c565b610bc28185610e57565b9350610bd2818560208601610f13565b610bdb81610fd6565b840191505092915050565b6000610bf3602383610e57565b9150610bfe82610fe7565b604082019050919050565b6000610c16602283610e57565b9150610c2182611036565b604082019050919050565b6000610c39601d83610e57565b9150610c4482611085565b602082019050919050565b6000610c5c602683610e57565b9150610c67826110ae565b604082019050919050565b6000610c7f602583610e57565b9150610c8a826110fd565b604082019050919050565b6000610ca2602483610e57565b9150610cad8261114c565b604082019050919050565b6000610cc5602583610e57565b9150610cd08261119b565b604082019050919050565b610ce481610efc565b82525050565b610cf381610f06565b82525050565b6000602082019050610d0e6000830184610b9e565b92915050565b60006020820190508181036000830152610d2e8184610bad565b905092915050565b60006020820190508181036000830152610d4f81610be6565b9050919050565b60006020820190508181036000830152610d6f81610c09565b9050919050565b60006020820190508181036000830152610d8f81610c2c565b9050919050565b60006020820190508181036000830152610daf81610c4f565b9050919050565b60006020820190508181036000830152610dcf81610c72565b9050919050565b60006020820190508181036000830152610def81610c95565b9050919050565b60006020820190508181036000830152610e0f81610cb8565b9050919050565b6000602082019050610e2b6000830184610cdb565b92915050565b6000602082019050610e466000830184610cea565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7382610efc565b9150610e7e83610efc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eb357610eb2610f78565b5b828201905092915050565b6000610ec982610edc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f31578082015181840152602081019050610f16565b83811115610f40576000848401525b50505050565b60006002820490506001821680610f5e57607f821691505b60208210811415610f7257610f71610fa7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6111f381610ebe565b81146111fe57600080fd5b50565b61120a81610efc565b811461121557600080fd5b5056fea2646970667358221220d2aab79fe1035ab8fa774d4342b228d9b590a222f69b8911f0336adb6491bd2864736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAAE JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB62 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF46 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF46 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x773 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xF46 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xF46 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48A PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x498 DUP3 DUP7 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x501 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77F DUP5 DUP5 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EA DUP4 DUP4 DUP4 PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP1 PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA61 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA74 DUP5 DUP5 DUP5 PUSH2 0xA7F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA93 DUP2 PUSH2 0x11EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA8 DUP2 PUSH2 0x1201 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP5 DUP3 DUP6 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAF8 DUP6 DUP3 DUP7 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB09 DUP6 DUP3 DUP7 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB36 DUP7 DUP3 DUP8 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB47 DUP7 DUP3 DUP8 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB58 DUP7 DUP3 DUP8 ADD PUSH2 0xA99 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB83 DUP6 DUP3 DUP7 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB94 DUP6 DUP3 DUP7 ADD PUSH2 0xA99 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA7 DUP2 PUSH2 0xED0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB8 DUP3 PUSH2 0xE4C JUMP JUMPDEST PUSH2 0xBC2 DUP2 DUP6 PUSH2 0xE57 JUMP JUMPDEST SWAP4 POP PUSH2 0xBD2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF13 JUMP JUMPDEST PUSH2 0xBDB DUP2 PUSH2 0xFD6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF3 PUSH1 0x23 DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFE DUP3 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC16 PUSH1 0x22 DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xC21 DUP3 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC39 PUSH1 0x1D DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xC44 DUP3 PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5C PUSH1 0x26 DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xC67 DUP3 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7F PUSH1 0x25 DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xC8A DUP3 PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA2 PUSH1 0x24 DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xCAD DUP3 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC5 PUSH1 0x25 DUP4 PUSH2 0xE57 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD0 DUP3 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE4 DUP2 PUSH2 0xEFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCF3 DUP2 PUSH2 0xF06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD2E DUP2 DUP5 PUSH2 0xBAD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD4F DUP2 PUSH2 0xBE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD6F DUP2 PUSH2 0xC09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD8F DUP2 PUSH2 0xC2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDAF DUP2 PUSH2 0xC4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDCF DUP2 PUSH2 0xC72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDEF DUP2 PUSH2 0xC95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE0F DUP2 PUSH2 0xCB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE2B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE46 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE73 DUP3 PUSH2 0xEFC JUMP JUMPDEST SWAP2 POP PUSH2 0xE7E DUP4 PUSH2 0xEFC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xEB2 PUSH2 0xF78 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC9 DUP3 PUSH2 0xEDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF31 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF16 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF40 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF5E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF72 JUMPI PUSH2 0xF71 PUSH2 0xFA7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x11F3 DUP2 PUSH2 0xEBE JUMP JUMPDEST DUP2 EQ PUSH2 0x11FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x120A DUP2 PUSH2 0xEFC JUMP JUMPDEST DUP2 EQ PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xAA 0xB7 SWAP16 0xE1 SUB GAS 0xB8 STATICCALL PUSH24 0x4D4342B228D9B590A222F69B8911F0336ADB6491BD286473 PUSH16 0x6C634300080400330000000000000000 ","sourceMap":"1485:12159:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2496:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4773:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3584:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5532:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3433:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6213:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3748:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6934:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4069:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4316:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2496:98;2550:13;2582:5;2575:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2496:98;:::o;4773:197::-;4856:4;4872:13;4888:12;:10;:12::i;:::-;4872:28;;4910:32;4919:5;4926:7;4935:6;4910:8;:32::i;:::-;4959:4;4952:11;;;4773:197;;;;:::o;3584:106::-;3645:7;3671:12;;3664:19;;3584:106;:::o;5532:286::-;5659:4;5675:15;5693:12;:10;:12::i;:::-;5675:30;;5715:38;5731:4;5737:7;5746:6;5715:15;:38::i;:::-;5763:27;5773:4;5779:2;5783:6;5763:9;:27::i;:::-;5807:4;5800:11;;;5532:286;;;;;:::o;3433:91::-;3491:5;3515:2;3508:9;;3433:91;:::o;6213:234::-;6301:4;6317:13;6333:12;:10;:12::i;:::-;6317:28;;6355:64;6364:5;6371:7;6408:10;6380:25;6390:5;6397:7;6380:9;:25::i;:::-;:38;;;;:::i;:::-;6355:8;:64::i;:::-;6436:4;6429:11;;;6213:234;;;;:::o;3748:125::-;3822:7;3848:9;:18;3858:7;3848:18;;;;;;;;;;;;;;;;3841:25;;3748:125;;;:::o;2707:102::-;2763:13;2795:7;2788:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2707:102;:::o;6934:427::-;7027:4;7043:13;7059:12;:10;:12::i;:::-;7043:28;;7081:24;7108:25;7118:5;7125:7;7108:9;:25::i;:::-;7081:52;;7171:15;7151:16;:35;;7143:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7262:60;7271:5;7278:7;7306:15;7287:16;:34;7262:8;:60::i;:::-;7350:4;7343:11;;;;6934:427;;;;:::o;4069:189::-;4148:4;4164:13;4180:12;:10;:12::i;:::-;4164:28;;4202;4212:5;4219:2;4223:6;4202:9;:28::i;:::-;4247:4;4240:11;;;4069:189;;;;:::o;4316:149::-;4405:7;4431:11;:18;4443:5;4431:18;;;;;;;;;;;;;;;:27;4450:7;4431:27;;;;;;;;;;;;;;;;4424:34;;4316:149;;;;:::o;850:96:18:-;903:7;929:10;922:17;;850:96;:::o;10846:370:11:-;10994:1;10977:19;;:5;:19;;;;10969:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11074:1;11055:21;;:7;:21;;;;11047:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11156:6;11126:11;:18;11138:5;11126:18;;;;;;;;;;;;;;;:27;11145:7;11126:27;;;;;;;;;;;;;;;:36;;;;11193:7;11177:32;;11186:5;11177:32;;;11202:6;11177:32;;;;;;:::i;:::-;;;;;;;;10846:370;;;:::o;11497:441::-;11627:24;11654:25;11664:5;11671:7;11654:9;:25::i;:::-;11627:52;;11713:17;11693:16;:37;11689:243;;11774:6;11754:16;:26;;11746:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11856:51;11865:5;11872:7;11900:6;11881:16;:25;11856:8;:51::i;:::-;11689:243;11497:441;;;;:::o;7815:818::-;7957:1;7941:18;;:4;:18;;;;7933:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8033:1;8019:16;;:2;:16;;;;8011:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8086:38;8107:4;8113:2;8117:6;8086:20;:38::i;:::-;8135:19;8157:9;:15;8167:4;8157:15;;;;;;;;;;;;;;;;8135:37;;8205:6;8190:11;:21;;8182:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8320:6;8306:11;:20;8288:9;:15;8298:4;8288:15;;;;;;;;;;;;;;;:38;;;;8520:6;8503:9;:13;8513:2;8503:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8567:2;8552:26;;8561:4;8552:26;;;8571:6;8552:26;;;;;;:::i;:::-;;;;;;;;8589:37;8609:4;8615:2;8619:6;8589:19;:37::i;:::-;7815:818;;;;:::o;12522:121::-;;;;:::o;13231:120::-;;;;:::o;7:139:40:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;633:6;641;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;1055:6;1063;1071;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;1604:6;1612;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:364::-;2152:3;2180:39;2213:5;2180:39;:::i;:::-;2235:71;2299:6;2294:3;2235:71;:::i;:::-;2228:78;;2315:52;2360:6;2355:3;2348:4;2341:5;2337:16;2315:52;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2156:272;;;;;:::o;2434:366::-;2576:3;2597:67;2661:2;2656:3;2597:67;:::i;:::-;2590:74;;2673:93;2762:3;2673:93;:::i;:::-;2791:2;2786:3;2782:12;2775:19;;2580:220;;;:::o;2806:366::-;2948:3;2969:67;3033:2;3028:3;2969:67;:::i;:::-;2962:74;;3045:93;3134:3;3045:93;:::i;:::-;3163:2;3158:3;3154:12;3147:19;;2952:220;;;:::o;3178:366::-;3320:3;3341:67;3405:2;3400:3;3341:67;:::i;:::-;3334:74;;3417:93;3506:3;3417:93;:::i;:::-;3535:2;3530:3;3526:12;3519:19;;3324:220;;;:::o;3550:366::-;3692:3;3713:67;3777:2;3772:3;3713:67;:::i;:::-;3706:74;;3789:93;3878:3;3789:93;:::i;:::-;3907:2;3902:3;3898:12;3891:19;;3696:220;;;:::o;3922:366::-;4064:3;4085:67;4149:2;4144:3;4085:67;:::i;:::-;4078:74;;4161:93;4250:3;4161:93;:::i;:::-;4279:2;4274:3;4270:12;4263:19;;4068:220;;;:::o;4294:366::-;4436:3;4457:67;4521:2;4516:3;4457:67;:::i;:::-;4450:74;;4533:93;4622:3;4533:93;:::i;:::-;4651:2;4646:3;4642:12;4635:19;;4440:220;;;:::o;4666:366::-;4808:3;4829:67;4893:2;4888:3;4829:67;:::i;:::-;4822:74;;4905:93;4994:3;4905:93;:::i;:::-;5023:2;5018:3;5014:12;5007:19;;4812:220;;;:::o;5038:118::-;5125:24;5143:5;5125:24;:::i;:::-;5120:3;5113:37;5103:53;;:::o;5162:112::-;5245:22;5261:5;5245:22;:::i;:::-;5240:3;5233:35;5223:51;;:::o;5280:210::-;5367:4;5405:2;5394:9;5390:18;5382:26;;5418:65;5480:1;5469:9;5465:17;5456:6;5418:65;:::i;:::-;5372:118;;;;:::o;5496:313::-;5609:4;5647:2;5636:9;5632:18;5624:26;;5696:9;5690:4;5686:20;5682:1;5671:9;5667:17;5660:47;5724:78;5797:4;5788:6;5724:78;:::i;:::-;5716:86;;5614:195;;;;:::o;5815:419::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6068:9;6062:4;6058:20;6054:1;6043:9;6039:17;6032:47;6096:131;6222:4;6096:131;:::i;:::-;6088:139;;5986:248;;;:::o;6240:419::-;6406:4;6444:2;6433:9;6429:18;6421:26;;6493:9;6487:4;6483:20;6479:1;6468:9;6464:17;6457:47;6521:131;6647:4;6521:131;:::i;:::-;6513:139;;6411:248;;;:::o;6665:419::-;6831:4;6869:2;6858:9;6854:18;6846:26;;6918:9;6912:4;6908:20;6904:1;6893:9;6889:17;6882:47;6946:131;7072:4;6946:131;:::i;:::-;6938:139;;6836:248;;;:::o;7090:419::-;7256:4;7294:2;7283:9;7279:18;7271:26;;7343:9;7337:4;7333:20;7329:1;7318:9;7314:17;7307:47;7371:131;7497:4;7371:131;:::i;:::-;7363:139;;7261:248;;;:::o;7515:419::-;7681:4;7719:2;7708:9;7704:18;7696:26;;7768:9;7762:4;7758:20;7754:1;7743:9;7739:17;7732:47;7796:131;7922:4;7796:131;:::i;:::-;7788:139;;7686:248;;;:::o;7940:419::-;8106:4;8144:2;8133:9;8129:18;8121:26;;8193:9;8187:4;8183:20;8179:1;8168:9;8164:17;8157:47;8221:131;8347:4;8221:131;:::i;:::-;8213:139;;8111:248;;;:::o;8365:419::-;8531:4;8569:2;8558:9;8554:18;8546:26;;8618:9;8612:4;8608:20;8604:1;8593:9;8589:17;8582:47;8646:131;8772:4;8646:131;:::i;:::-;8638:139;;8536:248;;;:::o;8790:222::-;8883:4;8921:2;8910:9;8906:18;8898:26;;8934:71;9002:1;8991:9;8987:17;8978:6;8934:71;:::i;:::-;8888:124;;;;:::o;9018:214::-;9107:4;9145:2;9134:9;9130:18;9122:26;;9158:67;9222:1;9211:9;9207:17;9198:6;9158:67;:::i;:::-;9112:120;;;;:::o;9238:99::-;9290:6;9324:5;9318:12;9308:22;;9297:40;;;:::o;9343:169::-;9427:11;9461:6;9456:3;9449:19;9501:4;9496:3;9492:14;9477:29;;9439:73;;;;:::o;9518:305::-;9558:3;9577:20;9595:1;9577:20;:::i;:::-;9572:25;;9611:20;9629:1;9611:20;:::i;:::-;9606:25;;9765:1;9697:66;9693:74;9690:1;9687:81;9684:2;;;9771:18;;:::i;:::-;9684:2;9815:1;9812;9808:9;9801:16;;9562:261;;;;:::o;9829:96::-;9866:7;9895:24;9913:5;9895:24;:::i;:::-;9884:35;;9874:51;;;:::o;9931:90::-;9965:7;10008:5;10001:13;9994:21;9983:32;;9973:48;;;:::o;10027:126::-;10064:7;10104:42;10097:5;10093:54;10082:65;;10072:81;;;:::o;10159:77::-;10196:7;10225:5;10214:16;;10204:32;;;:::o;10242:86::-;10277:7;10317:4;10310:5;10306:16;10295:27;;10285:43;;;:::o;10334:307::-;10402:1;10412:113;10426:6;10423:1;10420:13;10412:113;;;10511:1;10506:3;10502:11;10496:18;10492:1;10487:3;10483:11;10476:39;10448:2;10445:1;10441:10;10436:15;;10412:113;;;10543:6;10540:1;10537:13;10534:2;;;10623:1;10614:6;10609:3;10605:16;10598:27;10534:2;10383:258;;;;:::o;10647:320::-;10691:6;10728:1;10722:4;10718:12;10708:22;;10775:1;10769:4;10765:12;10796:18;10786:2;;10852:4;10844:6;10840:17;10830:27;;10786:2;10914;10906:6;10903:14;10883:18;10880:38;10877:2;;;10933:18;;:::i;:::-;10877:2;10698:269;;;;:::o;10973:180::-;11021:77;11018:1;11011:88;11118:4;11115:1;11108:15;11142:4;11139:1;11132:15;11159:180;11207:77;11204:1;11197:88;11304:4;11301:1;11294:15;11328:4;11325:1;11318:15;11345:102;11386:6;11437:2;11433:7;11428:2;11421:5;11417:14;11413:28;11403:38;;11393:54;;;:::o;11453:222::-;11593:34;11589:1;11581:6;11577:14;11570:58;11662:5;11657:2;11649:6;11645:15;11638:30;11559:116;:::o;11681:221::-;11821:34;11817:1;11809:6;11805:14;11798:58;11890:4;11885:2;11877:6;11873:15;11866:29;11787:115;:::o;11908:179::-;12048:31;12044:1;12036:6;12032:14;12025:55;12014:73;:::o;12093:225::-;12233:34;12229:1;12221:6;12217:14;12210:58;12302:8;12297:2;12289:6;12285:15;12278:33;12199:119;:::o;12324:224::-;12464:34;12460:1;12452:6;12448:14;12441:58;12533:7;12528:2;12520:6;12516:15;12509:32;12430:118;:::o;12554:223::-;12694:34;12690:1;12682:6;12678:14;12671:58;12763:6;12758:2;12750:6;12746:15;12739:31;12660:117;:::o;12783:224::-;12923:34;12919:1;12911:6;12907:14;12900:58;12992:7;12987:2;12979:6;12975:15;12968:32;12889:118;:::o;13013:122::-;13086:24;13104:5;13086:24;:::i;:::-;13079:5;13076:35;13066:2;;13125:1;13122;13115:12;13066:2;13056:79;:::o;13141:122::-;13214:24;13232:5;13214:24;:::i;:::-;13207:5;13204:35;13194:2;;13253:1;13250;13243:12;13194:2;13184:79;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x49dc49ecb70251b262769f4cd54fea0e6714d84e30b2737885c76194c285b452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://151164eab6481d161ba4e4908a9810faebfe784f5f4eeffb1219a6e7865384b9\",\"dweb:/ipfs/QmesjesP7AJFkZHx1XXkdTvGgfzYu5AkC4CTsGFjNYV7XZ\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":757,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":760,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2790,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1201,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1207,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1209,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1211,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1213,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1793,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ERC20BurnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x49dc49ecb70251b262769f4cd54fea0e6714d84e30b2737885c76194c285b452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://151164eab6481d161ba4e4908a9810faebfe784f5f4eeffb1219a6e7865384b9\",\"dweb:/ipfs/QmesjesP7AJFkZHx1XXkdTvGgfzYu5AkC4CTsGFjNYV7XZ\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":757,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":760,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2790,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1201,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1207,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1209,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1211,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1213,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1793,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":1935,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol":{"ERC20SnapshotUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"}],"name":"Snapshot","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"balanceOfAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"totalSupplyAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","balanceOfAt(address,uint256)":"4ee2cd7e","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","totalSupplyAt(uint256)":"981b24d0","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Snapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract extends an ERC20 token with a snapshot mechanism. When a snapshot is created, the balances and total supply at the time are recorded for later access. This can be used to safely create mechanisms based on token balances such as trustless dividends or weighted voting. In naive implementations it's possible to perform a \\\"double spend\\\" attack by reusing the same balance from different accounts. By using snapshots to calculate dividends or voting power, those attacks no longer apply. It can also be used to create an efficient ERC20 forking mechanism. Snapshots are created by the internal {_snapshot} function, which will emit the {Snapshot} event and return a snapshot id. To get the total supply at the time of a snapshot, call the function {totalSupplyAt} with the snapshot id. To get the balance of an account at the time of a snapshot, call the {balanceOfAt} function with the snapshot id and the account address. NOTE: Snapshot policy can be customized by overriding the {_getCurrentSnapshotId} method. For example, having it return `block.number` will trigger the creation of snapshot at the beginning of each new block. When overriding this function, be careful about the monotonicity of its result. Non-monotonic snapshot ids will break the contract. Implementing snapshots for every block using this method will incur significant gas costs. For a gas-efficient alternative consider {ERC20Votes}. ==== Gas Costs Snapshots are efficient. Snapshot creation is _O(1)_. Retrieval of balances or total supply from a snapshot is _O(log n)_ in the number of snapshots that have been created, although _n_ for a specific account will generally be much smaller since identical balances in subsequent snapshots are stored as a single entry. There is a constant overhead for normal ERC20 transfers due to the additional snapshot bookkeeping. This overhead is only significant for the first transfer that immediately follows a snapshot for a particular account. Subsequent transfers will have normal cost until the next snapshot, and so on.\",\"events\":{\"Snapshot(uint256)\":{\"details\":\"Emitted by {_snapshot} when a snapshot identified by `id` is created.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Retrieves the balance of `account` at the time `snapshotId` was created.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalSupplyAt(uint256)\":{\"details\":\"Retrieves the total supply at the time `snapshotId` was created.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol\":\"ERC20SnapshotUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x49dc49ecb70251b262769f4cd54fea0e6714d84e30b2737885c76194c285b452\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://151164eab6481d161ba4e4908a9810faebfe784f5f4eeffb1219a6e7865384b9\",\"dweb:/ipfs/QmesjesP7AJFkZHx1XXkdTvGgfzYu5AkC4CTsGFjNYV7XZ\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol\":{\"keccak256\":\"0x42da8099f59958af496f6c8f0d9c1ce0a929151e02f877e4be23aca4cc440cbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://781b129c8102160319aeaf01b4760e50291bbe1e4ae12b97fbdb79bda38c0d3f\",\"dweb:/ipfs/QmNPDyvAPLaVBE5mS6fZJbqW4zZ93osaYdZEz2CPYRYtPU\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol\":{\"keccak256\":\"0x78318ee373107519a377cb372f5f9315e923346d014897ff0d023bbd52ea50c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91e2eec01d3d472ca77b77315c4ba84b9119b21e6494a04e27fccdbda43f6b12\",\"dweb:/ipfs/QmeSjzbX7iuT4EfRd4KuBTwk9h8EZAYftcDpJQ8B8W2KgN\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x382f704a068eb9b9e3c73c7acef54b464043aa12ea0abacfd0b8440c6e1e4e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff3639dd289cce4370a4ab74265f17107e2936d939fc12ea13e2a4a4ae9aa869\",\"dweb:/ipfs/QmcUKmyYw2tEWuy5VgG5jWGUcYAbp5ash2temVFXz7aQwC\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":757,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":760,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2790,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":1201,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":1207,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1209,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":1211,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":1213,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1793,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":1979,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"_accountBalanceSnapshots","offset":0,"slot":"101","type":"t_mapping(t_address,t_struct(Snapshots)1974_storage)"},{"astId":1982,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"_totalSupplySnapshots","offset":0,"slot":"102","type":"t_struct(Snapshots)1974_storage"},{"astId":1985,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"_currentSnapshotId","offset":0,"slot":"104","type":"t_struct(Counter)2797_storage"},{"astId":2283,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"__gap","offset":0,"slot":"105","type":"t_array(t_uint256)46_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)46_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[46]","numberOfBytes":"1472"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Snapshots)1974_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)","numberOfBytes":"32","value":"t_struct(Snapshots)1974_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)2797_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":2796,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(Snapshots)1974_storage":{"encoding":"inplace","label":"struct ERC20SnapshotUpgradeable.Snapshots","members":[{"astId":1970,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"ids","offset":0,"slot":"0","type":"t_array(t_uint256)dyn_storage"},{"astId":1973,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:ERC20SnapshotUpgradeable","label":"values","offset":0,"slot":"1","type":"t_array(t_uint256)dyn_storage"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"IERC20MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd4d1be47b51080f3a39676c69473c87b528856c81c9e585c89b7a7962d3067a64736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0x4D SHL 0xE4 PUSH28 0x51080F3A39676C69473C87B528856C81C9E585C89B7A7962D3067A64 PUSH20 0x6F6C634300080400330000000000000000000000 ","sourceMap":"199:8087:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd4d1be47b51080f3a39676c69473c87b528856c81c9e585c89b7a7962d3067a64736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0x4D SHL 0xE4 PUSH28 0x51080F3A39676C69473C87B528856C81C9E585C89B7A7962D3067A64 PUSH20 0x6F6C634300080400330000000000000000000000 ","sourceMap":"199:8087:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol":{"ArraysUpgradeable":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206a8402e7ead032ce8a88e9e0cc6e1b31919a0919d527959ab5f7ed609a17cc6864736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x8402E7EAD032CE8A88E9E0 0xCC PUSH15 0x1B31919A0919D527959AB5F7ED609A OR 0xCC PUSH9 0x64736F6C6343000804 STOP CALLER ","sourceMap":"271:3077:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206a8402e7ead032ce8a88e9e0cc6e1b31919a0919d527959ab5f7ed609a17cc6864736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x8402E7EAD032CE8A88E9E0 0xCC PUSH15 0x1B31919A0919D527959AB5F7ED609A OR 0xCC PUSH9 0x64736F6C6343000804 STOP CALLER ","sourceMap":"271:3077:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol\":\"ArraysUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol\":{\"keccak256\":\"0x78318ee373107519a377cb372f5f9315e923346d014897ff0d023bbd52ea50c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91e2eec01d3d472ca77b77315c4ba84b9119b21e6494a04e27fccdbda43f6b12\",\"dweb:/ipfs/QmeSjzbX7iuT4EfRd4KuBTwk9h8EZAYftcDpJQ8B8W2KgN\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x382f704a068eb9b9e3c73c7acef54b464043aa12ea0abacfd0b8440c6e1e4e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff3639dd289cce4370a4ab74265f17107e2936d939fc12ea13e2a4a4ae9aa869\",\"dweb:/ipfs/QmcUKmyYw2tEWuy5VgG5jWGUcYAbp5ash2temVFXz7aQwC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xf2efdd01f01f127e8b631675a359cd8cabfbcdcd2e8587ecf906181bcd667bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d8670ec00368fa7ff56ae265337d0b7d454709e639e350e5c9677ae32574ed\",\"dweb:/ipfs/QmPRmAmjKkZLatrKjbrj78GqW34b5hwx72WqwoBvyg4QcV\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xabed77589961adbaaa36817e0914bcbe4c447311c9451bf3fc9b073c1f092d8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b8f12b15b67cc26a684dc7913e279fe016a0baa44778fa5406e38b17b027b5a\",\"dweb:/ipfs/QmejTVV9v4E6WtztCfpbVHDNV8rd2p3qMzrCiBgvTepQby\"]},\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":757,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":760,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2790,"contract":"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"CountersUpgradeable":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026b5aa6b9384c6bea87d7a1cb3e32d8de629b3a543309f589e7876ee267d145c64736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xB5 0xAA PUSH12 0x9384C6BEA87D7A1CB3E32D8D 0xE6 0x29 0xB3 0xA5 NUMBER ADDRESS SWAP16 PC SWAP15 PUSH25 0x76EE267D145C64736F6C634300080400330000000000000000 ","sourceMap":"424:982:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026b5aa6b9384c6bea87d7a1cb3e32d8de629b3a543309f589e7876ee267d145c64736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xB5 0xAA PUSH12 0x9384C6BEA87D7A1CB3E32D8D 0xE6 0x29 0xB3 0xA5 NUMBER ADDRESS SWAP16 PC SWAP15 PUSH25 0x76EE267D145C64736F6C634300080400330000000000000000 ","sourceMap":"424:982:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":\"CountersUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e730d8d55d21890c328f8045491739543317d452857859d862fb9d26a0bb865464736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 ADDRESS 0xD8 0xD5 0x5D 0x21 DUP10 0xC ORIGIN DUP16 DUP1 GASLIMIT 0x49 OR CODECOPY SLOAD CALLER OR 0xD4 MSTORE DUP6 PUSH25 0x59D862FB9D26A0BB865464736F6C6343000804003300000000 ","sourceMap":"1279:1402:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e730d8d55d21890c328f8045491739543317d452857859d862fb9d26a0bb865464736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 ADDRESS 0xD8 0xD5 0x5D 0x21 DUP10 0xC ORIGIN DUP16 DUP1 GASLIMIT 0x49 OR CODECOPY SLOAD CALLER OR 0xD4 MSTORE DUP6 PUSH25 0x59D862FB9D26A0BB865464736F6C6343000804003300000000 ","sourceMap":"1279:1402:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122063c75cc5d37c9d5340b735b08e1d75b7acb3140b7d44d21ee4be894716302e3b64736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xC75CC5D3 PUSH29 0x9D5340B735B08E1D75B7ACB3140B7D44D21EE4BE894716302E3B64736F PUSH13 0x63430008040033000000000000 ","sourceMap":"207:12313:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122063c75cc5d37c9d5340b735b08e1d75b7acb3140b7d44d21ee4be894716302e3b64736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xC75CC5D3 PUSH29 0x9D5340B735B08E1D75B7ACB3140B7D44D21EE4BE894716302E3B64736F PUSH13 0x63430008040033000000000000 ","sourceMap":"207:12313:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x382f704a068eb9b9e3c73c7acef54b464043aa12ea0abacfd0b8440c6e1e4e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff3639dd289cce4370a4ab74265f17107e2936d939fc12ea13e2a4a4ae9aa869\",\"dweb:/ipfs/QmcUKmyYw2tEWuy5VgG5jWGUcYAbp5ash2temVFXz7aQwC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":3798,"contract":"contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"contracts/.deps/npm/@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":3921,"contract":"contracts/.deps/npm/@openzeppelin/contracts/security/Pausable.sol:Pausable","label":"_paused","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}}}},"contracts/.deps/npm/@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":4022,"contract":"contracts/.deps/npm/@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3266:40","statements":[{"body":{"nodeType":"YulBlock","src":"102:259:40","statements":[{"nodeType":"YulAssignment","src":"112:75:40","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:40"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:40"},"nodeType":"YulFunctionCall","src":"137:49:40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:40"},"nodeType":"YulFunctionCall","src":"121:66:40"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:40"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:40"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:40"},"nodeType":"YulFunctionCall","src":"196:21:40"},"nodeType":"YulExpressionStatement","src":"196:21:40"},{"nodeType":"YulVariableDeclaration","src":"226:27:40","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:40"},"nodeType":"YulFunctionCall","src":"237:16:40"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"300:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"303:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:40"},"nodeType":"YulFunctionCall","src":"293:12:40"},"nodeType":"YulExpressionStatement","src":"293:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:40"},"nodeType":"YulFunctionCall","src":"268:16:40"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:40"},"nodeType":"YulFunctionCall","src":"265:25:40"},"nodeType":"YulIf","src":"262:2:40"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"338:3:40"},{"name":"dst","nodeType":"YulIdentifier","src":"343:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"348:6:40"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"316:21:40"},"nodeType":"YulFunctionCall","src":"316:39:40"},"nodeType":"YulExpressionStatement","src":"316:39:40"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:40","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:40","type":""}],"src":"7:354:40"},{"body":{"nodeType":"YulBlock","src":"454:215:40","statements":[{"body":{"nodeType":"YulBlock","src":"503:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"512:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"515:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"505:6:40"},"nodeType":"YulFunctionCall","src":"505:12:40"},"nodeType":"YulExpressionStatement","src":"505:12:40"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"482:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"490:4:40","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"478:3:40"},"nodeType":"YulFunctionCall","src":"478:17:40"},{"name":"end","nodeType":"YulIdentifier","src":"497:3:40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"474:3:40"},"nodeType":"YulFunctionCall","src":"474:27:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"467:6:40"},"nodeType":"YulFunctionCall","src":"467:35:40"},"nodeType":"YulIf","src":"464:2:40"},{"nodeType":"YulVariableDeclaration","src":"528:27:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"548:6:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"542:5:40"},"nodeType":"YulFunctionCall","src":"542:13:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"532:6:40","type":""}]},{"nodeType":"YulAssignment","src":"564:99:40","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"636:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"644:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"632:3:40"},"nodeType":"YulFunctionCall","src":"632:17:40"},{"name":"length","nodeType":"YulIdentifier","src":"651:6:40"},{"name":"end","nodeType":"YulIdentifier","src":"659:3:40"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"573:58:40"},"nodeType":"YulFunctionCall","src":"573:90:40"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"564:5:40"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"432:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"440:3:40","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"448:5:40","type":""}],"src":"381:288:40"},{"body":{"nodeType":"YulBlock","src":"789:538:40","statements":[{"body":{"nodeType":"YulBlock","src":"835:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"844:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"847:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"837:6:40"},"nodeType":"YulFunctionCall","src":"837:12:40"},"nodeType":"YulExpressionStatement","src":"837:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"810:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"819:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"806:3:40"},"nodeType":"YulFunctionCall","src":"806:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"831:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"802:3:40"},"nodeType":"YulFunctionCall","src":"802:32:40"},"nodeType":"YulIf","src":"799:2:40"},{"nodeType":"YulBlock","src":"861:224:40","statements":[{"nodeType":"YulVariableDeclaration","src":"876:38:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"900:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"911:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"896:3:40"},"nodeType":"YulFunctionCall","src":"896:17:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"890:5:40"},"nodeType":"YulFunctionCall","src":"890:24:40"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"880:6:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"961:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"970:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"973:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"963:6:40"},"nodeType":"YulFunctionCall","src":"963:12:40"},"nodeType":"YulExpressionStatement","src":"963:12:40"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"933:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"941:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"930:2:40"},"nodeType":"YulFunctionCall","src":"930:30:40"},"nodeType":"YulIf","src":"927:2:40"},{"nodeType":"YulAssignment","src":"991:84:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1047:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1058:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1043:3:40"},"nodeType":"YulFunctionCall","src":"1043:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1067:7:40"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1001:41:40"},"nodeType":"YulFunctionCall","src":"1001:74:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"991:6:40"}]}]},{"nodeType":"YulBlock","src":"1095:225:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1110:39:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1134:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"1145:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1130:3:40"},"nodeType":"YulFunctionCall","src":"1130:18:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1124:5:40"},"nodeType":"YulFunctionCall","src":"1124:25:40"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1114:6:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"1196:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1205:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1208:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1198:6:40"},"nodeType":"YulFunctionCall","src":"1198:12:40"},"nodeType":"YulExpressionStatement","src":"1198:12:40"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1168:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"1176:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1165:2:40"},"nodeType":"YulFunctionCall","src":"1165:30:40"},"nodeType":"YulIf","src":"1162:2:40"},{"nodeType":"YulAssignment","src":"1226:84:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1282:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1293:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1278:3:40"},"nodeType":"YulFunctionCall","src":"1278:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1302:7:40"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1236:41:40"},"nodeType":"YulFunctionCall","src":"1236:74:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1226:6:40"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"751:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"762:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"774:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"782:6:40","type":""}],"src":"675:652:40"},{"body":{"nodeType":"YulBlock","src":"1374:88:40","statements":[{"nodeType":"YulAssignment","src":"1384:30:40","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1394:18:40"},"nodeType":"YulFunctionCall","src":"1394:20:40"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1384:6:40"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1443:6:40"},{"name":"size","nodeType":"YulIdentifier","src":"1451:4:40"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1423:19:40"},"nodeType":"YulFunctionCall","src":"1423:33:40"},"nodeType":"YulExpressionStatement","src":"1423:33:40"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:40","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1367:6:40","type":""}],"src":"1333:129:40"},{"body":{"nodeType":"YulBlock","src":"1508:35:40","statements":[{"nodeType":"YulAssignment","src":"1518:19:40","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1534:2:40","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1528:5:40"},"nodeType":"YulFunctionCall","src":"1528:9:40"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1518:6:40"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1501:6:40","type":""}],"src":"1468:75:40"},{"body":{"nodeType":"YulBlock","src":"1616:241:40","statements":[{"body":{"nodeType":"YulBlock","src":"1721:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1723:16:40"},"nodeType":"YulFunctionCall","src":"1723:18:40"},"nodeType":"YulExpressionStatement","src":"1723:18:40"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1693:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"1701:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1690:2:40"},"nodeType":"YulFunctionCall","src":"1690:30:40"},"nodeType":"YulIf","src":"1687:2:40"},{"nodeType":"YulAssignment","src":"1753:37:40","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1783:6:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1761:21:40"},"nodeType":"YulFunctionCall","src":"1761:29:40"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1753:4:40"}]},{"nodeType":"YulAssignment","src":"1827:23:40","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1839:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"1845:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1835:3:40"},"nodeType":"YulFunctionCall","src":"1835:15:40"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1827:4:40"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1600:6:40","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1611:4:40","type":""}],"src":"1549:308:40"},{"body":{"nodeType":"YulBlock","src":"1912:258:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1922:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1931:1:40","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1926:1:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"1991:63:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2016:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"2021:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:40"},"nodeType":"YulFunctionCall","src":"2012:11:40"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2035:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"2040:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2031:3:40"},"nodeType":"YulFunctionCall","src":"2031:11:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2025:5:40"},"nodeType":"YulFunctionCall","src":"2025:18:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2005:6:40"},"nodeType":"YulFunctionCall","src":"2005:39:40"},"nodeType":"YulExpressionStatement","src":"2005:39:40"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1952:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"1955:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1949:2:40"},"nodeType":"YulFunctionCall","src":"1949:13:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1963:19:40","statements":[{"nodeType":"YulAssignment","src":"1965:15:40","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1974:1:40"},{"kind":"number","nodeType":"YulLiteral","src":"1977:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1970:3:40"},"nodeType":"YulFunctionCall","src":"1970:10:40"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1965:1:40"}]}]},"pre":{"nodeType":"YulBlock","src":"1945:3:40","statements":[]},"src":"1941:113:40"},{"body":{"nodeType":"YulBlock","src":"2088:76:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2138:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"2143:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2134:3:40"},"nodeType":"YulFunctionCall","src":"2134:16:40"},{"kind":"number","nodeType":"YulLiteral","src":"2152:1:40","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2127:6:40"},"nodeType":"YulFunctionCall","src":"2127:27:40"},"nodeType":"YulExpressionStatement","src":"2127:27:40"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2069:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"2072:6:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2066:2:40"},"nodeType":"YulFunctionCall","src":"2066:13:40"},"nodeType":"YulIf","src":"2063:2:40"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1894:3:40","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1899:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"1904:6:40","type":""}],"src":"1863:307:40"},{"body":{"nodeType":"YulBlock","src":"2227:269:40","statements":[{"nodeType":"YulAssignment","src":"2237:22:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2251:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"2257:1:40","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2247:3:40"},"nodeType":"YulFunctionCall","src":"2247:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2237:6:40"}]},{"nodeType":"YulVariableDeclaration","src":"2268:38:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2298:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"2304:1:40","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2294:3:40"},"nodeType":"YulFunctionCall","src":"2294:12:40"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2272:18:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"2345:51:40","statements":[{"nodeType":"YulAssignment","src":"2359:27:40","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2373:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"2381:4:40","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2369:3:40"},"nodeType":"YulFunctionCall","src":"2369:17:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2359:6:40"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2325:18:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2318:6:40"},"nodeType":"YulFunctionCall","src":"2318:26:40"},"nodeType":"YulIf","src":"2315:2:40"},{"body":{"nodeType":"YulBlock","src":"2448:42:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2462:16:40"},"nodeType":"YulFunctionCall","src":"2462:18:40"},"nodeType":"YulExpressionStatement","src":"2462:18:40"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2412:18:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2435:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"2443:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2432:2:40"},"nodeType":"YulFunctionCall","src":"2432:14:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2409:2:40"},"nodeType":"YulFunctionCall","src":"2409:38:40"},"nodeType":"YulIf","src":"2406:2:40"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2211:4:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2220:6:40","type":""}],"src":"2176:320:40"},{"body":{"nodeType":"YulBlock","src":"2545:238:40","statements":[{"nodeType":"YulVariableDeclaration","src":"2555:58:40","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2577:6:40"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2607:4:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2585:21:40"},"nodeType":"YulFunctionCall","src":"2585:27:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2573:3:40"},"nodeType":"YulFunctionCall","src":"2573:40:40"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2559:10:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"2724:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2726:16:40"},"nodeType":"YulFunctionCall","src":"2726:18:40"},"nodeType":"YulExpressionStatement","src":"2726:18:40"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2667:10:40"},{"kind":"number","nodeType":"YulLiteral","src":"2679:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2664:2:40"},"nodeType":"YulFunctionCall","src":"2664:34:40"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2703:10:40"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2715:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2700:2:40"},"nodeType":"YulFunctionCall","src":"2700:22:40"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2661:2:40"},"nodeType":"YulFunctionCall","src":"2661:62:40"},"nodeType":"YulIf","src":"2658:2:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2762:2:40","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2766:10:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2755:6:40"},"nodeType":"YulFunctionCall","src":"2755:22:40"},"nodeType":"YulExpressionStatement","src":"2755:22:40"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2531:6:40","type":""},{"name":"size","nodeType":"YulTypedName","src":"2539:4:40","type":""}],"src":"2502:281:40"},{"body":{"nodeType":"YulBlock","src":"2817:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2834:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2837:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2827:6:40"},"nodeType":"YulFunctionCall","src":"2827:88:40"},"nodeType":"YulExpressionStatement","src":"2827:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2931:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2934:4:40","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2924:6:40"},"nodeType":"YulFunctionCall","src":"2924:15:40"},"nodeType":"YulExpressionStatement","src":"2924:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2955:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2958:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2948:6:40"},"nodeType":"YulFunctionCall","src":"2948:15:40"},"nodeType":"YulExpressionStatement","src":"2948:15:40"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"2789:180:40"},{"body":{"nodeType":"YulBlock","src":"3003:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3020:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3023:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3013:6:40"},"nodeType":"YulFunctionCall","src":"3013:88:40"},"nodeType":"YulExpressionStatement","src":"3013:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3117:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3120:4:40","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3110:6:40"},"nodeType":"YulFunctionCall","src":"3110:15:40"},"nodeType":"YulExpressionStatement","src":"3110:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3141:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3144:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3134:6:40"},"nodeType":"YulFunctionCall","src":"3134:15:40"},"nodeType":"YulExpressionStatement","src":"3134:15:40"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2975:180:40"},{"body":{"nodeType":"YulBlock","src":"3209:54:40","statements":[{"nodeType":"YulAssignment","src":"3219:38:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3237:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"3244:2:40","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3233:3:40"},"nodeType":"YulFunctionCall","src":"3233:14:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3253:2:40","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3249:3:40"},"nodeType":"YulFunctionCall","src":"3249:7:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3229:3:40"},"nodeType":"YulFunctionCall","src":"3229:28:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3219:6:40"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3192:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3202:6:40","type":""}],"src":"3161:102:40"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":40,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620015d9380380620015d9833981810160405281019062000037919062000193565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b50505062000376565b8280546200007f906200029b565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200022f565b62000206565b9050828152602081018484840111156200015157600080fd5b6200015e84828562000265565b509392505050565b600082601f8301126200017857600080fd5b81516200018a84826020860162000121565b91505092915050565b60008060408385031215620001a757600080fd5b600083015167ffffffffffffffff811115620001c257600080fd5b620001d08582860162000166565b925050602083015167ffffffffffffffff811115620001ee57600080fd5b620001fc8582860162000166565b9150509250929050565b60006200021262000225565b9050620002208282620002d1565b919050565b6000604051905090565b600067ffffffffffffffff8211156200024d576200024c62000336565b5b620002588262000365565b9050602081019050919050565b60005b838110156200028557808201518184015260208101905062000268565b8381111562000295576000848401525b50505050565b60006002820490506001821680620002b457607f821691505b60208210811415620002cb57620002ca62000307565b5b50919050565b620002dc8262000365565b810181811067ffffffffffffffff82111715620002fe57620002fd62000336565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61125380620003866000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d19565b60405180910390f35b6100e660048036038101906100e19190610b67565b610308565b6040516100f39190610cfe565b60405180910390f35b61010461032b565b6040516101119190610e1b565b60405180910390f35b610134600480360381019061012f9190610b18565b610335565b6040516101419190610cfe565b60405180910390f35b610152610364565b60405161015f9190610e36565b60405180910390f35b610182600480360381019061017d9190610b67565b61036d565b60405161018f9190610cfe565b60405180910390f35b6101b260048036038101906101ad9190610ab3565b6103a4565b6040516101bf9190610e1b565b60405180910390f35b6101d06103ec565b6040516101dd9190610d19565b60405180910390f35b61020060048036038101906101fb9190610b67565b61047e565b60405161020d9190610cfe565b60405180910390f35b610230600480360381019061022b9190610b67565b6104f5565b60405161023d9190610cfe565b60405180910390f35b610260600480360381019061025b9190610adc565b610518565b60405161026d9190610e1b565b60405180910390f35b60606003805461028590610f4b565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f4b565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e6d565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f4b565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f4b565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610dfb565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610ddb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d5b565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e1b565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d7b565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dbb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d3b565b60405180910390fd5b6108e9838383610a7f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610d9b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a029190610e6d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a669190610e1b565b60405180910390a3610a79848484610a84565b50505050565b505050565b505050565b600081359050610a98816111ef565b92915050565b600081359050610aad81611206565b92915050565b600060208284031215610ac557600080fd5b6000610ad384828501610a89565b91505092915050565b60008060408385031215610aef57600080fd5b6000610afd85828601610a89565b9250506020610b0e85828601610a89565b9150509250929050565b600080600060608486031215610b2d57600080fd5b6000610b3b86828701610a89565b9350506020610b4c86828701610a89565b9250506040610b5d86828701610a9e565b9150509250925092565b60008060408385031215610b7a57600080fd5b6000610b8885828601610a89565b9250506020610b9985828601610a9e565b9150509250929050565b610bac81610ed5565b82525050565b6000610bbd82610e51565b610bc78185610e5c565b9350610bd7818560208601610f18565b610be081610fdb565b840191505092915050565b6000610bf8602383610e5c565b9150610c0382610fec565b604082019050919050565b6000610c1b602283610e5c565b9150610c268261103b565b604082019050919050565b6000610c3e601d83610e5c565b9150610c498261108a565b602082019050919050565b6000610c61602683610e5c565b9150610c6c826110b3565b604082019050919050565b6000610c84602583610e5c565b9150610c8f82611102565b604082019050919050565b6000610ca7602483610e5c565b9150610cb282611151565b604082019050919050565b6000610cca602583610e5c565b9150610cd5826111a0565b604082019050919050565b610ce981610f01565b82525050565b610cf881610f0b565b82525050565b6000602082019050610d136000830184610ba3565b92915050565b60006020820190508181036000830152610d338184610bb2565b905092915050565b60006020820190508181036000830152610d5481610beb565b9050919050565b60006020820190508181036000830152610d7481610c0e565b9050919050565b60006020820190508181036000830152610d9481610c31565b9050919050565b60006020820190508181036000830152610db481610c54565b9050919050565b60006020820190508181036000830152610dd481610c77565b9050919050565b60006020820190508181036000830152610df481610c9a565b9050919050565b60006020820190508181036000830152610e1481610cbd565b9050919050565b6000602082019050610e306000830184610ce0565b92915050565b6000602082019050610e4b6000830184610cef565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7882610f01565b9150610e8383610f01565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eb857610eb7610f7d565b5b828201905092915050565b6000610ece82610ee1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f36578082015181840152602081019050610f1b565b83811115610f45576000848401525b50505050565b60006002820490506001821680610f6357607f821691505b60208210811415610f7757610f76610fac565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6111f881610ec3565b811461120357600080fd5b50565b61120f81610f01565b811461121a57600080fd5b5056fea264697066735822122086f8550a97982bbe44a67a0be06fab2db39258aac02301a45830a9eacf0f294764736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15D9 CODESIZE SUB DUP1 PUSH3 0x15D9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x193 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x376 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x29B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x22F JUMP JUMPDEST PUSH3 0x206 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15E DUP5 DUP3 DUP6 PUSH3 0x265 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x18A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D0 DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FC DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x212 PUSH3 0x225 JUMP JUMPDEST SWAP1 POP PUSH3 0x220 DUP3 DUP3 PUSH3 0x2D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x24D JUMPI PUSH3 0x24C PUSH3 0x336 JUMP JUMPDEST JUMPDEST PUSH3 0x258 DUP3 PUSH3 0x365 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x285 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x268 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x295 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2CB JUMPI PUSH3 0x2CA PUSH3 0x307 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2DC DUP3 PUSH3 0x365 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2FE JUMPI PUSH3 0x2FD PUSH3 0x336 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1253 DUP1 PUSH3 0x386 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA79 DUP5 DUP5 DUP5 PUSH2 0xA84 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA98 DUP2 PUSH2 0x11EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAAD DUP2 PUSH2 0x1206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD3 DUP5 DUP3 DUP6 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0E DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB3B DUP7 DUP3 DUP8 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4C DUP7 DUP3 DUP8 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB5D DUP7 DUP3 DUP8 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB88 DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB99 DUP6 DUP3 DUP7 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAC DUP2 PUSH2 0xED5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0xBC7 DUP2 DUP6 PUSH2 0xE5C JUMP JUMPDEST SWAP4 POP PUSH2 0xBD7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF18 JUMP JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0xFDB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF8 PUSH1 0x23 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC03 DUP3 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1B PUSH1 0x22 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC26 DUP3 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3E PUSH1 0x1D DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC49 DUP3 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC61 PUSH1 0x26 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC6C DUP3 PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC84 PUSH1 0x25 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC8F DUP3 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA7 PUSH1 0x24 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xCB2 DUP3 PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCA PUSH1 0x25 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xCD5 DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE9 DUP2 PUSH2 0xF01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCF8 DUP2 PUSH2 0xF0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD33 DUP2 DUP5 PUSH2 0xBB2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD54 DUP2 PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD74 DUP2 PUSH2 0xC0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD94 DUP2 PUSH2 0xC31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDB4 DUP2 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDD4 DUP2 PUSH2 0xC77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDF4 DUP2 PUSH2 0xC9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE14 DUP2 PUSH2 0xCBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE30 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE78 DUP3 PUSH2 0xF01 JUMP JUMPDEST SWAP2 POP PUSH2 0xE83 DUP4 PUSH2 0xF01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEB8 JUMPI PUSH2 0xEB7 PUSH2 0xF7D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECE DUP3 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF36 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF1B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF45 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF63 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF76 PUSH2 0xFAC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x11F8 DUP2 PUSH2 0xEC3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x120F DUP2 PUSH2 0xF01 JUMP JUMPDEST DUP2 EQ PUSH2 0x121A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xF8 SSTORE EXP SWAP8 SWAP9 0x2B 0xBE DIFFICULTY 0xA6 PUSH27 0xBE06FAB2DB39258AAC02301A45830A9EACF0F294764736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"1403:11214:25:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;;;;;;;:::i;:::-;;1978:113;;1403:11214;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:40:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;448:5;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:652::-;774:6;782;831:2;819:9;810:7;806:23;802:32;799:2;;;847:1;844;837:12;799:2;911:1;900:9;896:17;890:24;941:18;933:6;930:30;927:2;;;973:1;970;963:12;927:2;1001:74;1067:7;1058:6;1047:9;1043:22;1001:74;:::i;:::-;991:84;;861:224;1145:2;1134:9;1130:18;1124:25;1176:18;1168:6;1165:30;1162:2;;;1208:1;1205;1198:12;1162:2;1236:74;1302:7;1293:6;1282:9;1278:22;1236:74;:::i;:::-;1226:84;;1095:225;789:538;;;;;:::o;1333:129::-;1367:6;1394:20;;:::i;:::-;1384:30;;1423:33;1451:4;1443:6;1423:33;:::i;:::-;1374:88;;;:::o;1468:75::-;1501:6;1534:2;1528:9;1518:19;;1508:35;:::o;1549:308::-;1611:4;1701:18;1693:6;1690:30;1687:2;;;1723:18;;:::i;:::-;1687:2;1761:29;1783:6;1761:29;:::i;:::-;1753:37;;1845:4;1839;1835:15;1827:23;;1616:241;;;:::o;1863:307::-;1931:1;1941:113;1955:6;1952:1;1949:13;1941:113;;;2040:1;2035:3;2031:11;2025:18;2021:1;2016:3;2012:11;2005:39;1977:2;1974:1;1970:10;1965:15;;1941:113;;;2072:6;2069:1;2066:13;2063:2;;;2152:1;2143:6;2138:3;2134:16;2127:27;2063:2;1912:258;;;;:::o;2176:320::-;2220:6;2257:1;2251:4;2247:12;2237:22;;2304:1;2298:4;2294:12;2325:18;2315:2;;2381:4;2373:6;2369:17;2359:27;;2315:2;2443;2435:6;2432:14;2412:18;2409:38;2406:2;;;2462:18;;:::i;:::-;2406:2;2227:269;;;;:::o;2502:281::-;2585:27;2607:4;2585:27;:::i;:::-;2577:6;2573:40;2715:6;2703:10;2700:22;2679:18;2667:10;2664:34;2661:62;2658:2;;;2726:18;;:::i;:::-;2658:2;2766:10;2762:2;2755:22;2545:238;;;:::o;2789:180::-;2837:77;2834:1;2827:88;2934:4;2931:1;2924:15;2958:4;2955:1;2948:15;2975:180;3023:77;3020:1;3013:88;3120:4;3117:1;3110:15;3144:4;3141:1;3134:15;3161:102;3202:6;3253:2;3249:7;3244:2;3237:5;3233:14;3229:28;3219:38;;3209:54;;;:::o;1403:11214:25:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13266:40","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:40","statements":[{"nodeType":"YulAssignment","src":"69:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:40"},"nodeType":"YulFunctionCall","src":"78:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:40"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:40"},"nodeType":"YulFunctionCall","src":"107:33:40"},"nodeType":"YulExpressionStatement","src":"107:33:40"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:40","type":""}],"src":"7:139:40"},{"body":{"nodeType":"YulBlock","src":"204:87:40","statements":[{"nodeType":"YulAssignment","src":"214:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:40"},"nodeType":"YulFunctionCall","src":"223:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:40"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"252:26:40"},"nodeType":"YulFunctionCall","src":"252:33:40"},"nodeType":"YulExpressionStatement","src":"252:33:40"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:40","type":""}],"src":"152:139:40"},{"body":{"nodeType":"YulBlock","src":"363:196:40","statements":[{"body":{"nodeType":"YulBlock","src":"409:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"418:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"421:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"411:6:40"},"nodeType":"YulFunctionCall","src":"411:12:40"},"nodeType":"YulExpressionStatement","src":"411:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"384:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"393:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"380:3:40"},"nodeType":"YulFunctionCall","src":"380:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"405:2:40","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"376:3:40"},"nodeType":"YulFunctionCall","src":"376:32:40"},"nodeType":"YulIf","src":"373:2:40"},{"nodeType":"YulBlock","src":"435:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"450:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"464:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"454:6:40","type":""}]},{"nodeType":"YulAssignment","src":"479:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"514:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"525:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"510:3:40"},"nodeType":"YulFunctionCall","src":"510:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"534:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"489:20:40"},"nodeType":"YulFunctionCall","src":"489:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"479:6:40"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"333:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"344:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"356:6:40","type":""}],"src":"297:262:40"},{"body":{"nodeType":"YulBlock","src":"648:324:40","statements":[{"body":{"nodeType":"YulBlock","src":"694:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"706:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"696:6:40"},"nodeType":"YulFunctionCall","src":"696:12:40"},"nodeType":"YulExpressionStatement","src":"696:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"669:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"678:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"665:3:40"},"nodeType":"YulFunctionCall","src":"665:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"690:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"661:3:40"},"nodeType":"YulFunctionCall","src":"661:32:40"},"nodeType":"YulIf","src":"658:2:40"},{"nodeType":"YulBlock","src":"720:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"735:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"749:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"739:6:40","type":""}]},{"nodeType":"YulAssignment","src":"764:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"799:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"810:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"795:3:40"},"nodeType":"YulFunctionCall","src":"795:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"819:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"774:20:40"},"nodeType":"YulFunctionCall","src":"774:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"764:6:40"}]}]},{"nodeType":"YulBlock","src":"847:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"862:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"876:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"866:6:40","type":""}]},{"nodeType":"YulAssignment","src":"892:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"927:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"938:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"923:3:40"},"nodeType":"YulFunctionCall","src":"923:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"947:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"902:20:40"},"nodeType":"YulFunctionCall","src":"902:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"892:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"610:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"621:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"633:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"641:6:40","type":""}],"src":"565:407:40"},{"body":{"nodeType":"YulBlock","src":"1078:452:40","statements":[{"body":{"nodeType":"YulBlock","src":"1124:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1133:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1136:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1126:6:40"},"nodeType":"YulFunctionCall","src":"1126:12:40"},"nodeType":"YulExpressionStatement","src":"1126:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1099:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"1108:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1095:3:40"},"nodeType":"YulFunctionCall","src":"1095:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"1120:2:40","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:40"},"nodeType":"YulFunctionCall","src":"1091:32:40"},"nodeType":"YulIf","src":"1088:2:40"},{"nodeType":"YulBlock","src":"1150:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1165:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1179:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1169:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1194:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1229:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1240:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1225:3:40"},"nodeType":"YulFunctionCall","src":"1225:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1249:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1204:20:40"},"nodeType":"YulFunctionCall","src":"1204:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1194:6:40"}]}]},{"nodeType":"YulBlock","src":"1277:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1292:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1306:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1296:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1322:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1368:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1353:3:40"},"nodeType":"YulFunctionCall","src":"1353:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1377:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1332:20:40"},"nodeType":"YulFunctionCall","src":"1332:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1322:6:40"}]}]},{"nodeType":"YulBlock","src":"1405:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1420:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1434:2:40","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1424:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1450:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1485:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1496:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1481:3:40"},"nodeType":"YulFunctionCall","src":"1481:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1505:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1460:20:40"},"nodeType":"YulFunctionCall","src":"1460:53:40"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1450:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1032:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1043:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1055:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1063:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1071:6:40","type":""}],"src":"978:552:40"},{"body":{"nodeType":"YulBlock","src":"1619:324:40","statements":[{"body":{"nodeType":"YulBlock","src":"1665:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1674:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1677:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1667:6:40"},"nodeType":"YulFunctionCall","src":"1667:12:40"},"nodeType":"YulExpressionStatement","src":"1667:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1640:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"1649:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1636:3:40"},"nodeType":"YulFunctionCall","src":"1636:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"1661:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1632:3:40"},"nodeType":"YulFunctionCall","src":"1632:32:40"},"nodeType":"YulIf","src":"1629:2:40"},{"nodeType":"YulBlock","src":"1691:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1706:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1720:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1710:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1735:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1770:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1781:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1766:3:40"},"nodeType":"YulFunctionCall","src":"1766:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1790:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1745:20:40"},"nodeType":"YulFunctionCall","src":"1745:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1735:6:40"}]}]},{"nodeType":"YulBlock","src":"1818:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1833:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1847:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1837:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1863:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1898:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1909:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1894:3:40"},"nodeType":"YulFunctionCall","src":"1894:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1918:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1873:20:40"},"nodeType":"YulFunctionCall","src":"1873:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1863:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1581:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1592:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1604:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1612:6:40","type":""}],"src":"1536:407:40"},{"body":{"nodeType":"YulBlock","src":"2008:50:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2025:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2045:5:40"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2030:14:40"},"nodeType":"YulFunctionCall","src":"2030:21:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2018:6:40"},"nodeType":"YulFunctionCall","src":"2018:34:40"},"nodeType":"YulExpressionStatement","src":"2018:34:40"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1996:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2003:3:40","type":""}],"src":"1949:109:40"},{"body":{"nodeType":"YulBlock","src":"2156:272:40","statements":[{"nodeType":"YulVariableDeclaration","src":"2166:53:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:40"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2180:32:40"},"nodeType":"YulFunctionCall","src":"2180:39:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2170:6:40","type":""}]},{"nodeType":"YulAssignment","src":"2228:78:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2294:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"2299:6:40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2235:58:40"},"nodeType":"YulFunctionCall","src":"2235:71:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2228:3:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2341:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"2348:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2337:3:40"},"nodeType":"YulFunctionCall","src":"2337:16:40"},{"name":"pos","nodeType":"YulIdentifier","src":"2355:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"2360:6:40"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2315:21:40"},"nodeType":"YulFunctionCall","src":"2315:52:40"},"nodeType":"YulExpressionStatement","src":"2315:52:40"},{"nodeType":"YulAssignment","src":"2376:46:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2387:3:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2414:6:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2392:21:40"},"nodeType":"YulFunctionCall","src":"2392:29:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2383:3:40"},"nodeType":"YulFunctionCall","src":"2383:39:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2376:3:40"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2137:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2144:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2152:3:40","type":""}],"src":"2064:364:40"},{"body":{"nodeType":"YulBlock","src":"2580:220:40","statements":[{"nodeType":"YulAssignment","src":"2590:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2656:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"2661:2:40","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2597:58:40"},"nodeType":"YulFunctionCall","src":"2597:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2590:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2762:3:40"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"2673:88:40"},"nodeType":"YulFunctionCall","src":"2673:93:40"},"nodeType":"YulExpressionStatement","src":"2673:93:40"},{"nodeType":"YulAssignment","src":"2775:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2786:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"2791:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2782:3:40"},"nodeType":"YulFunctionCall","src":"2782:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2775:3:40"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2568:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2576:3:40","type":""}],"src":"2434:366:40"},{"body":{"nodeType":"YulBlock","src":"2952:220:40","statements":[{"nodeType":"YulAssignment","src":"2962:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3028:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3033:2:40","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2969:58:40"},"nodeType":"YulFunctionCall","src":"2969:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2962:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3134:3:40"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"3045:88:40"},"nodeType":"YulFunctionCall","src":"3045:93:40"},"nodeType":"YulExpressionStatement","src":"3045:93:40"},{"nodeType":"YulAssignment","src":"3147:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3158:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3163:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3154:3:40"},"nodeType":"YulFunctionCall","src":"3154:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3147:3:40"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2940:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2948:3:40","type":""}],"src":"2806:366:40"},{"body":{"nodeType":"YulBlock","src":"3324:220:40","statements":[{"nodeType":"YulAssignment","src":"3334:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3400:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3405:2:40","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3341:58:40"},"nodeType":"YulFunctionCall","src":"3341:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3334:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3506:3:40"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"3417:88:40"},"nodeType":"YulFunctionCall","src":"3417:93:40"},"nodeType":"YulExpressionStatement","src":"3417:93:40"},{"nodeType":"YulAssignment","src":"3519:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3530:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3535:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3526:3:40"},"nodeType":"YulFunctionCall","src":"3526:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3519:3:40"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3312:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3320:3:40","type":""}],"src":"3178:366:40"},{"body":{"nodeType":"YulBlock","src":"3696:220:40","statements":[{"nodeType":"YulAssignment","src":"3706:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3772:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3777:2:40","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3713:58:40"},"nodeType":"YulFunctionCall","src":"3713:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3706:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3878:3:40"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"3789:88:40"},"nodeType":"YulFunctionCall","src":"3789:93:40"},"nodeType":"YulExpressionStatement","src":"3789:93:40"},{"nodeType":"YulAssignment","src":"3891:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3902:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3907:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3898:3:40"},"nodeType":"YulFunctionCall","src":"3898:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3891:3:40"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3684:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3692:3:40","type":""}],"src":"3550:366:40"},{"body":{"nodeType":"YulBlock","src":"4068:220:40","statements":[{"nodeType":"YulAssignment","src":"4078:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4144:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4149:2:40","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4085:58:40"},"nodeType":"YulFunctionCall","src":"4085:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4078:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4250:3:40"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"4161:88:40"},"nodeType":"YulFunctionCall","src":"4161:93:40"},"nodeType":"YulExpressionStatement","src":"4161:93:40"},{"nodeType":"YulAssignment","src":"4263:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4274:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4279:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4270:3:40"},"nodeType":"YulFunctionCall","src":"4270:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4263:3:40"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4056:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4064:3:40","type":""}],"src":"3922:366:40"},{"body":{"nodeType":"YulBlock","src":"4440:220:40","statements":[{"nodeType":"YulAssignment","src":"4450:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4516:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4521:2:40","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4457:58:40"},"nodeType":"YulFunctionCall","src":"4457:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4450:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4622:3:40"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"4533:88:40"},"nodeType":"YulFunctionCall","src":"4533:93:40"},"nodeType":"YulExpressionStatement","src":"4533:93:40"},{"nodeType":"YulAssignment","src":"4635:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4646:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4651:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4642:3:40"},"nodeType":"YulFunctionCall","src":"4642:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4635:3:40"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4428:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4436:3:40","type":""}],"src":"4294:366:40"},{"body":{"nodeType":"YulBlock","src":"4812:220:40","statements":[{"nodeType":"YulAssignment","src":"4822:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4888:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4893:2:40","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4829:58:40"},"nodeType":"YulFunctionCall","src":"4829:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4822:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4994:3:40"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"4905:88:40"},"nodeType":"YulFunctionCall","src":"4905:93:40"},"nodeType":"YulExpressionStatement","src":"4905:93:40"},{"nodeType":"YulAssignment","src":"5007:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"5023:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5014:3:40"},"nodeType":"YulFunctionCall","src":"5014:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5007:3:40"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4800:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4808:3:40","type":""}],"src":"4666:366:40"},{"body":{"nodeType":"YulBlock","src":"5103:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5120:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5143:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5125:17:40"},"nodeType":"YulFunctionCall","src":"5125:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5113:6:40"},"nodeType":"YulFunctionCall","src":"5113:37:40"},"nodeType":"YulExpressionStatement","src":"5113:37:40"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5091:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5098:3:40","type":""}],"src":"5038:118:40"},{"body":{"nodeType":"YulBlock","src":"5223:51:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5240:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5261:5:40"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5245:15:40"},"nodeType":"YulFunctionCall","src":"5245:22:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5233:6:40"},"nodeType":"YulFunctionCall","src":"5233:35:40"},"nodeType":"YulExpressionStatement","src":"5233:35:40"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5211:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5218:3:40","type":""}],"src":"5162:112:40"},{"body":{"nodeType":"YulBlock","src":"5372:118:40","statements":[{"nodeType":"YulAssignment","src":"5382:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5394:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5405:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5390:3:40"},"nodeType":"YulFunctionCall","src":"5390:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5382:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5456:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5469:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5480:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5465:3:40"},"nodeType":"YulFunctionCall","src":"5465:17:40"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5418:37:40"},"nodeType":"YulFunctionCall","src":"5418:65:40"},"nodeType":"YulExpressionStatement","src":"5418:65:40"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5344:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5356:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5367:4:40","type":""}],"src":"5280:210:40"},{"body":{"nodeType":"YulBlock","src":"5614:195:40","statements":[{"nodeType":"YulAssignment","src":"5624:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5636:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5647:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5632:3:40"},"nodeType":"YulFunctionCall","src":"5632:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5624:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5671:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"5682:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5667:3:40"},"nodeType":"YulFunctionCall","src":"5667:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5690:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"5696:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5686:3:40"},"nodeType":"YulFunctionCall","src":"5686:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5660:6:40"},"nodeType":"YulFunctionCall","src":"5660:47:40"},"nodeType":"YulExpressionStatement","src":"5660:47:40"},{"nodeType":"YulAssignment","src":"5716:86:40","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5788:6:40"},{"name":"tail","nodeType":"YulIdentifier","src":"5797:4:40"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5724:63:40"},"nodeType":"YulFunctionCall","src":"5724:78:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5716:4:40"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5586:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5598:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5609:4:40","type":""}],"src":"5496:313:40"},{"body":{"nodeType":"YulBlock","src":"5986:248:40","statements":[{"nodeType":"YulAssignment","src":"5996:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6008:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6019:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6004:3:40"},"nodeType":"YulFunctionCall","src":"6004:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5996:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6043:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6054:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6039:3:40"},"nodeType":"YulFunctionCall","src":"6039:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6062:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"6068:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6058:3:40"},"nodeType":"YulFunctionCall","src":"6058:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6032:6:40"},"nodeType":"YulFunctionCall","src":"6032:47:40"},"nodeType":"YulExpressionStatement","src":"6032:47:40"},{"nodeType":"YulAssignment","src":"6088:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6222:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6096:124:40"},"nodeType":"YulFunctionCall","src":"6096:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6088:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5966:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5981:4:40","type":""}],"src":"5815:419:40"},{"body":{"nodeType":"YulBlock","src":"6411:248:40","statements":[{"nodeType":"YulAssignment","src":"6421:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6433:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6444:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6429:3:40"},"nodeType":"YulFunctionCall","src":"6429:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6421:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6468:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6479:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6464:3:40"},"nodeType":"YulFunctionCall","src":"6464:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6487:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"6493:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6483:3:40"},"nodeType":"YulFunctionCall","src":"6483:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6457:6:40"},"nodeType":"YulFunctionCall","src":"6457:47:40"},"nodeType":"YulExpressionStatement","src":"6457:47:40"},{"nodeType":"YulAssignment","src":"6513:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6647:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6521:124:40"},"nodeType":"YulFunctionCall","src":"6521:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6513:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6391:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6406:4:40","type":""}],"src":"6240:419:40"},{"body":{"nodeType":"YulBlock","src":"6836:248:40","statements":[{"nodeType":"YulAssignment","src":"6846:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6858:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6869:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6854:3:40"},"nodeType":"YulFunctionCall","src":"6854:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6846:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6893:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6904:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6889:3:40"},"nodeType":"YulFunctionCall","src":"6889:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6912:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"6918:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6908:3:40"},"nodeType":"YulFunctionCall","src":"6908:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6882:6:40"},"nodeType":"YulFunctionCall","src":"6882:47:40"},"nodeType":"YulExpressionStatement","src":"6882:47:40"},{"nodeType":"YulAssignment","src":"6938:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7072:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6946:124:40"},"nodeType":"YulFunctionCall","src":"6946:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6938:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6816:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6831:4:40","type":""}],"src":"6665:419:40"},{"body":{"nodeType":"YulBlock","src":"7261:248:40","statements":[{"nodeType":"YulAssignment","src":"7271:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7283:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"7294:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7279:3:40"},"nodeType":"YulFunctionCall","src":"7279:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7271:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7318:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"7329:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7314:3:40"},"nodeType":"YulFunctionCall","src":"7314:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7337:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"7343:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7333:3:40"},"nodeType":"YulFunctionCall","src":"7333:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7307:6:40"},"nodeType":"YulFunctionCall","src":"7307:47:40"},"nodeType":"YulExpressionStatement","src":"7307:47:40"},{"nodeType":"YulAssignment","src":"7363:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7497:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7371:124:40"},"nodeType":"YulFunctionCall","src":"7371:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7363:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7241:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7256:4:40","type":""}],"src":"7090:419:40"},{"body":{"nodeType":"YulBlock","src":"7686:248:40","statements":[{"nodeType":"YulAssignment","src":"7696:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7708:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"7719:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7704:3:40"},"nodeType":"YulFunctionCall","src":"7704:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7696:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7743:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"7754:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7739:3:40"},"nodeType":"YulFunctionCall","src":"7739:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7762:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"7768:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7758:3:40"},"nodeType":"YulFunctionCall","src":"7758:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7732:6:40"},"nodeType":"YulFunctionCall","src":"7732:47:40"},"nodeType":"YulExpressionStatement","src":"7732:47:40"},{"nodeType":"YulAssignment","src":"7788:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7922:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7796:124:40"},"nodeType":"YulFunctionCall","src":"7796:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7788:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7666:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7681:4:40","type":""}],"src":"7515:419:40"},{"body":{"nodeType":"YulBlock","src":"8111:248:40","statements":[{"nodeType":"YulAssignment","src":"8121:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8133:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8144:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8129:3:40"},"nodeType":"YulFunctionCall","src":"8129:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8121:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8168:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8179:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8164:3:40"},"nodeType":"YulFunctionCall","src":"8164:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8187:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"8193:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8183:3:40"},"nodeType":"YulFunctionCall","src":"8183:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8157:6:40"},"nodeType":"YulFunctionCall","src":"8157:47:40"},"nodeType":"YulExpressionStatement","src":"8157:47:40"},{"nodeType":"YulAssignment","src":"8213:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8347:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8221:124:40"},"nodeType":"YulFunctionCall","src":"8221:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8213:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8091:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8106:4:40","type":""}],"src":"7940:419:40"},{"body":{"nodeType":"YulBlock","src":"8536:248:40","statements":[{"nodeType":"YulAssignment","src":"8546:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8558:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8569:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8554:3:40"},"nodeType":"YulFunctionCall","src":"8554:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8546:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8593:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8604:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8589:3:40"},"nodeType":"YulFunctionCall","src":"8589:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8612:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"8618:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8608:3:40"},"nodeType":"YulFunctionCall","src":"8608:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8582:6:40"},"nodeType":"YulFunctionCall","src":"8582:47:40"},"nodeType":"YulExpressionStatement","src":"8582:47:40"},{"nodeType":"YulAssignment","src":"8638:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8772:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8646:124:40"},"nodeType":"YulFunctionCall","src":"8646:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8638:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8516:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8531:4:40","type":""}],"src":"8365:419:40"},{"body":{"nodeType":"YulBlock","src":"8888:124:40","statements":[{"nodeType":"YulAssignment","src":"8898:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8910:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8921:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8906:3:40"},"nodeType":"YulFunctionCall","src":"8906:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8898:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8978:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8991:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9002:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8987:3:40"},"nodeType":"YulFunctionCall","src":"8987:17:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8934:43:40"},"nodeType":"YulFunctionCall","src":"8934:71:40"},"nodeType":"YulExpressionStatement","src":"8934:71:40"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8860:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8872:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8883:4:40","type":""}],"src":"8790:222:40"},{"body":{"nodeType":"YulBlock","src":"9112:120:40","statements":[{"nodeType":"YulAssignment","src":"9122:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9134:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9145:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9130:3:40"},"nodeType":"YulFunctionCall","src":"9130:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9122:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9198:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9211:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9222:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9207:3:40"},"nodeType":"YulFunctionCall","src":"9207:17:40"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"9158:39:40"},"nodeType":"YulFunctionCall","src":"9158:67:40"},"nodeType":"YulExpressionStatement","src":"9158:67:40"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9084:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9096:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9107:4:40","type":""}],"src":"9018:214:40"},{"body":{"nodeType":"YulBlock","src":"9297:40:40","statements":[{"nodeType":"YulAssignment","src":"9308:22:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9324:5:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9318:5:40"},"nodeType":"YulFunctionCall","src":"9318:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9308:6:40"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9280:5:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9290:6:40","type":""}],"src":"9238:99:40"},{"body":{"nodeType":"YulBlock","src":"9439:73:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9456:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"9461:6:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9449:6:40"},"nodeType":"YulFunctionCall","src":"9449:19:40"},"nodeType":"YulExpressionStatement","src":"9449:19:40"},{"nodeType":"YulAssignment","src":"9477:29:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9496:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"9501:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9492:3:40"},"nodeType":"YulFunctionCall","src":"9492:14:40"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9477:11:40"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9411:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"9416:6:40","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9427:11:40","type":""}],"src":"9343:169:40"},{"body":{"nodeType":"YulBlock","src":"9562:261:40","statements":[{"nodeType":"YulAssignment","src":"9572:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9595:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9577:17:40"},"nodeType":"YulFunctionCall","src":"9577:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9572:1:40"}]},{"nodeType":"YulAssignment","src":"9606:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9629:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9611:17:40"},"nodeType":"YulFunctionCall","src":"9611:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9606:1:40"}]},{"body":{"nodeType":"YulBlock","src":"9769:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9771:16:40"},"nodeType":"YulFunctionCall","src":"9771:18:40"},"nodeType":"YulExpressionStatement","src":"9771:18:40"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9690:1:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9697:66:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"9765:1:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9693:3:40"},"nodeType":"YulFunctionCall","src":"9693:74:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9687:2:40"},"nodeType":"YulFunctionCall","src":"9687:81:40"},"nodeType":"YulIf","src":"9684:2:40"},{"nodeType":"YulAssignment","src":"9801:16:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9812:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"9815:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9808:3:40"},"nodeType":"YulFunctionCall","src":"9808:9:40"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9801:3:40"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9549:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"9552:1:40","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9558:3:40","type":""}],"src":"9518:305:40"},{"body":{"nodeType":"YulBlock","src":"9874:51:40","statements":[{"nodeType":"YulAssignment","src":"9884:35:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9913:5:40"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9895:17:40"},"nodeType":"YulFunctionCall","src":"9895:24:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9884:7:40"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9856:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9866:7:40","type":""}],"src":"9829:96:40"},{"body":{"nodeType":"YulBlock","src":"9973:48:40","statements":[{"nodeType":"YulAssignment","src":"9983:32:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10008:5:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10001:6:40"},"nodeType":"YulFunctionCall","src":"10001:13:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9994:6:40"},"nodeType":"YulFunctionCall","src":"9994:21:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9983:7:40"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9955:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9965:7:40","type":""}],"src":"9931:90:40"},{"body":{"nodeType":"YulBlock","src":"10072:81:40","statements":[{"nodeType":"YulAssignment","src":"10082:65:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10097:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"10104:42:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10093:3:40"},"nodeType":"YulFunctionCall","src":"10093:54:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10082:7:40"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10054:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10064:7:40","type":""}],"src":"10027:126:40"},{"body":{"nodeType":"YulBlock","src":"10204:32:40","statements":[{"nodeType":"YulAssignment","src":"10214:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"10225:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10214:7:40"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10186:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10196:7:40","type":""}],"src":"10159:77:40"},{"body":{"nodeType":"YulBlock","src":"10285:43:40","statements":[{"nodeType":"YulAssignment","src":"10295:27:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10310:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"10317:4:40","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10306:3:40"},"nodeType":"YulFunctionCall","src":"10306:16:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10295:7:40"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10267:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10277:7:40","type":""}],"src":"10242:86:40"},{"body":{"nodeType":"YulBlock","src":"10383:258:40","statements":[{"nodeType":"YulVariableDeclaration","src":"10393:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"10402:1:40","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10397:1:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"10462:63:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10487:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"10492:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10483:3:40"},"nodeType":"YulFunctionCall","src":"10483:11:40"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10506:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"10511:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10502:3:40"},"nodeType":"YulFunctionCall","src":"10502:11:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10496:5:40"},"nodeType":"YulFunctionCall","src":"10496:18:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10476:6:40"},"nodeType":"YulFunctionCall","src":"10476:39:40"},"nodeType":"YulExpressionStatement","src":"10476:39:40"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10423:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"10426:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10420:2:40"},"nodeType":"YulFunctionCall","src":"10420:13:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10434:19:40","statements":[{"nodeType":"YulAssignment","src":"10436:15:40","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10445:1:40"},{"kind":"number","nodeType":"YulLiteral","src":"10448:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10441:3:40"},"nodeType":"YulFunctionCall","src":"10441:10:40"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10436:1:40"}]}]},"pre":{"nodeType":"YulBlock","src":"10416:3:40","statements":[]},"src":"10412:113:40"},{"body":{"nodeType":"YulBlock","src":"10559:76:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10609:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"10614:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10605:3:40"},"nodeType":"YulFunctionCall","src":"10605:16:40"},{"kind":"number","nodeType":"YulLiteral","src":"10623:1:40","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10598:6:40"},"nodeType":"YulFunctionCall","src":"10598:27:40"},"nodeType":"YulExpressionStatement","src":"10598:27:40"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10540:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"10543:6:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10537:2:40"},"nodeType":"YulFunctionCall","src":"10537:13:40"},"nodeType":"YulIf","src":"10534:2:40"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10365:3:40","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10370:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"10375:6:40","type":""}],"src":"10334:307:40"},{"body":{"nodeType":"YulBlock","src":"10698:269:40","statements":[{"nodeType":"YulAssignment","src":"10708:22:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10722:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"10728:1:40","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10718:3:40"},"nodeType":"YulFunctionCall","src":"10718:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10708:6:40"}]},{"nodeType":"YulVariableDeclaration","src":"10739:38:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10769:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"10775:1:40","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10765:3:40"},"nodeType":"YulFunctionCall","src":"10765:12:40"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10743:18:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"10816:51:40","statements":[{"nodeType":"YulAssignment","src":"10830:27:40","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10844:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"10852:4:40","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10840:3:40"},"nodeType":"YulFunctionCall","src":"10840:17:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10830:6:40"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10796:18:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10789:6:40"},"nodeType":"YulFunctionCall","src":"10789:26:40"},"nodeType":"YulIf","src":"10786:2:40"},{"body":{"nodeType":"YulBlock","src":"10919:42:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10933:16:40"},"nodeType":"YulFunctionCall","src":"10933:18:40"},"nodeType":"YulExpressionStatement","src":"10933:18:40"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10883:18:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10906:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"10914:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10903:2:40"},"nodeType":"YulFunctionCall","src":"10903:14:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10880:2:40"},"nodeType":"YulFunctionCall","src":"10880:38:40"},"nodeType":"YulIf","src":"10877:2:40"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10682:4:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10691:6:40","type":""}],"src":"10647:320:40"},{"body":{"nodeType":"YulBlock","src":"11001:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11018:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11021:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11011:6:40"},"nodeType":"YulFunctionCall","src":"11011:88:40"},"nodeType":"YulExpressionStatement","src":"11011:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11115:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11118:4:40","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11108:6:40"},"nodeType":"YulFunctionCall","src":"11108:15:40"},"nodeType":"YulExpressionStatement","src":"11108:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11139:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11142:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11132:6:40"},"nodeType":"YulFunctionCall","src":"11132:15:40"},"nodeType":"YulExpressionStatement","src":"11132:15:40"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10973:180:40"},{"body":{"nodeType":"YulBlock","src":"11187:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11204:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11207:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11197:6:40"},"nodeType":"YulFunctionCall","src":"11197:88:40"},"nodeType":"YulExpressionStatement","src":"11197:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11301:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11304:4:40","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11294:6:40"},"nodeType":"YulFunctionCall","src":"11294:15:40"},"nodeType":"YulExpressionStatement","src":"11294:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11325:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11328:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11318:6:40"},"nodeType":"YulFunctionCall","src":"11318:15:40"},"nodeType":"YulExpressionStatement","src":"11318:15:40"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"11159:180:40"},{"body":{"nodeType":"YulBlock","src":"11393:54:40","statements":[{"nodeType":"YulAssignment","src":"11403:38:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11421:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:40","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11417:3:40"},"nodeType":"YulFunctionCall","src":"11417:14:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11437:2:40","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11433:3:40"},"nodeType":"YulFunctionCall","src":"11433:7:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11413:3:40"},"nodeType":"YulFunctionCall","src":"11413:28:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11403:6:40"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11376:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11386:6:40","type":""}],"src":"11345:102:40"},{"body":{"nodeType":"YulBlock","src":"11559:116:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11581:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"11589:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11577:3:40"},"nodeType":"YulFunctionCall","src":"11577:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"11593:34:40","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11570:6:40"},"nodeType":"YulFunctionCall","src":"11570:58:40"},"nodeType":"YulExpressionStatement","src":"11570:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11649:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"11657:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11645:3:40"},"nodeType":"YulFunctionCall","src":"11645:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"11662:5:40","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11638:6:40"},"nodeType":"YulFunctionCall","src":"11638:30:40"},"nodeType":"YulExpressionStatement","src":"11638:30:40"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11551:6:40","type":""}],"src":"11453:222:40"},{"body":{"nodeType":"YulBlock","src":"11787:115:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11809:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"11817:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11805:3:40"},"nodeType":"YulFunctionCall","src":"11805:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"11821:34:40","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11798:6:40"},"nodeType":"YulFunctionCall","src":"11798:58:40"},"nodeType":"YulExpressionStatement","src":"11798:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11877:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"11885:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11873:3:40"},"nodeType":"YulFunctionCall","src":"11873:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"11890:4:40","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11866:6:40"},"nodeType":"YulFunctionCall","src":"11866:29:40"},"nodeType":"YulExpressionStatement","src":"11866:29:40"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11779:6:40","type":""}],"src":"11681:221:40"},{"body":{"nodeType":"YulBlock","src":"12014:73:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12036:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12044:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12032:3:40"},"nodeType":"YulFunctionCall","src":"12032:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"12048:31:40","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12025:6:40"},"nodeType":"YulFunctionCall","src":"12025:55:40"},"nodeType":"YulExpressionStatement","src":"12025:55:40"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12006:6:40","type":""}],"src":"11908:179:40"},{"body":{"nodeType":"YulBlock","src":"12199:119:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12221:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12229:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12217:3:40"},"nodeType":"YulFunctionCall","src":"12217:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"12233:34:40","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12210:6:40"},"nodeType":"YulFunctionCall","src":"12210:58:40"},"nodeType":"YulExpressionStatement","src":"12210:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12289:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12297:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12285:3:40"},"nodeType":"YulFunctionCall","src":"12285:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"12302:8:40","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12278:6:40"},"nodeType":"YulFunctionCall","src":"12278:33:40"},"nodeType":"YulExpressionStatement","src":"12278:33:40"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12191:6:40","type":""}],"src":"12093:225:40"},{"body":{"nodeType":"YulBlock","src":"12430:118:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12452:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12460:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12448:3:40"},"nodeType":"YulFunctionCall","src":"12448:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"12464:34:40","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12441:6:40"},"nodeType":"YulFunctionCall","src":"12441:58:40"},"nodeType":"YulExpressionStatement","src":"12441:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12520:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12528:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12516:3:40"},"nodeType":"YulFunctionCall","src":"12516:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"12533:7:40","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12509:6:40"},"nodeType":"YulFunctionCall","src":"12509:32:40"},"nodeType":"YulExpressionStatement","src":"12509:32:40"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12422:6:40","type":""}],"src":"12324:224:40"},{"body":{"nodeType":"YulBlock","src":"12660:117:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12682:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12690:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12678:3:40"},"nodeType":"YulFunctionCall","src":"12678:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"12694:34:40","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12671:6:40"},"nodeType":"YulFunctionCall","src":"12671:58:40"},"nodeType":"YulExpressionStatement","src":"12671:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12750:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12758:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12746:3:40"},"nodeType":"YulFunctionCall","src":"12746:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"12763:6:40","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12739:6:40"},"nodeType":"YulFunctionCall","src":"12739:31:40"},"nodeType":"YulExpressionStatement","src":"12739:31:40"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12652:6:40","type":""}],"src":"12554:223:40"},{"body":{"nodeType":"YulBlock","src":"12889:118:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12911:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12919:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12907:3:40"},"nodeType":"YulFunctionCall","src":"12907:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"12923:34:40","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12900:6:40"},"nodeType":"YulFunctionCall","src":"12900:58:40"},"nodeType":"YulExpressionStatement","src":"12900:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12979:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12987:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12975:3:40"},"nodeType":"YulFunctionCall","src":"12975:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"12992:7:40","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12968:6:40"},"nodeType":"YulFunctionCall","src":"12968:32:40"},"nodeType":"YulExpressionStatement","src":"12968:32:40"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12881:6:40","type":""}],"src":"12783:224:40"},{"body":{"nodeType":"YulBlock","src":"13056:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"13113:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13122:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13125:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13115:6:40"},"nodeType":"YulFunctionCall","src":"13115:12:40"},"nodeType":"YulExpressionStatement","src":"13115:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13079:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13104:5:40"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13086:17:40"},"nodeType":"YulFunctionCall","src":"13086:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13076:2:40"},"nodeType":"YulFunctionCall","src":"13076:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13069:6:40"},"nodeType":"YulFunctionCall","src":"13069:43:40"},"nodeType":"YulIf","src":"13066:2:40"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13049:5:40","type":""}],"src":"13013:122:40"},{"body":{"nodeType":"YulBlock","src":"13184:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"13241:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13250:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13253:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13243:6:40"},"nodeType":"YulFunctionCall","src":"13243:12:40"},"nodeType":"YulExpressionStatement","src":"13243:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13207:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13232:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13214:17:40"},"nodeType":"YulFunctionCall","src":"13214:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13204:2:40"},"nodeType":"YulFunctionCall","src":"13204:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13197:6:40"},"nodeType":"YulFunctionCall","src":"13197:43:40"},"nodeType":"YulIf","src":"13194:2:40"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13177:5:40","type":""}],"src":"13141:122:40"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":40,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d19565b60405180910390f35b6100e660048036038101906100e19190610b67565b610308565b6040516100f39190610cfe565b60405180910390f35b61010461032b565b6040516101119190610e1b565b60405180910390f35b610134600480360381019061012f9190610b18565b610335565b6040516101419190610cfe565b60405180910390f35b610152610364565b60405161015f9190610e36565b60405180910390f35b610182600480360381019061017d9190610b67565b61036d565b60405161018f9190610cfe565b60405180910390f35b6101b260048036038101906101ad9190610ab3565b6103a4565b6040516101bf9190610e1b565b60405180910390f35b6101d06103ec565b6040516101dd9190610d19565b60405180910390f35b61020060048036038101906101fb9190610b67565b61047e565b60405161020d9190610cfe565b60405180910390f35b610230600480360381019061022b9190610b67565b6104f5565b60405161023d9190610cfe565b60405180910390f35b610260600480360381019061025b9190610adc565b610518565b60405161026d9190610e1b565b60405180910390f35b60606003805461028590610f4b565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f4b565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e6d565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f4b565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f4b565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610dfb565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610ddb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d5b565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e1b565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d7b565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dbb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d3b565b60405180910390fd5b6108e9838383610a7f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610d9b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a029190610e6d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a669190610e1b565b60405180910390a3610a79848484610a84565b50505050565b505050565b505050565b600081359050610a98816111ef565b92915050565b600081359050610aad81611206565b92915050565b600060208284031215610ac557600080fd5b6000610ad384828501610a89565b91505092915050565b60008060408385031215610aef57600080fd5b6000610afd85828601610a89565b9250506020610b0e85828601610a89565b9150509250929050565b600080600060608486031215610b2d57600080fd5b6000610b3b86828701610a89565b9350506020610b4c86828701610a89565b9250506040610b5d86828701610a9e565b9150509250925092565b60008060408385031215610b7a57600080fd5b6000610b8885828601610a89565b9250506020610b9985828601610a9e565b9150509250929050565b610bac81610ed5565b82525050565b6000610bbd82610e51565b610bc78185610e5c565b9350610bd7818560208601610f18565b610be081610fdb565b840191505092915050565b6000610bf8602383610e5c565b9150610c0382610fec565b604082019050919050565b6000610c1b602283610e5c565b9150610c268261103b565b604082019050919050565b6000610c3e601d83610e5c565b9150610c498261108a565b602082019050919050565b6000610c61602683610e5c565b9150610c6c826110b3565b604082019050919050565b6000610c84602583610e5c565b9150610c8f82611102565b604082019050919050565b6000610ca7602483610e5c565b9150610cb282611151565b604082019050919050565b6000610cca602583610e5c565b9150610cd5826111a0565b604082019050919050565b610ce981610f01565b82525050565b610cf881610f0b565b82525050565b6000602082019050610d136000830184610ba3565b92915050565b60006020820190508181036000830152610d338184610bb2565b905092915050565b60006020820190508181036000830152610d5481610beb565b9050919050565b60006020820190508181036000830152610d7481610c0e565b9050919050565b60006020820190508181036000830152610d9481610c31565b9050919050565b60006020820190508181036000830152610db481610c54565b9050919050565b60006020820190508181036000830152610dd481610c77565b9050919050565b60006020820190508181036000830152610df481610c9a565b9050919050565b60006020820190508181036000830152610e1481610cbd565b9050919050565b6000602082019050610e306000830184610ce0565b92915050565b6000602082019050610e4b6000830184610cef565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7882610f01565b9150610e8383610f01565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eb857610eb7610f7d565b5b828201905092915050565b6000610ece82610ee1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f36578082015181840152602081019050610f1b565b83811115610f45576000848401525b50505050565b60006002820490506001821680610f6357607f821691505b60208210811415610f7757610f76610fac565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6111f881610ec3565b811461120357600080fd5b50565b61120f81610f01565b811461121a57600080fd5b5056fea264697066735822122086f8550a97982bbe44a67a0be06fab2db39258aac02301a45830a9eacf0f294764736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF4B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA79 DUP5 DUP5 DUP5 PUSH2 0xA84 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA98 DUP2 PUSH2 0x11EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAAD DUP2 PUSH2 0x1206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD3 DUP5 DUP3 DUP6 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0E DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB3B DUP7 DUP3 DUP8 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4C DUP7 DUP3 DUP8 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB5D DUP7 DUP3 DUP8 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB88 DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB99 DUP6 DUP3 DUP7 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAC DUP2 PUSH2 0xED5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0xBC7 DUP2 DUP6 PUSH2 0xE5C JUMP JUMPDEST SWAP4 POP PUSH2 0xBD7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF18 JUMP JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0xFDB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF8 PUSH1 0x23 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC03 DUP3 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1B PUSH1 0x22 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC26 DUP3 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3E PUSH1 0x1D DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC49 DUP3 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC61 PUSH1 0x26 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC6C DUP3 PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC84 PUSH1 0x25 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xC8F DUP3 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA7 PUSH1 0x24 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xCB2 DUP3 PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCA PUSH1 0x25 DUP4 PUSH2 0xE5C JUMP JUMPDEST SWAP2 POP PUSH2 0xCD5 DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE9 DUP2 PUSH2 0xF01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCF8 DUP2 PUSH2 0xF0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD33 DUP2 DUP5 PUSH2 0xBB2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD54 DUP2 PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD74 DUP2 PUSH2 0xC0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD94 DUP2 PUSH2 0xC31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDB4 DUP2 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDD4 DUP2 PUSH2 0xC77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDF4 DUP2 PUSH2 0xC9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE14 DUP2 PUSH2 0xCBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE30 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE78 DUP3 PUSH2 0xF01 JUMP JUMPDEST SWAP2 POP PUSH2 0xE83 DUP4 PUSH2 0xF01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEB8 JUMPI PUSH2 0xEB7 PUSH2 0xF7D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECE DUP3 PUSH2 0xEE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF36 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF1B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF45 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF63 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF76 PUSH2 0xFAC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x11F8 DUP2 PUSH2 0xEC3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x120F DUP2 PUSH2 0xF01 JUMP JUMPDEST DUP2 EQ PUSH2 0x121A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xF8 SSTORE EXP SWAP8 SWAP9 0x2B 0xBE DIFFICULTY 0xA6 PUSH27 0xBE06FAB2DB39258AAC02301A45830A9EACF0F294764736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"1403:11214:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5192:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3093:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3976:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:98;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;3244:106::-;3305:7;3331:12;;3324:19;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;3093:91::-;3151:5;3175:2;3168:9;;3093:91;:::o;5873:234::-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;3408:125::-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;3976:149::-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;640:96:32:-;693:7;719:10;712:17;;640:96;:::o;10110:370:25:-;10258:1;10241:19;;:5;:19;;;;10233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10338:1;10319:21;;:7;:21;;;;10311:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10420:6;10390:11;:18;10402:5;10390:18;;;;;;;;;;;;;;;:27;10409:7;10390:27;;;;;;;;;;;;;;;:36;;;;10457:7;10441:32;;10450:5;10441:32;;;10466:6;10441:32;;;;;;:::i;:::-;;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;10977:17;10957:16;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10953:243;10761:441;;;;:::o;7475:651::-;7617:1;7601:18;;:4;:18;;;;7593:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7693:1;7679:16;;:2;:16;;;;7671:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;7795:19;7817:9;:15;7827:4;7817:15;;;;;;;;;;;;;;;;7795:37;;7865:6;7850:11;:21;;7842:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7980:6;7966:11;:20;7948:9;:15;7958:4;7948:15;;;;;;;;;;;;;;;:38;;;;8023:6;8006:9;:13;8016:2;8006:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;;;:::i;:::-;;;;;;;;8082:37;8102:4;8108:2;8112:6;8082:19;:37::i;:::-;7475:651;;;;:::o;11786:121::-;;;;:::o;12495:120::-;;;;:::o;7:139:40:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;633:6;641;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;1055:6;1063;1071;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;1604:6;1612;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:364::-;2152:3;2180:39;2213:5;2180:39;:::i;:::-;2235:71;2299:6;2294:3;2235:71;:::i;:::-;2228:78;;2315:52;2360:6;2355:3;2348:4;2341:5;2337:16;2315:52;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2156:272;;;;;:::o;2434:366::-;2576:3;2597:67;2661:2;2656:3;2597:67;:::i;:::-;2590:74;;2673:93;2762:3;2673:93;:::i;:::-;2791:2;2786:3;2782:12;2775:19;;2580:220;;;:::o;2806:366::-;2948:3;2969:67;3033:2;3028:3;2969:67;:::i;:::-;2962:74;;3045:93;3134:3;3045:93;:::i;:::-;3163:2;3158:3;3154:12;3147:19;;2952:220;;;:::o;3178:366::-;3320:3;3341:67;3405:2;3400:3;3341:67;:::i;:::-;3334:74;;3417:93;3506:3;3417:93;:::i;:::-;3535:2;3530:3;3526:12;3519:19;;3324:220;;;:::o;3550:366::-;3692:3;3713:67;3777:2;3772:3;3713:67;:::i;:::-;3706:74;;3789:93;3878:3;3789:93;:::i;:::-;3907:2;3902:3;3898:12;3891:19;;3696:220;;;:::o;3922:366::-;4064:3;4085:67;4149:2;4144:3;4085:67;:::i;:::-;4078:74;;4161:93;4250:3;4161:93;:::i;:::-;4279:2;4274:3;4270:12;4263:19;;4068:220;;;:::o;4294:366::-;4436:3;4457:67;4521:2;4516:3;4457:67;:::i;:::-;4450:74;;4533:93;4622:3;4533:93;:::i;:::-;4651:2;4646:3;4642:12;4635:19;;4440:220;;;:::o;4666:366::-;4808:3;4829:67;4893:2;4888:3;4829:67;:::i;:::-;4822:74;;4905:93;4994:3;4905:93;:::i;:::-;5023:2;5018:3;5014:12;5007:19;;4812:220;;;:::o;5038:118::-;5125:24;5143:5;5125:24;:::i;:::-;5120:3;5113:37;5103:53;;:::o;5162:112::-;5245:22;5261:5;5245:22;:::i;:::-;5240:3;5233:35;5223:51;;:::o;5280:210::-;5367:4;5405:2;5394:9;5390:18;5382:26;;5418:65;5480:1;5469:9;5465:17;5456:6;5418:65;:::i;:::-;5372:118;;;;:::o;5496:313::-;5609:4;5647:2;5636:9;5632:18;5624:26;;5696:9;5690:4;5686:20;5682:1;5671:9;5667:17;5660:47;5724:78;5797:4;5788:6;5724:78;:::i;:::-;5716:86;;5614:195;;;;:::o;5815:419::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6068:9;6062:4;6058:20;6054:1;6043:9;6039:17;6032:47;6096:131;6222:4;6096:131;:::i;:::-;6088:139;;5986:248;;;:::o;6240:419::-;6406:4;6444:2;6433:9;6429:18;6421:26;;6493:9;6487:4;6483:20;6479:1;6468:9;6464:17;6457:47;6521:131;6647:4;6521:131;:::i;:::-;6513:139;;6411:248;;;:::o;6665:419::-;6831:4;6869:2;6858:9;6854:18;6846:26;;6918:9;6912:4;6908:20;6904:1;6893:9;6889:17;6882:47;6946:131;7072:4;6946:131;:::i;:::-;6938:139;;6836:248;;;:::o;7090:419::-;7256:4;7294:2;7283:9;7279:18;7271:26;;7343:9;7337:4;7333:20;7329:1;7318:9;7314:17;7307:47;7371:131;7497:4;7371:131;:::i;:::-;7363:139;;7261:248;;;:::o;7515:419::-;7681:4;7719:2;7708:9;7704:18;7696:26;;7768:9;7762:4;7758:20;7754:1;7743:9;7739:17;7732:47;7796:131;7922:4;7796:131;:::i;:::-;7788:139;;7686:248;;;:::o;7940:419::-;8106:4;8144:2;8133:9;8129:18;8121:26;;8193:9;8187:4;8183:20;8179:1;8168:9;8164:17;8157:47;8221:131;8347:4;8221:131;:::i;:::-;8213:139;;8111:248;;;:::o;8365:419::-;8531:4;8569:2;8558:9;8554:18;8546:26;;8618:9;8612:4;8608:20;8604:1;8593:9;8589:17;8582:47;8646:131;8772:4;8646:131;:::i;:::-;8638:139;;8536:248;;;:::o;8790:222::-;8883:4;8921:2;8910:9;8906:18;8898:26;;8934:71;9002:1;8991:9;8987:17;8978:6;8934:71;:::i;:::-;8888:124;;;;:::o;9018:214::-;9107:4;9145:2;9134:9;9130:18;9122:26;;9158:67;9222:1;9211:9;9207:17;9198:6;9158:67;:::i;:::-;9112:120;;;;:::o;9238:99::-;9290:6;9324:5;9318:12;9308:22;;9297:40;;;:::o;9343:169::-;9427:11;9461:6;9456:3;9449:19;9501:4;9496:3;9492:14;9477:29;;9439:73;;;;:::o;9518:305::-;9558:3;9577:20;9595:1;9577:20;:::i;:::-;9572:25;;9611:20;9629:1;9611:20;:::i;:::-;9606:25;;9765:1;9697:66;9693:74;9690:1;9687:81;9684:2;;;9771:18;;:::i;:::-;9684:2;9815:1;9812;9808:9;9801:16;;9562:261;;;;:::o;9829:96::-;9866:7;9895:24;9913:5;9895:24;:::i;:::-;9884:35;;9874:51;;;:::o;9931:90::-;9965:7;10008:5;10001:13;9994:21;9983:32;;9973:48;;;:::o;10027:126::-;10064:7;10104:42;10097:5;10093:54;10082:65;;10072:81;;;:::o;10159:77::-;10196:7;10225:5;10214:16;;10204:32;;;:::o;10242:86::-;10277:7;10317:4;10310:5;10306:16;10295:27;;10285:43;;;:::o;10334:307::-;10402:1;10412:113;10426:6;10423:1;10420:13;10412:113;;;10511:1;10506:3;10502:11;10496:18;10492:1;10487:3;10483:11;10476:39;10448:2;10445:1;10441:10;10436:15;;10412:113;;;10543:6;10540:1;10537:13;10534:2;;;10623:1;10614:6;10609:3;10605:16;10598:27;10534:2;10383:258;;;;:::o;10647:320::-;10691:6;10728:1;10722:4;10718:12;10708:22;;10775:1;10769:4;10765:12;10796:18;10786:2;;10852:4;10844:6;10840:17;10830:27;;10786:2;10914;10906:6;10903:14;10883:18;10880:38;10877:2;;;10933:18;;:::i;:::-;10877:2;10698:269;;;;:::o;10973:180::-;11021:77;11018:1;11011:88;11118:4;11115:1;11108:15;11142:4;11139:1;11132:15;11159:180;11207:77;11204:1;11197:88;11304:4;11301:1;11294:15;11328:4;11325:1;11318:15;11345:102;11386:6;11437:2;11433:7;11428:2;11421:5;11417:14;11413:28;11403:38;;11393:54;;;:::o;11453:222::-;11593:34;11589:1;11581:6;11577:14;11570:58;11662:5;11657:2;11649:6;11645:15;11638:30;11559:116;:::o;11681:221::-;11821:34;11817:1;11809:6;11805:14;11798:58;11890:4;11885:2;11877:6;11873:15;11866:29;11787:115;:::o;11908:179::-;12048:31;12044:1;12036:6;12032:14;12025:55;12014:73;:::o;12093:225::-;12233:34;12229:1;12221:6;12217:14;12210:58;12302:8;12297:2;12289:6;12285:15;12278:33;12199:119;:::o;12324:224::-;12464:34;12460:1;12452:6;12448:14;12441:58;12533:7;12528:2;12520:6;12516:15;12509:32;12430:118;:::o;12554:223::-;12694:34;12690:1;12682:6;12678:14;12671:58;12763:6;12758:2;12750:6;12746:15;12739:31;12660:117;:::o;12783:224::-;12923:34;12919:1;12911:6;12907:14;12900:58;12992:7;12987:2;12979:6;12975:15;12968:32;12889:118;:::o;13013:122::-;13086:24;13104:5;13086:24;:::i;:::-;13079:5;13076:35;13066:2;;13125:1;13122;13115:12;13066:2;13056:79;:::o;13141:122::-;13214:24;13232:5;13214:24;:::i;:::-;13207:5;13204:35;13194:2;;13253:1;13250;13243:12;13194:2;13184:79;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":4067,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":4073,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":4075,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":4077,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":4079,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol":{"ERC20Snapshot":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"}],"name":"Snapshot","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"balanceOfAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"name":"totalSupplyAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","balanceOfAt(address,uint256)":"4ee2cd7e","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","totalSupplyAt(uint256)":"981b24d0","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Snapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract extends an ERC20 token with a snapshot mechanism. When a snapshot is created, the balances and total supply at the time are recorded for later access. This can be used to safely create mechanisms based on token balances such as trustless dividends or weighted voting. In naive implementations it's possible to perform a \\\"double spend\\\" attack by reusing the same balance from different accounts. By using snapshots to calculate dividends or voting power, those attacks no longer apply. It can also be used to create an efficient ERC20 forking mechanism. Snapshots are created by the internal {_snapshot} function, which will emit the {Snapshot} event and return a snapshot id. To get the total supply at the time of a snapshot, call the function {totalSupplyAt} with the snapshot id. To get the balance of an account at the time of a snapshot, call the {balanceOfAt} function with the snapshot id and the account address. NOTE: Snapshot policy can be customized by overriding the {_getCurrentSnapshotId} method. For example, having it return `block.number` will trigger the creation of snapshot at the beginning of each new block. When overriding this function, be careful about the monotonicity of its result. Non-monotonic snapshot ids will break the contract. Implementing snapshots for every block using this method will incur significant gas costs. For a gas-efficient alternative consider {ERC20Votes}. ==== Gas Costs Snapshots are efficient. Snapshot creation is _O(1)_. Retrieval of balances or total supply from a snapshot is _O(log n)_ in the number of snapshots that have been created, although _n_ for a specific account will generally be much smaller since identical balances in subsequent snapshots are stored as a single entry. There is a constant overhead for normal ERC20 transfers due to the additional snapshot bookkeeping. This overhead is only significant for the first transfer that immediately follows a snapshot for a particular account. Subsequent transfers will have normal cost until the next snapshot, and so on.\",\"events\":{\"Snapshot(uint256)\":{\"details\":\"Emitted by {_snapshot} when a snapshot identified by `id` is created.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Retrieves the balance of `account` at the time `snapshotId` was created.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"totalSupplyAt(uint256)\":{\"details\":\"Retrieves the total supply at the time `snapshotId` was created.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol\":\"ERC20Snapshot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol\":{\"keccak256\":\"0x9f3a9fc338edd87bff11d626ee6f365ac72f03a8841c4a2938438ef81e8cf1d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d2192ec88279638f4866b2c09e017702699fdb995bf1ca167b7110bc5b29d51\",\"dweb:/ipfs/Qme2JhqYoH25xKpgC7qj8o9yKofJyragCuHfX4CQMuPuef\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa7bc891be2bc5948340a8fb14ad36c8846230c9086269e37f3febf0dc239c9f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a002427adcb3b71f2c2ad8212fa789997d5662b0c7be941bc5c52b26b83433cc\",\"dweb:/ipfs/QmR1EfpL9zQ3zT25kRZdjcjWBqaBhdSun5MLnJV1ZdzEn1\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":4067,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":4073,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":4075,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":4077,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":4079,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":4743,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot","label":"_accountBalanceSnapshots","offset":0,"slot":"5","type":"t_mapping(t_address,t_struct(Snapshots)4738_storage)"},{"astId":4746,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot","label":"_totalSupplySnapshots","offset":0,"slot":"6","type":"t_struct(Snapshots)4738_storage"},{"astId":4749,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot","label":"_currentSnapshotId","offset":0,"slot":"8","type":"t_struct(Counter)5389_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Snapshots)4738_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ERC20Snapshot.Snapshots)","numberOfBytes":"32","value":"t_struct(Snapshots)4738_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)5389_storage":{"encoding":"inplace","label":"struct Counters.Counter","members":[{"astId":5388,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(Snapshots)4738_storage":{"encoding":"inplace","label":"struct ERC20Snapshot.Snapshots","members":[{"astId":4734,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot","label":"ids","offset":0,"slot":"0","type":"t_array(t_uint256)dyn_storage"},{"astId":4737,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot","label":"values","offset":0,"slot":"1","type":"t_array(t_uint256)dyn_storage"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ERC20Permit":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0x07536242e24ee7067295d32c08e495a33e605f3c52f8ee4ec3bdcb7a351313d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f99dbf2ce567a64a03fc4d38b76d64d52bf1a2302922971446b1cf777220ec\",\"dweb:/ipfs/QmSiotbcG2KMuXfbKyKTcHu9ujBp67jmbULJyYLDpsrpC1\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":4067,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol:ERC20Permit","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":4073,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol:ERC20Permit","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":4075,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol:ERC20Permit","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":4077,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol:ERC20Permit","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":4079,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol:ERC20Permit","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":5091,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol:ERC20Permit","label":"_nonces","offset":0,"slot":"5","type":"t_mapping(t_address,t_struct(Counter)5389_storage)"},{"astId":5099,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol:ERC20Permit","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"6","type":"t_bytes32"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)5389_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Counters.Counter)","numberOfBytes":"32","value":"t_struct(Counter)5389_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)5389_storage":{"encoding":"inplace","label":"struct Counters.Counter","members":[{"astId":5388,"contract":"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol:ERC20Permit","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d5d747a051a4e335775e736869ef82a3c3279f32a1b494f9e37d07194036bbd164736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xD7 SELFBALANCE LOG0 MLOAD LOG4 0xE3 CALLDATALOAD PUSH24 0x5E736869EF82A3C3279F32A1B494F9E37D07194036BBD164 PUSH20 0x6F6C634300080400330000000000000000000000 ","sourceMap":"201:1327:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d5d747a051a4e335775e736869ef82a3c3279f32a1b494f9e37d07194036bbd164736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xD7 SELFBALANCE LOG0 MLOAD LOG4 0xE3 CALLDATALOAD PUSH24 0x5E736869EF82A3C3279F32A1B494F9E37D07194036BBD164 PUSH20 0x6F6C634300080400330000000000000000000000 ","sourceMap":"201:1327:31:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa7bc891be2bc5948340a8fb14ad36c8846230c9086269e37f3febf0dc239c9f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a002427adcb3b71f2c2ad8212fa789997d5662b0c7be941bc5c52b26b83433cc\",\"dweb:/ipfs/QmR1EfpL9zQ3zT25kRZdjcjWBqaBhdSun5MLnJV1ZdzEn1\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d50ca84d46f058935297c75e0117870e4f13f8982a1edadac9ee0f7bc254d0764736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR POP 0xCA DUP5 0xD4 PUSH16 0x58935297C75E0117870E4F13F8982A1 0xED 0xAD 0xAC SWAP15 0xE0 0xF7 0xBC 0x25 0x4D SMOD PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"424:971:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d50ca84d46f058935297c75e0117870e4f13f8982a1edadac9ee0f7bc254d0764736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR POP 0xCA DUP5 0xD4 PUSH16 0x58935297C75E0117870E4F13F8982A1 0xED 0xAD 0xAC SWAP15 0xE0 0xF7 0xBC 0x25 0x4D SMOD PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"424:971:33:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a99f5452ea6e303aaf1c513cb61bceb513f1aa2f0bcacb48a1e617a617f4772c64736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 SWAP16 SLOAD MSTORE 0xEA PUSH15 0x303AAF1C513CB61BCEB513F1AA2F0B 0xCA 0xCB 0x48 LOG1 0xE6 OR 0xA6 OR DELEGATECALL PUSH24 0x2C64736F6C63430008040033000000000000000000000000 ","sourceMap":"161:2235:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a99f5452ea6e303aaf1c513cb61bceb513f1aa2f0bcacb48a1e617a617f4772c64736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 SWAP16 SLOAD MSTORE 0xEA PUSH15 0x303AAF1C513CB61BCEB513F1AA2F0B 0xCA 0xCB 0x48 LOG1 0xE6 OR 0xA6 OR DELEGATECALL PUSH24 0x2C64736F6C63430008040033000000000000000000000000 ","sourceMap":"161:2235:34:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200a0af3d07c41ecec59315acdc57a3b68bb996060dd7e9feafa04ca9d8e3432b764736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP EXP RETURN 0xD0 PUSH29 0x41ECEC59315ACDC57A3B68BB996060DD7E9FEAFA04CA9D8E3432B76473 PUSH16 0x6C634300080400330000000000000000 ","sourceMap":"369:8375:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200a0af3d07c41ecec59315acdc57a3b68bb996060dd7e9feafa04ca9d8e3432b764736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP EXP RETURN 0xD0 PUSH29 0x41ECEC59315ACDC57A3B68BB996060DD7E9FEAFA04CA9D8E3432B76473 PUSH16 0x6C634300080400330000000000000000 ","sourceMap":"369:8375:35:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"EIP712":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":\"EIP712\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e5bd48a8b9bd5ce56033a0a5850e603216d4e8d5ca6b663e3e565a2a921e5da64736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E JUMPDEST 0xD4 DUP11 DUP12 SWAP12 0xD5 0xCE JUMP SUB GASPRICE EXP PC POP 0xE6 SUB 0x21 PUSH14 0x4E8D5CA6B663E3E565A2A921E5DA PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"202:8624:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e5bd48a8b9bd5ce56033a0a5850e603216d4e8d5ca6b663e3e565a2a921e5da64736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E JUMPDEST 0xD4 DUP11 DUP12 SWAP12 0xD5 0xCE JUMP SUB GASPRICE EXP PC POP 0xE6 SUB 0x21 PUSH14 0x4E8D5CA6B663E3E565A2A921E5DA PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"202:8624:37:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/.deps/npm/@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122024edddc00b7436508df9c5128cb4fb6bad774e7469edd8fcf7f6a634c45fc73a64736f6c63430008040033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xED 0xDD 0xC0 SIGNEXTEND PUSH21 0x36508DF9C5128CB4FB6BAD774E7469EDD8FCF7F6A6 CALLVALUE 0xC4 0x5F 0xC7 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"482:6300:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122024edddc00b7436508df9c5128cb4fb6bad774e7469edd8fcf7f6a634c45fc73a64736f6c63430008040033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xED 0xDD 0xC0 SIGNEXTEND PUSH21 0x36508DF9C5128CB4FB6BAD774E7469EDD8FCF7F6A6 CALLVALUE 0xC4 0x5F 0xC7 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ","sourceMap":"482:6300:38:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/manilla.sol":{"Manilla":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"uint256","name":"amount_","type":"uint256"},{"internalType":"address","name":"adminAccount_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7485:40","statements":[{"body":{"nodeType":"YulBlock","src":"102:259:40","statements":[{"nodeType":"YulAssignment","src":"112:75:40","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:40"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:40"},"nodeType":"YulFunctionCall","src":"137:49:40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:40"},"nodeType":"YulFunctionCall","src":"121:66:40"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:40"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:40"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:40"},"nodeType":"YulFunctionCall","src":"196:21:40"},"nodeType":"YulExpressionStatement","src":"196:21:40"},{"nodeType":"YulVariableDeclaration","src":"226:27:40","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:40"},"nodeType":"YulFunctionCall","src":"237:16:40"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"300:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"303:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:40"},"nodeType":"YulFunctionCall","src":"293:12:40"},"nodeType":"YulExpressionStatement","src":"293:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:40"},"nodeType":"YulFunctionCall","src":"268:16:40"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:40"},"nodeType":"YulFunctionCall","src":"265:25:40"},"nodeType":"YulIf","src":"262:2:40"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"338:3:40"},{"name":"dst","nodeType":"YulIdentifier","src":"343:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"348:6:40"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"316:21:40"},"nodeType":"YulFunctionCall","src":"316:39:40"},"nodeType":"YulExpressionStatement","src":"316:39:40"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:40","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:40","type":""}],"src":"7:354:40"},{"body":{"nodeType":"YulBlock","src":"430:80:40","statements":[{"nodeType":"YulAssignment","src":"440:22:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"455:6:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:40"},"nodeType":"YulFunctionCall","src":"449:13:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"440:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:40"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"471:26:40"},"nodeType":"YulFunctionCall","src":"471:33:40"},"nodeType":"YulExpressionStatement","src":"471:33:40"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"408:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"416:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"424:5:40","type":""}],"src":"367:143:40"},{"body":{"nodeType":"YulBlock","src":"603:215:40","statements":[{"body":{"nodeType":"YulBlock","src":"652:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"661:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"664:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"654:6:40"},"nodeType":"YulFunctionCall","src":"654:12:40"},"nodeType":"YulExpressionStatement","src":"654:12:40"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"631:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"639:4:40","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"627:3:40"},"nodeType":"YulFunctionCall","src":"627:17:40"},{"name":"end","nodeType":"YulIdentifier","src":"646:3:40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"623:3:40"},"nodeType":"YulFunctionCall","src":"623:27:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"616:6:40"},"nodeType":"YulFunctionCall","src":"616:35:40"},"nodeType":"YulIf","src":"613:2:40"},{"nodeType":"YulVariableDeclaration","src":"677:27:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"691:5:40"},"nodeType":"YulFunctionCall","src":"691:13:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"681:6:40","type":""}]},{"nodeType":"YulAssignment","src":"713:99:40","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"785:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"793:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"781:3:40"},"nodeType":"YulFunctionCall","src":"781:17:40"},{"name":"length","nodeType":"YulIdentifier","src":"800:6:40"},{"name":"end","nodeType":"YulIdentifier","src":"808:3:40"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"722:58:40"},"nodeType":"YulFunctionCall","src":"722:90:40"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"713:5:40"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"581:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"589:3:40","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"597:5:40","type":""}],"src":"530:288:40"},{"body":{"nodeType":"YulBlock","src":"887:80:40","statements":[{"nodeType":"YulAssignment","src":"897:22:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"912:6:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"906:5:40"},"nodeType":"YulFunctionCall","src":"906:13:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"897:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"955:5:40"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"928:26:40"},"nodeType":"YulFunctionCall","src":"928:33:40"},"nodeType":"YulExpressionStatement","src":"928:33:40"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"865:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"873:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"881:5:40","type":""}],"src":"824:143:40"},{"body":{"nodeType":"YulBlock","src":"1121:817:40","statements":[{"body":{"nodeType":"YulBlock","src":"1168:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1177:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1180:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1170:6:40"},"nodeType":"YulFunctionCall","src":"1170:12:40"},"nodeType":"YulExpressionStatement","src":"1170:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1142:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1138:3:40"},"nodeType":"YulFunctionCall","src":"1138:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"1163:3:40","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1134:3:40"},"nodeType":"YulFunctionCall","src":"1134:33:40"},"nodeType":"YulIf","src":"1131:2:40"},{"nodeType":"YulBlock","src":"1194:224:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1209:38:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1233:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"1244:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1229:3:40"},"nodeType":"YulFunctionCall","src":"1229:17:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1223:5:40"},"nodeType":"YulFunctionCall","src":"1223:24:40"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1213:6:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"1294:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1303:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1306:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1296:6:40"},"nodeType":"YulFunctionCall","src":"1296:12:40"},"nodeType":"YulExpressionStatement","src":"1296:12:40"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1266:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"1274:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1263:2:40"},"nodeType":"YulFunctionCall","src":"1263:30:40"},"nodeType":"YulIf","src":"1260:2:40"},{"nodeType":"YulAssignment","src":"1324:84:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1380:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1391:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1376:3:40"},"nodeType":"YulFunctionCall","src":"1376:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1400:7:40"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1334:41:40"},"nodeType":"YulFunctionCall","src":"1334:74:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1324:6:40"}]}]},{"nodeType":"YulBlock","src":"1428:225:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1443:39:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1467:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"1478:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1463:3:40"},"nodeType":"YulFunctionCall","src":"1463:18:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:40"},"nodeType":"YulFunctionCall","src":"1457:25:40"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1447:6:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"1529:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1538:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1541:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1531:6:40"},"nodeType":"YulFunctionCall","src":"1531:12:40"},"nodeType":"YulExpressionStatement","src":"1531:12:40"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1501:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"1509:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1498:2:40"},"nodeType":"YulFunctionCall","src":"1498:30:40"},"nodeType":"YulIf","src":"1495:2:40"},{"nodeType":"YulAssignment","src":"1559:84:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1615:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1626:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1611:3:40"},"nodeType":"YulFunctionCall","src":"1611:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1635:7:40"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1569:41:40"},"nodeType":"YulFunctionCall","src":"1569:74:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1559:6:40"}]}]},{"nodeType":"YulBlock","src":"1663:129:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1678:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1692:2:40","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1682:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1708:74:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1754:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1765:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1750:3:40"},"nodeType":"YulFunctionCall","src":"1750:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1774:7:40"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1718:31:40"},"nodeType":"YulFunctionCall","src":"1718:64:40"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1708:6:40"}]}]},{"nodeType":"YulBlock","src":"1802:129:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1817:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1831:2:40","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1821:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1847:74:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1893:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1904:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1889:3:40"},"nodeType":"YulFunctionCall","src":"1889:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1913:7:40"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1857:31:40"},"nodeType":"YulFunctionCall","src":"1857:64:40"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1847:6:40"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1106:6:40","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1114:6:40","type":""}],"src":"973:965:40"},{"body":{"nodeType":"YulBlock","src":"2090:220:40","statements":[{"nodeType":"YulAssignment","src":"2100:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2166:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:40","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2107:58:40"},"nodeType":"YulFunctionCall","src":"2107:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2100:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2272:3:40"}],"functionName":{"name":"store_literal_in_memory_2b2d71d4d2d7e0cbb62ac44e65a87be2b38e93941464dceb83157bb9e96bd19e","nodeType":"YulIdentifier","src":"2183:88:40"},"nodeType":"YulFunctionCall","src":"2183:93:40"},"nodeType":"YulExpressionStatement","src":"2183:93:40"},{"nodeType":"YulAssignment","src":"2285:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2296:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"2301:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2292:3:40"},"nodeType":"YulFunctionCall","src":"2292:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2285:3:40"}]}]},"name":"abi_encode_t_stringliteral_2b2d71d4d2d7e0cbb62ac44e65a87be2b38e93941464dceb83157bb9e96bd19e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2078:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2086:3:40","type":""}],"src":"1944:366:40"},{"body":{"nodeType":"YulBlock","src":"2462:220:40","statements":[{"nodeType":"YulAssignment","src":"2472:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2538:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"2543:2:40","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2479:58:40"},"nodeType":"YulFunctionCall","src":"2479:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2472:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2644:3:40"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"2555:88:40"},"nodeType":"YulFunctionCall","src":"2555:93:40"},"nodeType":"YulExpressionStatement","src":"2555:93:40"},{"nodeType":"YulAssignment","src":"2657:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2668:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"2673:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2664:3:40"},"nodeType":"YulFunctionCall","src":"2664:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2657:3:40"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2450:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2458:3:40","type":""}],"src":"2316:366:40"},{"body":{"nodeType":"YulBlock","src":"2753:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2770:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2793:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2775:17:40"},"nodeType":"YulFunctionCall","src":"2775:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2763:6:40"},"nodeType":"YulFunctionCall","src":"2763:37:40"},"nodeType":"YulExpressionStatement","src":"2763:37:40"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2741:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2748:3:40","type":""}],"src":"2688:118:40"},{"body":{"nodeType":"YulBlock","src":"2983:248:40","statements":[{"nodeType":"YulAssignment","src":"2993:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3005:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"3016:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3001:3:40"},"nodeType":"YulFunctionCall","src":"3001:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2993:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3040:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"3051:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3036:3:40"},"nodeType":"YulFunctionCall","src":"3036:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3059:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"3065:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3055:3:40"},"nodeType":"YulFunctionCall","src":"3055:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3029:6:40"},"nodeType":"YulFunctionCall","src":"3029:47:40"},"nodeType":"YulExpressionStatement","src":"3029:47:40"},{"nodeType":"YulAssignment","src":"3085:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3219:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_2b2d71d4d2d7e0cbb62ac44e65a87be2b38e93941464dceb83157bb9e96bd19e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3093:124:40"},"nodeType":"YulFunctionCall","src":"3093:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3085:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_2b2d71d4d2d7e0cbb62ac44e65a87be2b38e93941464dceb83157bb9e96bd19e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2963:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2978:4:40","type":""}],"src":"2812:419:40"},{"body":{"nodeType":"YulBlock","src":"3408:248:40","statements":[{"nodeType":"YulAssignment","src":"3418:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3430:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"3441:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3426:3:40"},"nodeType":"YulFunctionCall","src":"3426:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3418:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3465:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"3476:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3461:3:40"},"nodeType":"YulFunctionCall","src":"3461:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3484:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"3490:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3480:3:40"},"nodeType":"YulFunctionCall","src":"3480:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3454:6:40"},"nodeType":"YulFunctionCall","src":"3454:47:40"},"nodeType":"YulExpressionStatement","src":"3454:47:40"},{"nodeType":"YulAssignment","src":"3510:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3644:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3518:124:40"},"nodeType":"YulFunctionCall","src":"3518:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3510:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3388:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3403:4:40","type":""}],"src":"3237:419:40"},{"body":{"nodeType":"YulBlock","src":"3760:124:40","statements":[{"nodeType":"YulAssignment","src":"3770:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3782:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"3793:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3778:3:40"},"nodeType":"YulFunctionCall","src":"3778:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3770:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3850:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3863:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"3874:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3859:3:40"},"nodeType":"YulFunctionCall","src":"3859:17:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3806:43:40"},"nodeType":"YulFunctionCall","src":"3806:71:40"},"nodeType":"YulExpressionStatement","src":"3806:71:40"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3732:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3744:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3755:4:40","type":""}],"src":"3662:222:40"},{"body":{"nodeType":"YulBlock","src":"3931:88:40","statements":[{"nodeType":"YulAssignment","src":"3941:30:40","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3951:18:40"},"nodeType":"YulFunctionCall","src":"3951:20:40"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3941:6:40"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4000:6:40"},{"name":"size","nodeType":"YulIdentifier","src":"4008:4:40"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3980:19:40"},"nodeType":"YulFunctionCall","src":"3980:33:40"},"nodeType":"YulExpressionStatement","src":"3980:33:40"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3915:4:40","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3924:6:40","type":""}],"src":"3890:129:40"},{"body":{"nodeType":"YulBlock","src":"4065:35:40","statements":[{"nodeType":"YulAssignment","src":"4075:19:40","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4091:2:40","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4085:5:40"},"nodeType":"YulFunctionCall","src":"4085:9:40"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4075:6:40"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4058:6:40","type":""}],"src":"4025:75:40"},{"body":{"nodeType":"YulBlock","src":"4173:241:40","statements":[{"body":{"nodeType":"YulBlock","src":"4278:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4280:16:40"},"nodeType":"YulFunctionCall","src":"4280:18:40"},"nodeType":"YulExpressionStatement","src":"4280:18:40"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4250:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"4258:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4247:2:40"},"nodeType":"YulFunctionCall","src":"4247:30:40"},"nodeType":"YulIf","src":"4244:2:40"},{"nodeType":"YulAssignment","src":"4310:37:40","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4340:6:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4318:21:40"},"nodeType":"YulFunctionCall","src":"4318:29:40"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4310:4:40"}]},{"nodeType":"YulAssignment","src":"4384:23:40","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4396:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"4402:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4392:3:40"},"nodeType":"YulFunctionCall","src":"4392:15:40"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4384:4:40"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4157:6:40","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4168:4:40","type":""}],"src":"4106:308:40"},{"body":{"nodeType":"YulBlock","src":"4516:73:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4533:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"4538:6:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4526:6:40"},"nodeType":"YulFunctionCall","src":"4526:19:40"},"nodeType":"YulExpressionStatement","src":"4526:19:40"},{"nodeType":"YulAssignment","src":"4554:29:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4573:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4578:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4569:3:40"},"nodeType":"YulFunctionCall","src":"4569:14:40"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4554:11:40"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4488:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"4493:6:40","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4504:11:40","type":""}],"src":"4420:169:40"},{"body":{"nodeType":"YulBlock","src":"4639:261:40","statements":[{"nodeType":"YulAssignment","src":"4649:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4672:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4654:17:40"},"nodeType":"YulFunctionCall","src":"4654:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4649:1:40"}]},{"nodeType":"YulAssignment","src":"4683:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4706:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4688:17:40"},"nodeType":"YulFunctionCall","src":"4688:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"4683:1:40"}]},{"body":{"nodeType":"YulBlock","src":"4846:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4848:16:40"},"nodeType":"YulFunctionCall","src":"4848:18:40"},"nodeType":"YulExpressionStatement","src":"4848:18:40"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4767:1:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4774:66:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"4842:1:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4770:3:40"},"nodeType":"YulFunctionCall","src":"4770:74:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4764:2:40"},"nodeType":"YulFunctionCall","src":"4764:81:40"},"nodeType":"YulIf","src":"4761:2:40"},{"nodeType":"YulAssignment","src":"4878:16:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4889:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"4892:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4885:3:40"},"nodeType":"YulFunctionCall","src":"4885:9:40"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4878:3:40"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4626:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"4629:1:40","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4635:3:40","type":""}],"src":"4595:305:40"},{"body":{"nodeType":"YulBlock","src":"4951:51:40","statements":[{"nodeType":"YulAssignment","src":"4961:35:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4990:5:40"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4972:17:40"},"nodeType":"YulFunctionCall","src":"4972:24:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4961:7:40"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4933:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4943:7:40","type":""}],"src":"4906:96:40"},{"body":{"nodeType":"YulBlock","src":"5053:81:40","statements":[{"nodeType":"YulAssignment","src":"5063:65:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5078:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"5085:42:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5074:3:40"},"nodeType":"YulFunctionCall","src":"5074:54:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5063:7:40"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5035:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5045:7:40","type":""}],"src":"5008:126:40"},{"body":{"nodeType":"YulBlock","src":"5185:32:40","statements":[{"nodeType":"YulAssignment","src":"5195:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"5206:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5195:7:40"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5167:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5177:7:40","type":""}],"src":"5140:77:40"},{"body":{"nodeType":"YulBlock","src":"5272:258:40","statements":[{"nodeType":"YulVariableDeclaration","src":"5282:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"5291:1:40","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5286:1:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"5351:63:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5376:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"5381:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5372:3:40"},"nodeType":"YulFunctionCall","src":"5372:11:40"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5395:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"5400:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5391:3:40"},"nodeType":"YulFunctionCall","src":"5391:11:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5385:5:40"},"nodeType":"YulFunctionCall","src":"5385:18:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5365:6:40"},"nodeType":"YulFunctionCall","src":"5365:39:40"},"nodeType":"YulExpressionStatement","src":"5365:39:40"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5312:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"5315:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5309:2:40"},"nodeType":"YulFunctionCall","src":"5309:13:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5323:19:40","statements":[{"nodeType":"YulAssignment","src":"5325:15:40","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5334:1:40"},{"kind":"number","nodeType":"YulLiteral","src":"5337:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5330:3:40"},"nodeType":"YulFunctionCall","src":"5330:10:40"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5325:1:40"}]}]},"pre":{"nodeType":"YulBlock","src":"5305:3:40","statements":[]},"src":"5301:113:40"},{"body":{"nodeType":"YulBlock","src":"5448:76:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5498:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"5503:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5494:3:40"},"nodeType":"YulFunctionCall","src":"5494:16:40"},{"kind":"number","nodeType":"YulLiteral","src":"5512:1:40","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5487:6:40"},"nodeType":"YulFunctionCall","src":"5487:27:40"},"nodeType":"YulExpressionStatement","src":"5487:27:40"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5429:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"5432:6:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5426:2:40"},"nodeType":"YulFunctionCall","src":"5426:13:40"},"nodeType":"YulIf","src":"5423:2:40"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5254:3:40","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5259:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"5264:6:40","type":""}],"src":"5223:307:40"},{"body":{"nodeType":"YulBlock","src":"5587:269:40","statements":[{"nodeType":"YulAssignment","src":"5597:22:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5611:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"5617:1:40","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5607:3:40"},"nodeType":"YulFunctionCall","src":"5607:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5597:6:40"}]},{"nodeType":"YulVariableDeclaration","src":"5628:38:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5658:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"5664:1:40","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5654:3:40"},"nodeType":"YulFunctionCall","src":"5654:12:40"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5632:18:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"5705:51:40","statements":[{"nodeType":"YulAssignment","src":"5719:27:40","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5733:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"5741:4:40","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5729:3:40"},"nodeType":"YulFunctionCall","src":"5729:17:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5719:6:40"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5685:18:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5678:6:40"},"nodeType":"YulFunctionCall","src":"5678:26:40"},"nodeType":"YulIf","src":"5675:2:40"},{"body":{"nodeType":"YulBlock","src":"5808:42:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"5822:16:40"},"nodeType":"YulFunctionCall","src":"5822:18:40"},"nodeType":"YulExpressionStatement","src":"5822:18:40"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5772:18:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5795:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"5803:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5792:2:40"},"nodeType":"YulFunctionCall","src":"5792:14:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5769:2:40"},"nodeType":"YulFunctionCall","src":"5769:38:40"},"nodeType":"YulIf","src":"5766:2:40"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5571:4:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5580:6:40","type":""}],"src":"5536:320:40"},{"body":{"nodeType":"YulBlock","src":"5905:238:40","statements":[{"nodeType":"YulVariableDeclaration","src":"5915:58:40","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5937:6:40"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5967:4:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5945:21:40"},"nodeType":"YulFunctionCall","src":"5945:27:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5933:3:40"},"nodeType":"YulFunctionCall","src":"5933:40:40"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5919:10:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"6084:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6086:16:40"},"nodeType":"YulFunctionCall","src":"6086:18:40"},"nodeType":"YulExpressionStatement","src":"6086:18:40"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6027:10:40"},{"kind":"number","nodeType":"YulLiteral","src":"6039:18:40","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6024:2:40"},"nodeType":"YulFunctionCall","src":"6024:34:40"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6063:10:40"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6075:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6060:2:40"},"nodeType":"YulFunctionCall","src":"6060:22:40"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6021:2:40"},"nodeType":"YulFunctionCall","src":"6021:62:40"},"nodeType":"YulIf","src":"6018:2:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6122:2:40","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6126:10:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6115:6:40"},"nodeType":"YulFunctionCall","src":"6115:22:40"},"nodeType":"YulExpressionStatement","src":"6115:22:40"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5891:6:40","type":""},{"name":"size","nodeType":"YulTypedName","src":"5899:4:40","type":""}],"src":"5862:281:40"},{"body":{"nodeType":"YulBlock","src":"6177:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6194:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6197:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6187:6:40"},"nodeType":"YulFunctionCall","src":"6187:88:40"},"nodeType":"YulExpressionStatement","src":"6187:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6291:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6294:4:40","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6284:6:40"},"nodeType":"YulFunctionCall","src":"6284:15:40"},"nodeType":"YulExpressionStatement","src":"6284:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6315:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6318:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6308:6:40"},"nodeType":"YulFunctionCall","src":"6308:15:40"},"nodeType":"YulExpressionStatement","src":"6308:15:40"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6149:180:40"},{"body":{"nodeType":"YulBlock","src":"6363:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6380:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6383:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6373:6:40"},"nodeType":"YulFunctionCall","src":"6373:88:40"},"nodeType":"YulExpressionStatement","src":"6373:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6477:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6480:4:40","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6470:6:40"},"nodeType":"YulFunctionCall","src":"6470:15:40"},"nodeType":"YulExpressionStatement","src":"6470:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6501:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6504:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6494:6:40"},"nodeType":"YulFunctionCall","src":"6494:15:40"},"nodeType":"YulExpressionStatement","src":"6494:15:40"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6335:180:40"},{"body":{"nodeType":"YulBlock","src":"6549:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6566:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6569:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6559:6:40"},"nodeType":"YulFunctionCall","src":"6559:88:40"},"nodeType":"YulExpressionStatement","src":"6559:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6663:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6666:4:40","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6656:6:40"},"nodeType":"YulFunctionCall","src":"6656:15:40"},"nodeType":"YulExpressionStatement","src":"6656:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6687:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6690:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6680:6:40"},"nodeType":"YulFunctionCall","src":"6680:15:40"},"nodeType":"YulExpressionStatement","src":"6680:15:40"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6521:180:40"},{"body":{"nodeType":"YulBlock","src":"6755:54:40","statements":[{"nodeType":"YulAssignment","src":"6765:38:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6783:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"6790:2:40","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6779:3:40"},"nodeType":"YulFunctionCall","src":"6779:14:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6799:2:40","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6795:3:40"},"nodeType":"YulFunctionCall","src":"6795:7:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6775:3:40"},"nodeType":"YulFunctionCall","src":"6775:28:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6765:6:40"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6738:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6748:6:40","type":""}],"src":"6707:102:40"},{"body":{"nodeType":"YulBlock","src":"6921:118:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6943:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"6951:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6939:3:40"},"nodeType":"YulFunctionCall","src":"6939:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"6955:34:40","type":"","value":"amount to be minted exceeds 1 bi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6932:6:40"},"nodeType":"YulFunctionCall","src":"6932:58:40"},"nodeType":"YulExpressionStatement","src":"6932:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7011:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"7019:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7007:3:40"},"nodeType":"YulFunctionCall","src":"7007:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"7024:7:40","type":"","value":"llion"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7000:6:40"},"nodeType":"YulFunctionCall","src":"7000:32:40"},"nodeType":"YulExpressionStatement","src":"7000:32:40"}]},"name":"store_literal_in_memory_2b2d71d4d2d7e0cbb62ac44e65a87be2b38e93941464dceb83157bb9e96bd19e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6913:6:40","type":""}],"src":"6815:224:40"},{"body":{"nodeType":"YulBlock","src":"7151:75:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7173:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"7181:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7169:3:40"},"nodeType":"YulFunctionCall","src":"7169:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"7185:33:40","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7162:6:40"},"nodeType":"YulFunctionCall","src":"7162:57:40"},"nodeType":"YulExpressionStatement","src":"7162:57:40"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7143:6:40","type":""}],"src":"7045:181:40"},{"body":{"nodeType":"YulBlock","src":"7275:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"7332:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7341:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7344:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7334:6:40"},"nodeType":"YulFunctionCall","src":"7334:12:40"},"nodeType":"YulExpressionStatement","src":"7334:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7298:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7323:5:40"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7305:17:40"},"nodeType":"YulFunctionCall","src":"7305:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7295:2:40"},"nodeType":"YulFunctionCall","src":"7295:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7288:6:40"},"nodeType":"YulFunctionCall","src":"7288:43:40"},"nodeType":"YulIf","src":"7285:2:40"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7268:5:40","type":""}],"src":"7232:122:40"},{"body":{"nodeType":"YulBlock","src":"7403:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"7460:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7469:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7472:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7462:6:40"},"nodeType":"YulFunctionCall","src":"7462:12:40"},"nodeType":"YulExpressionStatement","src":"7462:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7426:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7451:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7433:17:40"},"nodeType":"YulFunctionCall","src":"7433:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7423:2:40"},"nodeType":"YulFunctionCall","src":"7423:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7416:6:40"},"nodeType":"YulFunctionCall","src":"7416:43:40"},"nodeType":"YulIf","src":"7413:2:40"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7396:5:40","type":""}],"src":"7360:122:40"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_2b2d71d4d2d7e0cbb62ac44e65a87be2b38e93941464dceb83157bb9e96bd19e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_2b2d71d4d2d7e0cbb62ac44e65a87be2b38e93941464dceb83157bb9e96bd19e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_2b2d71d4d2d7e0cbb62ac44e65a87be2b38e93941464dceb83157bb9e96bd19e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2b2d71d4d2d7e0cbb62ac44e65a87be2b38e93941464dceb83157bb9e96bd19e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_2b2d71d4d2d7e0cbb62ac44e65a87be2b38e93941464dceb83157bb9e96bd19e(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount to be minted exceeds 1 bi\")\n\n        mstore(add(memPtr, 32), \"llion\")\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":40,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001f9338038062001f938339818101604052810190620000379190620004c6565b620000576200004b6200013160201b60201c565b6200013960201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200009257600080fd5b6b033b2e3c9fd0803ce80000008214620000e3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000da90620005c3565b60405180910390fd5b8360049080519060200190620000fb92919062000376565b5082600590805190602001906200011492919062000376565b50620001278183620001fd60201b60201c565b505050506200091b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000270576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200026790620005e5565b60405180910390fd5b62000284600083836200036c60201b60201c565b806003600082825462000298919062000694565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200034c919062000607565b60405180910390a362000368600083836200037160201b60201c565b5050565b505050565b505050565b828054620003849062000765565b90600052602060002090601f016020900481019282620003a85760008555620003f4565b82601f10620003c357805160ff1916838001178555620003f4565b82800160010185558215620003f4579182015b82811115620003f3578251825591602001919060010190620003d6565b5b50905062000403919062000407565b5090565b5b808211156200042257600081600090555060010162000408565b5090565b60006200043d62000437846200064d565b62000624565b9050828152602081018484840111156200045657600080fd5b620004638482856200072f565b509392505050565b6000815190506200047c81620008e7565b92915050565b600082601f8301126200049457600080fd5b8151620004a684826020860162000426565b91505092915050565b600081519050620004c08162000901565b92915050565b60008060008060808587031215620004dd57600080fd5b600085015167ffffffffffffffff811115620004f857600080fd5b620005068782880162000482565b945050602085015167ffffffffffffffff8111156200052457600080fd5b620005328782880162000482565b93505060406200054587828801620004af565b925050606062000558878288016200046b565b91505092959194509250565b60006200057360258362000683565b915062000580826200086f565b604082019050919050565b60006200059a601f8362000683565b9150620005a782620008be565b602082019050919050565b620005bd8162000725565b82525050565b60006020820190508181036000830152620005de8162000564565b9050919050565b6000602082019050818103600083015262000600816200058b565b9050919050565b60006020820190506200061e6000830184620005b2565b92915050565b60006200063062000643565b90506200063e82826200079b565b919050565b6000604051905090565b600067ffffffffffffffff8211156200066b576200066a6200082f565b5b62000676826200085e565b9050602081019050919050565b600082825260208201905092915050565b6000620006a18262000725565b9150620006ae8362000725565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620006e657620006e5620007d1565b5b828201905092915050565b6000620006fe8262000705565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156200074f57808201518184015260208101905062000732565b838111156200075f576000848401525b50505050565b600060028204905060018216806200077e57607f821691505b6020821081141562000795576200079462000800565b5b50919050565b620007a6826200085e565b810181811067ffffffffffffffff82111715620007c857620007c76200082f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f616d6f756e7420746f206265206d696e7465642065786365656473203120626960008201527f6c6c696f6e000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b620008f281620006f1565b8114620008fe57600080fd5b50565b6200090c8162000725565b81146200091857600080fd5b50565b611668806200092b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d71461024f578063a9059cbb1461027f578063dd62ed3e146102af578063f2fde38b146102df576100ea565b8063715018a6146102095780638da5cb5b1461021357806395d89b4114610231576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806370a08231146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102fb565b6040516101049190611076565b60405180910390f35b61012760048036038101906101229190610e54565b61038d565b604051610134919061105b565b60405180910390f35b6101456103b0565b60405161015291906111b8565b60405180910390f35b61017560048036038101906101709190610e05565b6103ba565b604051610182919061105b565b60405180910390f35b6101936103e9565b6040516101a091906111d3565b60405180910390f35b6101c360048036038101906101be9190610e54565b6103f2565b6040516101d0919061105b565b60405180910390f35b6101f360048036038101906101ee9190610da0565b610429565b60405161020091906111b8565b60405180910390f35b610211610472565b005b61021b6104fa565b6040516102289190611040565b60405180910390f35b610239610523565b6040516102469190611076565b60405180910390f35b61026960048036038101906102649190610e54565b6105b5565b604051610276919061105b565b60405180910390f35b61029960048036038101906102949190610e54565b61062c565b6040516102a6919061105b565b60405180910390f35b6102c960048036038101906102c49190610dc9565b61064f565b6040516102d691906111b8565b60405180910390f35b6102f960048036038101906102f49190610da0565b6106d6565b005b60606004805461030a906112e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610336906112e8565b80156103835780601f1061035857610100808354040283529160200191610383565b820191906000526020600020905b81548152906001019060200180831161036657829003601f168201915b5050505050905090565b6000806103986107ce565b90506103a58185856107d6565b600191505092915050565b6000600354905090565b6000806103c56107ce565b90506103d28582856109a1565b6103dd858585610a2d565b60019150509392505050565b60006012905090565b6000806103fd6107ce565b905061041e81858561040f858961064f565b610419919061120a565b6107d6565b600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61047a6107ce565b73ffffffffffffffffffffffffffffffffffffffff166104986104fa565b73ffffffffffffffffffffffffffffffffffffffff16146104ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e590611138565b60405180910390fd5b6104f86000610ca8565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054610532906112e8565b80601f016020809104026020016040519081016040528092919081815260200182805461055e906112e8565b80156105ab5780601f10610580576101008083540402835291602001916105ab565b820191906000526020600020905b81548152906001019060200180831161058e57829003601f168201915b5050505050905090565b6000806105c06107ce565b905060006105ce828661064f565b905083811015610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a90611198565b60405180910390fd5b61062082868684036107d6565b60019250505092915050565b6000806106376107ce565b9050610644818585610a2d565b600191505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106de6107ce565b73ffffffffffffffffffffffffffffffffffffffff166106fc6104fa565b73ffffffffffffffffffffffffffffffffffffffff1614610752576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074990611138565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b9906110b8565b60405180910390fd5b6107cb81610ca8565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083d90611178565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad906110d8565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161099491906111b8565b60405180910390a3505050565b60006109ad848461064f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a275781811015610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a10906110f8565b60405180910390fd5b610a2684848484036107d6565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9490611158565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0490611098565b60405180910390fd5b610b18838383610d6c565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9690611118565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c8f91906111b8565b60405180910390a3610ca2848484610d71565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081359050610d8581611604565b92915050565b600081359050610d9a8161161b565b92915050565b600060208284031215610db257600080fd5b6000610dc084828501610d76565b91505092915050565b60008060408385031215610ddc57600080fd5b6000610dea85828601610d76565b9250506020610dfb85828601610d76565b9150509250929050565b600080600060608486031215610e1a57600080fd5b6000610e2886828701610d76565b9350506020610e3986828701610d76565b9250506040610e4a86828701610d8b565b9150509250925092565b60008060408385031215610e6757600080fd5b6000610e7585828601610d76565b9250506020610e8685828601610d8b565b9150509250929050565b610e9981611260565b82525050565b610ea881611272565b82525050565b6000610eb9826111ee565b610ec381856111f9565b9350610ed38185602086016112b5565b610edc81611378565b840191505092915050565b6000610ef46023836111f9565b9150610eff82611389565b604082019050919050565b6000610f176026836111f9565b9150610f22826113d8565b604082019050919050565b6000610f3a6022836111f9565b9150610f4582611427565b604082019050919050565b6000610f5d601d836111f9565b9150610f6882611476565b602082019050919050565b6000610f806026836111f9565b9150610f8b8261149f565b604082019050919050565b6000610fa36020836111f9565b9150610fae826114ee565b602082019050919050565b6000610fc66025836111f9565b9150610fd182611517565b604082019050919050565b6000610fe96024836111f9565b9150610ff482611566565b604082019050919050565b600061100c6025836111f9565b9150611017826115b5565b604082019050919050565b61102b8161129e565b82525050565b61103a816112a8565b82525050565b60006020820190506110556000830184610e90565b92915050565b60006020820190506110706000830184610e9f565b92915050565b600060208201905081810360008301526110908184610eae565b905092915050565b600060208201905081810360008301526110b181610ee7565b9050919050565b600060208201905081810360008301526110d181610f0a565b9050919050565b600060208201905081810360008301526110f181610f2d565b9050919050565b6000602082019050818103600083015261111181610f50565b9050919050565b6000602082019050818103600083015261113181610f73565b9050919050565b6000602082019050818103600083015261115181610f96565b9050919050565b6000602082019050818103600083015261117181610fb9565b9050919050565b6000602082019050818103600083015261119181610fdc565b9050919050565b600060208201905081810360008301526111b181610fff565b9050919050565b60006020820190506111cd6000830184611022565b92915050565b60006020820190506111e86000830184611031565b92915050565b600081519050919050565b600082825260208201905092915050565b60006112158261129e565b91506112208361129e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112555761125461131a565b5b828201905092915050565b600061126b8261127e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156112d35780820151818401526020810190506112b8565b838111156112e2576000848401525b50505050565b6000600282049050600182168061130057607f821691505b6020821081141561131457611313611349565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61160d81611260565b811461161857600080fd5b50565b6116248161129e565b811461162f57600080fd5b5056fea2646970667358221220d17e160ac67f62310bc2db79ac4faad69577890942d8124defe36f5efbd8cc8d64736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F93 CODESIZE SUB DUP1 PUSH3 0x1F93 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x131 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x139 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 DUP3 EQ PUSH3 0xE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xDA SWAP1 PUSH3 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xFB SWAP3 SWAP2 SWAP1 PUSH3 0x376 JUMP JUMPDEST POP DUP3 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x114 SWAP3 SWAP2 SWAP1 PUSH3 0x376 JUMP JUMPDEST POP PUSH3 0x127 DUP2 DUP4 PUSH3 0x1FD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x91B JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x270 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x267 SWAP1 PUSH3 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x284 PUSH1 0x0 DUP4 DUP4 PUSH3 0x36C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x298 SWAP2 SWAP1 PUSH3 0x694 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x34C SWAP2 SWAP1 PUSH3 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x368 PUSH1 0x0 DUP4 DUP4 PUSH3 0x371 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x384 SWAP1 PUSH3 0x765 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x3A8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x3F4 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x3C3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x3F4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x3F4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x3F3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3D6 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x403 SWAP2 SWAP1 PUSH3 0x407 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x422 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x408 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x43D PUSH3 0x437 DUP5 PUSH3 0x64D JUMP JUMPDEST PUSH3 0x624 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x463 DUP5 DUP3 DUP6 PUSH3 0x72F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x47C DUP2 PUSH3 0x8E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x4A6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x426 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4C0 DUP2 PUSH3 0x901 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x506 DUP8 DUP3 DUP9 ADD PUSH3 0x482 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x532 DUP8 DUP3 DUP9 ADD PUSH3 0x482 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x545 DUP8 DUP3 DUP9 ADD PUSH3 0x4AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x558 DUP8 DUP3 DUP9 ADD PUSH3 0x46B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x573 PUSH1 0x25 DUP4 PUSH3 0x683 JUMP JUMPDEST SWAP2 POP PUSH3 0x580 DUP3 PUSH3 0x86F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x59A PUSH1 0x1F DUP4 PUSH3 0x683 JUMP JUMPDEST SWAP2 POP PUSH3 0x5A7 DUP3 PUSH3 0x8BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5BD DUP2 PUSH3 0x725 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x5DE DUP2 PUSH3 0x564 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x600 DUP2 PUSH3 0x58B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x61E PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x5B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x630 PUSH3 0x643 JUMP JUMPDEST SWAP1 POP PUSH3 0x63E DUP3 DUP3 PUSH3 0x79B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x66B JUMPI PUSH3 0x66A PUSH3 0x82F JUMP JUMPDEST JUMPDEST PUSH3 0x676 DUP3 PUSH3 0x85E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6A1 DUP3 PUSH3 0x725 JUMP JUMPDEST SWAP2 POP PUSH3 0x6AE DUP4 PUSH3 0x725 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x6E6 JUMPI PUSH3 0x6E5 PUSH3 0x7D1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6FE DUP3 PUSH3 0x705 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x74F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x732 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x75F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x77E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x795 JUMPI PUSH3 0x794 PUSH3 0x800 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7A6 DUP3 PUSH3 0x85E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x7C8 JUMPI PUSH3 0x7C7 PUSH3 0x82F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E7420746F206265206D696E74656420657863656564732031206269 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0x8F2 DUP2 PUSH3 0x6F1 JUMP JUMPDEST DUP2 EQ PUSH3 0x8FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x90C DUP2 PUSH3 0x725 JUMP JUMPDEST DUP2 EQ PUSH3 0x918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1668 DUP1 PUSH3 0x92B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DF JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x231 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x30A SWAP1 PUSH2 0x12E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x336 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x383 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x358 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x383 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x366 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x398 PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x3A5 DUP2 DUP6 DUP6 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C5 PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x3D2 DUP6 DUP3 DUP6 PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x3DD DUP6 DUP6 DUP6 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3FD PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x41E DUP2 DUP6 DUP6 PUSH2 0x40F DUP6 DUP10 PUSH2 0x64F JUMP JUMPDEST PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47A PUSH2 0x7CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x498 PUSH2 0x4FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E5 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F8 PUSH1 0x0 PUSH2 0xCA8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x532 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x55E SWAP1 PUSH2 0x12E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x580 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5C0 PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5CE DUP3 DUP7 PUSH2 0x64F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60A SWAP1 PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x620 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x637 PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x644 DUP2 DUP6 DUP6 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6DE PUSH2 0x7CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6FC PUSH2 0x4FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B9 SWAP1 PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0xCA8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83D SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AD SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AD DUP5 DUP5 PUSH2 0x64F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA27 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA10 SWAP1 PUSH2 0x10F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA26 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x7D6 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA94 SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB04 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB18 DUP4 DUP4 DUP4 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP1 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xC8F SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xCA2 DUP5 DUP5 DUP5 PUSH2 0xD71 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD85 DUP2 PUSH2 0x1604 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9A DUP2 PUSH2 0x161B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDC0 DUP5 DUP3 DUP6 ADD PUSH2 0xD76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDEA DUP6 DUP3 DUP7 ADD PUSH2 0xD76 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDFB DUP6 DUP3 DUP7 ADD PUSH2 0xD76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE28 DUP7 DUP3 DUP8 ADD PUSH2 0xD76 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE39 DUP7 DUP3 DUP8 ADD PUSH2 0xD76 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE4A DUP7 DUP3 DUP8 ADD PUSH2 0xD8B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE75 DUP6 DUP3 DUP7 ADD PUSH2 0xD76 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE86 DUP6 DUP3 DUP7 ADD PUSH2 0xD8B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE99 DUP2 PUSH2 0x1260 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEA8 DUP2 PUSH2 0x1272 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB9 DUP3 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0xEC3 DUP2 DUP6 PUSH2 0x11F9 JUMP JUMPDEST SWAP4 POP PUSH2 0xED3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0xEDC DUP2 PUSH2 0x1378 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF4 PUSH1 0x23 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xEFF DUP3 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF17 PUSH1 0x26 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF22 DUP3 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3A PUSH1 0x22 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF45 DUP3 PUSH2 0x1427 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5D PUSH1 0x1D DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF68 DUP3 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF80 PUSH1 0x26 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8B DUP3 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA3 PUSH1 0x20 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAE DUP3 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC6 PUSH1 0x25 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD1 DUP3 PUSH2 0x1517 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE9 PUSH1 0x24 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF4 DUP3 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100C PUSH1 0x25 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1017 DUP3 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102B DUP2 PUSH2 0x129E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x103A DUP2 PUSH2 0x12A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1055 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1070 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1090 DUP2 DUP5 PUSH2 0xEAE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10B1 DUP2 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10D1 DUP2 PUSH2 0xF0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F1 DUP2 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1111 DUP2 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1131 DUP2 PUSH2 0xF73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1151 DUP2 PUSH2 0xF96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1171 DUP2 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1191 DUP2 PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11B1 DUP2 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1022 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1031 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1215 DUP3 PUSH2 0x129E JUMP JUMPDEST SWAP2 POP PUSH2 0x1220 DUP4 PUSH2 0x129E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1255 JUMPI PUSH2 0x1254 PUSH2 0x131A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126B DUP3 PUSH2 0x127E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12D3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12B8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x12E2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1300 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1314 JUMPI PUSH2 0x1313 PUSH2 0x1349 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x160D DUP2 PUSH2 0x1260 JUMP JUMPDEST DUP2 EQ PUSH2 0x1618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1624 DUP2 PUSH2 0x129E JUMP JUMPDEST DUP2 EQ PUSH2 0x162F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH31 0x160AC67F62310BC2DB79AC4FAAD69577890942D8124DEFE36F5EFBD8CC8D64 PUSH20 0x6F6C634300080400330000000000000000000000 ","sourceMap":"364:11164:39:-:0;;;949:323;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1088:1:39;1063:27;;:13;:27;;;;1055:36;;;;;;1120:14;1109:7;:25;1101:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1194:5;1186;:13;;;;;;;;;;;;:::i;:::-;;1219:7;1209;:17;;;;;;;;;;;;:::i;:::-;;1236:29;1242:13;1257:7;1236:5;;;:29;;:::i;:::-;949:323;;;;364:11164;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;7750:533:39:-;7852:1;7833:21;;:7;:21;;;;7825:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;7900:49;7929:1;7933:7;7942:6;7900:20;;;:49;;:::i;:::-;7975:6;7959:12;;:22;;;;;;;:::i;:::-;;;;;;;;8149:6;8127:9;:18;8137:7;8127:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;8201:7;8180:37;;8197:1;8180:37;;;8210:6;8180:37;;;;;;:::i;:::-;;;;;;;;8228:48;8256:1;8260:7;8269:6;8228:19;;;:48;;:::i;:::-;7750:533;;:::o;10697:121::-;;;;:::o;11406:120::-;;;;:::o;364:11164::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:40:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;367:143::-;424:5;455:6;449:13;440:22;;471:33;498:5;471:33;:::i;:::-;430:80;;;;:::o;530:288::-;597:5;646:3;639:4;631:6;627:17;623:27;613:2;;664:1;661;654:12;613:2;697:6;691:13;722:90;808:3;800:6;793:4;785:6;781:17;722:90;:::i;:::-;713:99;;603:215;;;;;:::o;824:143::-;881:5;912:6;906:13;897:22;;928:33;955:5;928:33;:::i;:::-;887:80;;;;:::o;973:965::-;1090:6;1098;1106;1114;1163:3;1151:9;1142:7;1138:23;1134:33;1131:2;;;1180:1;1177;1170:12;1131:2;1244:1;1233:9;1229:17;1223:24;1274:18;1266:6;1263:30;1260:2;;;1306:1;1303;1296:12;1260:2;1334:74;1400:7;1391:6;1380:9;1376:22;1334:74;:::i;:::-;1324:84;;1194:224;1478:2;1467:9;1463:18;1457:25;1509:18;1501:6;1498:30;1495:2;;;1541:1;1538;1531:12;1495:2;1569:74;1635:7;1626:6;1615:9;1611:22;1569:74;:::i;:::-;1559:84;;1428:225;1692:2;1718:64;1774:7;1765:6;1754:9;1750:22;1718:64;:::i;:::-;1708:74;;1663:129;1831:2;1857:64;1913:7;1904:6;1893:9;1889:22;1857:64;:::i;:::-;1847:74;;1802:129;1121:817;;;;;;;:::o;1944:366::-;2086:3;2107:67;2171:2;2166:3;2107:67;:::i;:::-;2100:74;;2183:93;2272:3;2183:93;:::i;:::-;2301:2;2296:3;2292:12;2285:19;;2090:220;;;:::o;2316:366::-;2458:3;2479:67;2543:2;2538:3;2479:67;:::i;:::-;2472:74;;2555:93;2644:3;2555:93;:::i;:::-;2673:2;2668:3;2664:12;2657:19;;2462:220;;;:::o;2688:118::-;2775:24;2793:5;2775:24;:::i;:::-;2770:3;2763:37;2753:53;;:::o;2812:419::-;2978:4;3016:2;3005:9;3001:18;2993:26;;3065:9;3059:4;3055:20;3051:1;3040:9;3036:17;3029:47;3093:131;3219:4;3093:131;:::i;:::-;3085:139;;2983:248;;;:::o;3237:419::-;3403:4;3441:2;3430:9;3426:18;3418:26;;3490:9;3484:4;3480:20;3476:1;3465:9;3461:17;3454:47;3518:131;3644:4;3518:131;:::i;:::-;3510:139;;3408:248;;;:::o;3662:222::-;3755:4;3793:2;3782:9;3778:18;3770:26;;3806:71;3874:1;3863:9;3859:17;3850:6;3806:71;:::i;:::-;3760:124;;;;:::o;3890:129::-;3924:6;3951:20;;:::i;:::-;3941:30;;3980:33;4008:4;4000:6;3980:33;:::i;:::-;3931:88;;;:::o;4025:75::-;4058:6;4091:2;4085:9;4075:19;;4065:35;:::o;4106:308::-;4168:4;4258:18;4250:6;4247:30;4244:2;;;4280:18;;:::i;:::-;4244:2;4318:29;4340:6;4318:29;:::i;:::-;4310:37;;4402:4;4396;4392:15;4384:23;;4173:241;;;:::o;4420:169::-;4504:11;4538:6;4533:3;4526:19;4578:4;4573:3;4569:14;4554:29;;4516:73;;;;:::o;4595:305::-;4635:3;4654:20;4672:1;4654:20;:::i;:::-;4649:25;;4688:20;4706:1;4688:20;:::i;:::-;4683:25;;4842:1;4774:66;4770:74;4767:1;4764:81;4761:2;;;4848:18;;:::i;:::-;4761:2;4892:1;4889;4885:9;4878:16;;4639:261;;;;:::o;4906:96::-;4943:7;4972:24;4990:5;4972:24;:::i;:::-;4961:35;;4951:51;;;:::o;5008:126::-;5045:7;5085:42;5078:5;5074:54;5063:65;;5053:81;;;:::o;5140:77::-;5177:7;5206:5;5195:16;;5185:32;;;:::o;5223:307::-;5291:1;5301:113;5315:6;5312:1;5309:13;5301:113;;;5400:1;5395:3;5391:11;5385:18;5381:1;5376:3;5372:11;5365:39;5337:2;5334:1;5330:10;5325:15;;5301:113;;;5432:6;5429:1;5426:13;5423:2;;;5512:1;5503:6;5498:3;5494:16;5487:27;5423:2;5272:258;;;;:::o;5536:320::-;5580:6;5617:1;5611:4;5607:12;5597:22;;5664:1;5658:4;5654:12;5685:18;5675:2;;5741:4;5733:6;5729:17;5719:27;;5675:2;5803;5795:6;5792:14;5772:18;5769:38;5766:2;;;5822:18;;:::i;:::-;5766:2;5587:269;;;;:::o;5862:281::-;5945:27;5967:4;5945:27;:::i;:::-;5937:6;5933:40;6075:6;6063:10;6060:22;6039:18;6027:10;6024:34;6021:62;6018:2;;;6086:18;;:::i;:::-;6018:2;6126:10;6122:2;6115:22;5905:238;;;:::o;6149:180::-;6197:77;6194:1;6187:88;6294:4;6291:1;6284:15;6318:4;6315:1;6308:15;6335:180;6383:77;6380:1;6373:88;6480:4;6477:1;6470:15;6504:4;6501:1;6494:15;6521:180;6569:77;6566:1;6559:88;6666:4;6663:1;6656:15;6690:4;6687:1;6680:15;6707:102;6748:6;6799:2;6795:7;6790:2;6783:5;6779:14;6775:28;6765:38;;6755:54;;;:::o;6815:224::-;6955:34;6951:1;6943:6;6939:14;6932:58;7024:7;7019:2;7011:6;7007:15;7000:32;6921:118;:::o;7045:181::-;7185:33;7181:1;7173:6;7169:14;7162:57;7151:75;:::o;7232:122::-;7305:24;7323:5;7305:24;:::i;:::-;7298:5;7295:35;7285:2;;7344:1;7341;7334:12;7285:2;7275:79;:::o;7360:122::-;7433:24;7451:5;7433:24;:::i;:::-;7426:5;7423:35;7413:2;;7472:1;7469;7462:12;7413:2;7403:79;:::o;364:11164:39:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15631:40","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:40","statements":[{"nodeType":"YulAssignment","src":"69:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:40"},"nodeType":"YulFunctionCall","src":"78:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:40"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:40"},"nodeType":"YulFunctionCall","src":"107:33:40"},"nodeType":"YulExpressionStatement","src":"107:33:40"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:40","type":""}],"src":"7:139:40"},{"body":{"nodeType":"YulBlock","src":"204:87:40","statements":[{"nodeType":"YulAssignment","src":"214:29:40","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"236:6:40"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"223:12:40"},"nodeType":"YulFunctionCall","src":"223:20:40"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"214:5:40"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"279:5:40"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"252:26:40"},"nodeType":"YulFunctionCall","src":"252:33:40"},"nodeType":"YulExpressionStatement","src":"252:33:40"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"182:6:40","type":""},{"name":"end","nodeType":"YulTypedName","src":"190:3:40","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"198:5:40","type":""}],"src":"152:139:40"},{"body":{"nodeType":"YulBlock","src":"363:196:40","statements":[{"body":{"nodeType":"YulBlock","src":"409:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"418:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"421:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"411:6:40"},"nodeType":"YulFunctionCall","src":"411:12:40"},"nodeType":"YulExpressionStatement","src":"411:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"384:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"393:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"380:3:40"},"nodeType":"YulFunctionCall","src":"380:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"405:2:40","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"376:3:40"},"nodeType":"YulFunctionCall","src":"376:32:40"},"nodeType":"YulIf","src":"373:2:40"},{"nodeType":"YulBlock","src":"435:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"450:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"464:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"454:6:40","type":""}]},{"nodeType":"YulAssignment","src":"479:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"514:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"525:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"510:3:40"},"nodeType":"YulFunctionCall","src":"510:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"534:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"489:20:40"},"nodeType":"YulFunctionCall","src":"489:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"479:6:40"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"333:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"344:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"356:6:40","type":""}],"src":"297:262:40"},{"body":{"nodeType":"YulBlock","src":"648:324:40","statements":[{"body":{"nodeType":"YulBlock","src":"694:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"706:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"696:6:40"},"nodeType":"YulFunctionCall","src":"696:12:40"},"nodeType":"YulExpressionStatement","src":"696:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"669:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"678:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"665:3:40"},"nodeType":"YulFunctionCall","src":"665:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"690:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"661:3:40"},"nodeType":"YulFunctionCall","src":"661:32:40"},"nodeType":"YulIf","src":"658:2:40"},{"nodeType":"YulBlock","src":"720:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"735:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"749:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"739:6:40","type":""}]},{"nodeType":"YulAssignment","src":"764:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"799:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"810:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"795:3:40"},"nodeType":"YulFunctionCall","src":"795:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"819:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"774:20:40"},"nodeType":"YulFunctionCall","src":"774:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"764:6:40"}]}]},{"nodeType":"YulBlock","src":"847:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"862:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"876:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"866:6:40","type":""}]},{"nodeType":"YulAssignment","src":"892:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"927:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"938:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"923:3:40"},"nodeType":"YulFunctionCall","src":"923:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"947:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"902:20:40"},"nodeType":"YulFunctionCall","src":"902:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"892:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"610:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"621:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"633:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"641:6:40","type":""}],"src":"565:407:40"},{"body":{"nodeType":"YulBlock","src":"1078:452:40","statements":[{"body":{"nodeType":"YulBlock","src":"1124:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1133:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1136:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1126:6:40"},"nodeType":"YulFunctionCall","src":"1126:12:40"},"nodeType":"YulExpressionStatement","src":"1126:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1099:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"1108:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1095:3:40"},"nodeType":"YulFunctionCall","src":"1095:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"1120:2:40","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:40"},"nodeType":"YulFunctionCall","src":"1091:32:40"},"nodeType":"YulIf","src":"1088:2:40"},{"nodeType":"YulBlock","src":"1150:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1165:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1179:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1169:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1194:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1229:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1240:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1225:3:40"},"nodeType":"YulFunctionCall","src":"1225:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1249:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1204:20:40"},"nodeType":"YulFunctionCall","src":"1204:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1194:6:40"}]}]},{"nodeType":"YulBlock","src":"1277:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1292:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1306:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1296:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1322:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1368:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1353:3:40"},"nodeType":"YulFunctionCall","src":"1353:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1377:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1332:20:40"},"nodeType":"YulFunctionCall","src":"1332:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1322:6:40"}]}]},{"nodeType":"YulBlock","src":"1405:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1420:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1434:2:40","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1424:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1450:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1485:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1496:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1481:3:40"},"nodeType":"YulFunctionCall","src":"1481:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1505:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1460:20:40"},"nodeType":"YulFunctionCall","src":"1460:53:40"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1450:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1032:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1043:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1055:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1063:6:40","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1071:6:40","type":""}],"src":"978:552:40"},{"body":{"nodeType":"YulBlock","src":"1619:324:40","statements":[{"body":{"nodeType":"YulBlock","src":"1665:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1674:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1677:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1667:6:40"},"nodeType":"YulFunctionCall","src":"1667:12:40"},"nodeType":"YulExpressionStatement","src":"1667:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1640:7:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"1649:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1636:3:40"},"nodeType":"YulFunctionCall","src":"1636:23:40"},{"kind":"number","nodeType":"YulLiteral","src":"1661:2:40","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1632:3:40"},"nodeType":"YulFunctionCall","src":"1632:32:40"},"nodeType":"YulIf","src":"1629:2:40"},{"nodeType":"YulBlock","src":"1691:117:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1706:15:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1720:1:40","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1710:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1735:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1770:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1781:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1766:3:40"},"nodeType":"YulFunctionCall","src":"1766:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1790:7:40"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1745:20:40"},"nodeType":"YulFunctionCall","src":"1745:53:40"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1735:6:40"}]}]},{"nodeType":"YulBlock","src":"1818:118:40","statements":[{"nodeType":"YulVariableDeclaration","src":"1833:16:40","value":{"kind":"number","nodeType":"YulLiteral","src":"1847:2:40","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1837:6:40","type":""}]},{"nodeType":"YulAssignment","src":"1863:63:40","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1898:9:40"},{"name":"offset","nodeType":"YulIdentifier","src":"1909:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1894:3:40"},"nodeType":"YulFunctionCall","src":"1894:22:40"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1918:7:40"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1873:20:40"},"nodeType":"YulFunctionCall","src":"1873:53:40"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1863:6:40"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1581:9:40","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1592:7:40","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1604:6:40","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1612:6:40","type":""}],"src":"1536:407:40"},{"body":{"nodeType":"YulBlock","src":"2014:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2031:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2054:5:40"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2036:17:40"},"nodeType":"YulFunctionCall","src":"2036:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2024:6:40"},"nodeType":"YulFunctionCall","src":"2024:37:40"},"nodeType":"YulExpressionStatement","src":"2024:37:40"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2002:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2009:3:40","type":""}],"src":"1949:118:40"},{"body":{"nodeType":"YulBlock","src":"2132:50:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2149:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2169:5:40"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2154:14:40"},"nodeType":"YulFunctionCall","src":"2154:21:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2142:6:40"},"nodeType":"YulFunctionCall","src":"2142:34:40"},"nodeType":"YulExpressionStatement","src":"2142:34:40"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2120:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2127:3:40","type":""}],"src":"2073:109:40"},{"body":{"nodeType":"YulBlock","src":"2280:272:40","statements":[{"nodeType":"YulVariableDeclaration","src":"2290:53:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2337:5:40"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2304:32:40"},"nodeType":"YulFunctionCall","src":"2304:39:40"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2294:6:40","type":""}]},{"nodeType":"YulAssignment","src":"2352:78:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2418:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"2423:6:40"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2359:58:40"},"nodeType":"YulFunctionCall","src":"2359:71:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2352:3:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2465:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"2472:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:40"},"nodeType":"YulFunctionCall","src":"2461:16:40"},{"name":"pos","nodeType":"YulIdentifier","src":"2479:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"2484:6:40"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2439:21:40"},"nodeType":"YulFunctionCall","src":"2439:52:40"},"nodeType":"YulExpressionStatement","src":"2439:52:40"},{"nodeType":"YulAssignment","src":"2500:46:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2511:3:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2538:6:40"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2516:21:40"},"nodeType":"YulFunctionCall","src":"2516:29:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2507:3:40"},"nodeType":"YulFunctionCall","src":"2507:39:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2500:3:40"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2261:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2268:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2276:3:40","type":""}],"src":"2188:364:40"},{"body":{"nodeType":"YulBlock","src":"2704:220:40","statements":[{"nodeType":"YulAssignment","src":"2714:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2780:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"2785:2:40","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2721:58:40"},"nodeType":"YulFunctionCall","src":"2721:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2714:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2886:3:40"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"2797:88:40"},"nodeType":"YulFunctionCall","src":"2797:93:40"},"nodeType":"YulExpressionStatement","src":"2797:93:40"},{"nodeType":"YulAssignment","src":"2899:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2910:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"2915:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2906:3:40"},"nodeType":"YulFunctionCall","src":"2906:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2899:3:40"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2692:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2700:3:40","type":""}],"src":"2558:366:40"},{"body":{"nodeType":"YulBlock","src":"3076:220:40","statements":[{"nodeType":"YulAssignment","src":"3086:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3152:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3157:2:40","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3093:58:40"},"nodeType":"YulFunctionCall","src":"3093:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3086:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3258:3:40"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"3169:88:40"},"nodeType":"YulFunctionCall","src":"3169:93:40"},"nodeType":"YulExpressionStatement","src":"3169:93:40"},{"nodeType":"YulAssignment","src":"3271:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3282:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3287:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3278:3:40"},"nodeType":"YulFunctionCall","src":"3278:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3271:3:40"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3064:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3072:3:40","type":""}],"src":"2930:366:40"},{"body":{"nodeType":"YulBlock","src":"3448:220:40","statements":[{"nodeType":"YulAssignment","src":"3458:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3524:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3529:2:40","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3465:58:40"},"nodeType":"YulFunctionCall","src":"3465:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3458:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3630:3:40"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"3541:88:40"},"nodeType":"YulFunctionCall","src":"3541:93:40"},"nodeType":"YulExpressionStatement","src":"3541:93:40"},{"nodeType":"YulAssignment","src":"3643:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3654:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3659:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3650:3:40"},"nodeType":"YulFunctionCall","src":"3650:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3643:3:40"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3436:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3444:3:40","type":""}],"src":"3302:366:40"},{"body":{"nodeType":"YulBlock","src":"3820:220:40","statements":[{"nodeType":"YulAssignment","src":"3830:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3896:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"3901:2:40","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3837:58:40"},"nodeType":"YulFunctionCall","src":"3837:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3830:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4002:3:40"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"3913:88:40"},"nodeType":"YulFunctionCall","src":"3913:93:40"},"nodeType":"YulExpressionStatement","src":"3913:93:40"},{"nodeType":"YulAssignment","src":"4015:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4026:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4031:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4022:3:40"},"nodeType":"YulFunctionCall","src":"4022:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4015:3:40"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3808:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3816:3:40","type":""}],"src":"3674:366:40"},{"body":{"nodeType":"YulBlock","src":"4192:220:40","statements":[{"nodeType":"YulAssignment","src":"4202:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4268:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4273:2:40","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4209:58:40"},"nodeType":"YulFunctionCall","src":"4209:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4202:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4374:3:40"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"4285:88:40"},"nodeType":"YulFunctionCall","src":"4285:93:40"},"nodeType":"YulExpressionStatement","src":"4285:93:40"},{"nodeType":"YulAssignment","src":"4387:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4398:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4403:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4394:3:40"},"nodeType":"YulFunctionCall","src":"4394:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4387:3:40"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4180:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4188:3:40","type":""}],"src":"4046:366:40"},{"body":{"nodeType":"YulBlock","src":"4564:220:40","statements":[{"nodeType":"YulAssignment","src":"4574:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4640:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4645:2:40","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4581:58:40"},"nodeType":"YulFunctionCall","src":"4581:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4574:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4746:3:40"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"4657:88:40"},"nodeType":"YulFunctionCall","src":"4657:93:40"},"nodeType":"YulExpressionStatement","src":"4657:93:40"},{"nodeType":"YulAssignment","src":"4759:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4770:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"4775:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4766:3:40"},"nodeType":"YulFunctionCall","src":"4766:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4759:3:40"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4552:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4560:3:40","type":""}],"src":"4418:366:40"},{"body":{"nodeType":"YulBlock","src":"4936:220:40","statements":[{"nodeType":"YulAssignment","src":"4946:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5012:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"5017:2:40","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4953:58:40"},"nodeType":"YulFunctionCall","src":"4953:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4946:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5118:3:40"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"5029:88:40"},"nodeType":"YulFunctionCall","src":"5029:93:40"},"nodeType":"YulExpressionStatement","src":"5029:93:40"},{"nodeType":"YulAssignment","src":"5131:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5142:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"5147:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5138:3:40"},"nodeType":"YulFunctionCall","src":"5138:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5131:3:40"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4924:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4932:3:40","type":""}],"src":"4790:366:40"},{"body":{"nodeType":"YulBlock","src":"5308:220:40","statements":[{"nodeType":"YulAssignment","src":"5318:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5384:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"5389:2:40","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5325:58:40"},"nodeType":"YulFunctionCall","src":"5325:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5318:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5490:3:40"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"5401:88:40"},"nodeType":"YulFunctionCall","src":"5401:93:40"},"nodeType":"YulExpressionStatement","src":"5401:93:40"},{"nodeType":"YulAssignment","src":"5503:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5514:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"5519:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5510:3:40"},"nodeType":"YulFunctionCall","src":"5510:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5503:3:40"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5296:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5304:3:40","type":""}],"src":"5162:366:40"},{"body":{"nodeType":"YulBlock","src":"5680:220:40","statements":[{"nodeType":"YulAssignment","src":"5690:74:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5756:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"5761:2:40","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5697:58:40"},"nodeType":"YulFunctionCall","src":"5697:67:40"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5690:3:40"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5862:3:40"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"5773:88:40"},"nodeType":"YulFunctionCall","src":"5773:93:40"},"nodeType":"YulExpressionStatement","src":"5773:93:40"},{"nodeType":"YulAssignment","src":"5875:19:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5886:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"5891:2:40","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5882:3:40"},"nodeType":"YulFunctionCall","src":"5882:12:40"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5875:3:40"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5668:3:40","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5676:3:40","type":""}],"src":"5534:366:40"},{"body":{"nodeType":"YulBlock","src":"5971:53:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5988:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6011:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5993:17:40"},"nodeType":"YulFunctionCall","src":"5993:24:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5981:6:40"},"nodeType":"YulFunctionCall","src":"5981:37:40"},"nodeType":"YulExpressionStatement","src":"5981:37:40"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5959:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5966:3:40","type":""}],"src":"5906:118:40"},{"body":{"nodeType":"YulBlock","src":"6091:51:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6108:3:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6129:5:40"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6113:15:40"},"nodeType":"YulFunctionCall","src":"6113:22:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6101:6:40"},"nodeType":"YulFunctionCall","src":"6101:35:40"},"nodeType":"YulExpressionStatement","src":"6101:35:40"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6079:5:40","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6086:3:40","type":""}],"src":"6030:112:40"},{"body":{"nodeType":"YulBlock","src":"6246:124:40","statements":[{"nodeType":"YulAssignment","src":"6256:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6268:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6279:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6264:3:40"},"nodeType":"YulFunctionCall","src":"6264:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6256:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6336:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6349:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6360:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6345:3:40"},"nodeType":"YulFunctionCall","src":"6345:17:40"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6292:43:40"},"nodeType":"YulFunctionCall","src":"6292:71:40"},"nodeType":"YulExpressionStatement","src":"6292:71:40"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6218:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6230:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6241:4:40","type":""}],"src":"6148:222:40"},{"body":{"nodeType":"YulBlock","src":"6468:118:40","statements":[{"nodeType":"YulAssignment","src":"6478:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6490:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6501:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6486:3:40"},"nodeType":"YulFunctionCall","src":"6486:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6478:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6552:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6565:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6576:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6561:3:40"},"nodeType":"YulFunctionCall","src":"6561:17:40"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"6514:37:40"},"nodeType":"YulFunctionCall","src":"6514:65:40"},"nodeType":"YulExpressionStatement","src":"6514:65:40"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6440:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6452:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6463:4:40","type":""}],"src":"6376:210:40"},{"body":{"nodeType":"YulBlock","src":"6710:195:40","statements":[{"nodeType":"YulAssignment","src":"6720:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6732:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6743:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6728:3:40"},"nodeType":"YulFunctionCall","src":"6728:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6720:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6767:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"6778:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6763:3:40"},"nodeType":"YulFunctionCall","src":"6763:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6786:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"6792:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6782:3:40"},"nodeType":"YulFunctionCall","src":"6782:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6756:6:40"},"nodeType":"YulFunctionCall","src":"6756:47:40"},"nodeType":"YulExpressionStatement","src":"6756:47:40"},{"nodeType":"YulAssignment","src":"6812:86:40","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6884:6:40"},{"name":"tail","nodeType":"YulIdentifier","src":"6893:4:40"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6820:63:40"},"nodeType":"YulFunctionCall","src":"6820:78:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6812:4:40"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6682:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6694:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6705:4:40","type":""}],"src":"6592:313:40"},{"body":{"nodeType":"YulBlock","src":"7082:248:40","statements":[{"nodeType":"YulAssignment","src":"7092:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7104:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"7115:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7100:3:40"},"nodeType":"YulFunctionCall","src":"7100:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7092:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7139:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"7150:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7135:3:40"},"nodeType":"YulFunctionCall","src":"7135:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7158:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"7164:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7154:3:40"},"nodeType":"YulFunctionCall","src":"7154:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7128:6:40"},"nodeType":"YulFunctionCall","src":"7128:47:40"},"nodeType":"YulExpressionStatement","src":"7128:47:40"},{"nodeType":"YulAssignment","src":"7184:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7318:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7192:124:40"},"nodeType":"YulFunctionCall","src":"7192:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7184:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7062:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7077:4:40","type":""}],"src":"6911:419:40"},{"body":{"nodeType":"YulBlock","src":"7507:248:40","statements":[{"nodeType":"YulAssignment","src":"7517:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7529:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"7540:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7525:3:40"},"nodeType":"YulFunctionCall","src":"7525:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7517:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7564:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"7575:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7560:3:40"},"nodeType":"YulFunctionCall","src":"7560:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7583:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"7589:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7579:3:40"},"nodeType":"YulFunctionCall","src":"7579:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7553:6:40"},"nodeType":"YulFunctionCall","src":"7553:47:40"},"nodeType":"YulExpressionStatement","src":"7553:47:40"},{"nodeType":"YulAssignment","src":"7609:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7743:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7617:124:40"},"nodeType":"YulFunctionCall","src":"7617:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7609:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7487:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7502:4:40","type":""}],"src":"7336:419:40"},{"body":{"nodeType":"YulBlock","src":"7932:248:40","statements":[{"nodeType":"YulAssignment","src":"7942:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7954:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"7965:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7950:3:40"},"nodeType":"YulFunctionCall","src":"7950:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7942:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7989:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8000:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7985:3:40"},"nodeType":"YulFunctionCall","src":"7985:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8008:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"8014:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8004:3:40"},"nodeType":"YulFunctionCall","src":"8004:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7978:6:40"},"nodeType":"YulFunctionCall","src":"7978:47:40"},"nodeType":"YulExpressionStatement","src":"7978:47:40"},{"nodeType":"YulAssignment","src":"8034:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8168:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8042:124:40"},"nodeType":"YulFunctionCall","src":"8042:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8034:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7912:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7927:4:40","type":""}],"src":"7761:419:40"},{"body":{"nodeType":"YulBlock","src":"8357:248:40","statements":[{"nodeType":"YulAssignment","src":"8367:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8379:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8390:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8375:3:40"},"nodeType":"YulFunctionCall","src":"8375:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8367:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8414:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8425:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8410:3:40"},"nodeType":"YulFunctionCall","src":"8410:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8433:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"8439:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8429:3:40"},"nodeType":"YulFunctionCall","src":"8429:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8403:6:40"},"nodeType":"YulFunctionCall","src":"8403:47:40"},"nodeType":"YulExpressionStatement","src":"8403:47:40"},{"nodeType":"YulAssignment","src":"8459:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8593:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8467:124:40"},"nodeType":"YulFunctionCall","src":"8467:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8459:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8337:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8352:4:40","type":""}],"src":"8186:419:40"},{"body":{"nodeType":"YulBlock","src":"8782:248:40","statements":[{"nodeType":"YulAssignment","src":"8792:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8804:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8815:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8800:3:40"},"nodeType":"YulFunctionCall","src":"8800:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8792:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8839:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"8850:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8835:3:40"},"nodeType":"YulFunctionCall","src":"8835:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8858:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"8864:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8854:3:40"},"nodeType":"YulFunctionCall","src":"8854:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8828:6:40"},"nodeType":"YulFunctionCall","src":"8828:47:40"},"nodeType":"YulExpressionStatement","src":"8828:47:40"},{"nodeType":"YulAssignment","src":"8884:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9018:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8892:124:40"},"nodeType":"YulFunctionCall","src":"8892:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8884:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8762:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8777:4:40","type":""}],"src":"8611:419:40"},{"body":{"nodeType":"YulBlock","src":"9207:248:40","statements":[{"nodeType":"YulAssignment","src":"9217:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9229:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9240:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9225:3:40"},"nodeType":"YulFunctionCall","src":"9225:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9217:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9264:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9275:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9260:3:40"},"nodeType":"YulFunctionCall","src":"9260:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9283:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"9289:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9279:3:40"},"nodeType":"YulFunctionCall","src":"9279:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9253:6:40"},"nodeType":"YulFunctionCall","src":"9253:47:40"},"nodeType":"YulExpressionStatement","src":"9253:47:40"},{"nodeType":"YulAssignment","src":"9309:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9443:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9317:124:40"},"nodeType":"YulFunctionCall","src":"9317:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9309:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9187:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9202:4:40","type":""}],"src":"9036:419:40"},{"body":{"nodeType":"YulBlock","src":"9632:248:40","statements":[{"nodeType":"YulAssignment","src":"9642:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9654:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9665:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9650:3:40"},"nodeType":"YulFunctionCall","src":"9650:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9642:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9689:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"9700:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9685:3:40"},"nodeType":"YulFunctionCall","src":"9685:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9708:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"9714:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9704:3:40"},"nodeType":"YulFunctionCall","src":"9704:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9678:6:40"},"nodeType":"YulFunctionCall","src":"9678:47:40"},"nodeType":"YulExpressionStatement","src":"9678:47:40"},{"nodeType":"YulAssignment","src":"9734:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9868:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9742:124:40"},"nodeType":"YulFunctionCall","src":"9742:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9734:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9612:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9627:4:40","type":""}],"src":"9461:419:40"},{"body":{"nodeType":"YulBlock","src":"10057:248:40","statements":[{"nodeType":"YulAssignment","src":"10067:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10079:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10090:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10075:3:40"},"nodeType":"YulFunctionCall","src":"10075:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10067:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10114:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10125:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10110:3:40"},"nodeType":"YulFunctionCall","src":"10110:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10133:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"10139:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10129:3:40"},"nodeType":"YulFunctionCall","src":"10129:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10103:6:40"},"nodeType":"YulFunctionCall","src":"10103:47:40"},"nodeType":"YulExpressionStatement","src":"10103:47:40"},{"nodeType":"YulAssignment","src":"10159:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10293:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10167:124:40"},"nodeType":"YulFunctionCall","src":"10167:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10159:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10037:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10052:4:40","type":""}],"src":"9886:419:40"},{"body":{"nodeType":"YulBlock","src":"10482:248:40","statements":[{"nodeType":"YulAssignment","src":"10492:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10504:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10515:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10500:3:40"},"nodeType":"YulFunctionCall","src":"10500:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10492:4:40"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10539:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10550:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10535:3:40"},"nodeType":"YulFunctionCall","src":"10535:17:40"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10558:4:40"},{"name":"headStart","nodeType":"YulIdentifier","src":"10564:9:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10554:3:40"},"nodeType":"YulFunctionCall","src":"10554:20:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10528:6:40"},"nodeType":"YulFunctionCall","src":"10528:47:40"},"nodeType":"YulExpressionStatement","src":"10528:47:40"},{"nodeType":"YulAssignment","src":"10584:139:40","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10718:4:40"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10592:124:40"},"nodeType":"YulFunctionCall","src":"10592:131:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10584:4:40"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10462:9:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10477:4:40","type":""}],"src":"10311:419:40"},{"body":{"nodeType":"YulBlock","src":"10834:124:40","statements":[{"nodeType":"YulAssignment","src":"10844:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10856:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10867:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10852:3:40"},"nodeType":"YulFunctionCall","src":"10852:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10844:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10924:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10937:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"10948:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10933:3:40"},"nodeType":"YulFunctionCall","src":"10933:17:40"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10880:43:40"},"nodeType":"YulFunctionCall","src":"10880:71:40"},"nodeType":"YulExpressionStatement","src":"10880:71:40"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10806:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10818:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10829:4:40","type":""}],"src":"10736:222:40"},{"body":{"nodeType":"YulBlock","src":"11058:120:40","statements":[{"nodeType":"YulAssignment","src":"11068:26:40","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11080:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"11091:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11076:3:40"},"nodeType":"YulFunctionCall","src":"11076:18:40"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11068:4:40"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11144:6:40"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11157:9:40"},{"kind":"number","nodeType":"YulLiteral","src":"11168:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11153:3:40"},"nodeType":"YulFunctionCall","src":"11153:17:40"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"11104:39:40"},"nodeType":"YulFunctionCall","src":"11104:67:40"},"nodeType":"YulExpressionStatement","src":"11104:67:40"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11030:9:40","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11042:6:40","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11053:4:40","type":""}],"src":"10964:214:40"},{"body":{"nodeType":"YulBlock","src":"11243:40:40","statements":[{"nodeType":"YulAssignment","src":"11254:22:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11270:5:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11264:5:40"},"nodeType":"YulFunctionCall","src":"11264:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11254:6:40"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11226:5:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11236:6:40","type":""}],"src":"11184:99:40"},{"body":{"nodeType":"YulBlock","src":"11385:73:40","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11402:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"11407:6:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11395:6:40"},"nodeType":"YulFunctionCall","src":"11395:19:40"},"nodeType":"YulExpressionStatement","src":"11395:19:40"},{"nodeType":"YulAssignment","src":"11423:29:40","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11442:3:40"},{"kind":"number","nodeType":"YulLiteral","src":"11447:4:40","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11438:3:40"},"nodeType":"YulFunctionCall","src":"11438:14:40"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11423:11:40"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11357:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"11362:6:40","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11373:11:40","type":""}],"src":"11289:169:40"},{"body":{"nodeType":"YulBlock","src":"11508:261:40","statements":[{"nodeType":"YulAssignment","src":"11518:25:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11541:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11523:17:40"},"nodeType":"YulFunctionCall","src":"11523:20:40"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11518:1:40"}]},{"nodeType":"YulAssignment","src":"11552:25:40","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11575:1:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11557:17:40"},"nodeType":"YulFunctionCall","src":"11557:20:40"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11552:1:40"}]},{"body":{"nodeType":"YulBlock","src":"11715:22:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11717:16:40"},"nodeType":"YulFunctionCall","src":"11717:18:40"},"nodeType":"YulExpressionStatement","src":"11717:18:40"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11636:1:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11643:66:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"11711:1:40"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11639:3:40"},"nodeType":"YulFunctionCall","src":"11639:74:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11633:2:40"},"nodeType":"YulFunctionCall","src":"11633:81:40"},"nodeType":"YulIf","src":"11630:2:40"},{"nodeType":"YulAssignment","src":"11747:16:40","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11758:1:40"},{"name":"y","nodeType":"YulIdentifier","src":"11761:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11754:3:40"},"nodeType":"YulFunctionCall","src":"11754:9:40"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11747:3:40"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11495:1:40","type":""},{"name":"y","nodeType":"YulTypedName","src":"11498:1:40","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11504:3:40","type":""}],"src":"11464:305:40"},{"body":{"nodeType":"YulBlock","src":"11820:51:40","statements":[{"nodeType":"YulAssignment","src":"11830:35:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11859:5:40"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"11841:17:40"},"nodeType":"YulFunctionCall","src":"11841:24:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11830:7:40"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11802:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11812:7:40","type":""}],"src":"11775:96:40"},{"body":{"nodeType":"YulBlock","src":"11919:48:40","statements":[{"nodeType":"YulAssignment","src":"11929:32:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11954:5:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11947:6:40"},"nodeType":"YulFunctionCall","src":"11947:13:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11940:6:40"},"nodeType":"YulFunctionCall","src":"11940:21:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11929:7:40"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11901:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11911:7:40","type":""}],"src":"11877:90:40"},{"body":{"nodeType":"YulBlock","src":"12018:81:40","statements":[{"nodeType":"YulAssignment","src":"12028:65:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12043:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"12050:42:40","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12039:3:40"},"nodeType":"YulFunctionCall","src":"12039:54:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12028:7:40"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12000:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12010:7:40","type":""}],"src":"11973:126:40"},{"body":{"nodeType":"YulBlock","src":"12150:32:40","statements":[{"nodeType":"YulAssignment","src":"12160:16:40","value":{"name":"value","nodeType":"YulIdentifier","src":"12171:5:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12160:7:40"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12132:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12142:7:40","type":""}],"src":"12105:77:40"},{"body":{"nodeType":"YulBlock","src":"12231:43:40","statements":[{"nodeType":"YulAssignment","src":"12241:27:40","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12256:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"12263:4:40","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12252:3:40"},"nodeType":"YulFunctionCall","src":"12252:16:40"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12241:7:40"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12213:5:40","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12223:7:40","type":""}],"src":"12188:86:40"},{"body":{"nodeType":"YulBlock","src":"12329:258:40","statements":[{"nodeType":"YulVariableDeclaration","src":"12339:10:40","value":{"kind":"number","nodeType":"YulLiteral","src":"12348:1:40","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12343:1:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"12408:63:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12433:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"12438:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12429:3:40"},"nodeType":"YulFunctionCall","src":"12429:11:40"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12452:3:40"},{"name":"i","nodeType":"YulIdentifier","src":"12457:1:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12448:3:40"},"nodeType":"YulFunctionCall","src":"12448:11:40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12442:5:40"},"nodeType":"YulFunctionCall","src":"12442:18:40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12422:6:40"},"nodeType":"YulFunctionCall","src":"12422:39:40"},"nodeType":"YulExpressionStatement","src":"12422:39:40"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12369:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"12372:6:40"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12366:2:40"},"nodeType":"YulFunctionCall","src":"12366:13:40"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12380:19:40","statements":[{"nodeType":"YulAssignment","src":"12382:15:40","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12391:1:40"},{"kind":"number","nodeType":"YulLiteral","src":"12394:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12387:3:40"},"nodeType":"YulFunctionCall","src":"12387:10:40"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12382:1:40"}]}]},"pre":{"nodeType":"YulBlock","src":"12362:3:40","statements":[]},"src":"12358:113:40"},{"body":{"nodeType":"YulBlock","src":"12505:76:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12555:3:40"},{"name":"length","nodeType":"YulIdentifier","src":"12560:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12551:3:40"},"nodeType":"YulFunctionCall","src":"12551:16:40"},{"kind":"number","nodeType":"YulLiteral","src":"12569:1:40","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12544:6:40"},"nodeType":"YulFunctionCall","src":"12544:27:40"},"nodeType":"YulExpressionStatement","src":"12544:27:40"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12486:1:40"},{"name":"length","nodeType":"YulIdentifier","src":"12489:6:40"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12483:2:40"},"nodeType":"YulFunctionCall","src":"12483:13:40"},"nodeType":"YulIf","src":"12480:2:40"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12311:3:40","type":""},{"name":"dst","nodeType":"YulTypedName","src":"12316:3:40","type":""},{"name":"length","nodeType":"YulTypedName","src":"12321:6:40","type":""}],"src":"12280:307:40"},{"body":{"nodeType":"YulBlock","src":"12644:269:40","statements":[{"nodeType":"YulAssignment","src":"12654:22:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12668:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"12674:1:40","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12664:3:40"},"nodeType":"YulFunctionCall","src":"12664:12:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12654:6:40"}]},{"nodeType":"YulVariableDeclaration","src":"12685:38:40","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12715:4:40"},{"kind":"number","nodeType":"YulLiteral","src":"12721:1:40","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12711:3:40"},"nodeType":"YulFunctionCall","src":"12711:12:40"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12689:18:40","type":""}]},{"body":{"nodeType":"YulBlock","src":"12762:51:40","statements":[{"nodeType":"YulAssignment","src":"12776:27:40","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12790:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12798:4:40","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12786:3:40"},"nodeType":"YulFunctionCall","src":"12786:17:40"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12776:6:40"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12742:18:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12735:6:40"},"nodeType":"YulFunctionCall","src":"12735:26:40"},"nodeType":"YulIf","src":"12732:2:40"},{"body":{"nodeType":"YulBlock","src":"12865:42:40","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12879:16:40"},"nodeType":"YulFunctionCall","src":"12879:18:40"},"nodeType":"YulExpressionStatement","src":"12879:18:40"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12829:18:40"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12852:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"12860:2:40","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12849:2:40"},"nodeType":"YulFunctionCall","src":"12849:14:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12826:2:40"},"nodeType":"YulFunctionCall","src":"12826:38:40"},"nodeType":"YulIf","src":"12823:2:40"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12628:4:40","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12637:6:40","type":""}],"src":"12593:320:40"},{"body":{"nodeType":"YulBlock","src":"12947:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12964:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12967:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12957:6:40"},"nodeType":"YulFunctionCall","src":"12957:88:40"},"nodeType":"YulExpressionStatement","src":"12957:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13061:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13064:4:40","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13054:6:40"},"nodeType":"YulFunctionCall","src":"13054:15:40"},"nodeType":"YulExpressionStatement","src":"13054:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13085:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13088:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13078:6:40"},"nodeType":"YulFunctionCall","src":"13078:15:40"},"nodeType":"YulExpressionStatement","src":"13078:15:40"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12919:180:40"},{"body":{"nodeType":"YulBlock","src":"13133:152:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13150:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13153:77:40","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13143:6:40"},"nodeType":"YulFunctionCall","src":"13143:88:40"},"nodeType":"YulExpressionStatement","src":"13143:88:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13247:1:40","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13250:4:40","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13240:6:40"},"nodeType":"YulFunctionCall","src":"13240:15:40"},"nodeType":"YulExpressionStatement","src":"13240:15:40"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13271:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13274:4:40","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13264:6:40"},"nodeType":"YulFunctionCall","src":"13264:15:40"},"nodeType":"YulExpressionStatement","src":"13264:15:40"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"13105:180:40"},{"body":{"nodeType":"YulBlock","src":"13339:54:40","statements":[{"nodeType":"YulAssignment","src":"13349:38:40","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13367:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"13374:2:40","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13363:3:40"},"nodeType":"YulFunctionCall","src":"13363:14:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13383:2:40","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13379:3:40"},"nodeType":"YulFunctionCall","src":"13379:7:40"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13359:3:40"},"nodeType":"YulFunctionCall","src":"13359:28:40"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13349:6:40"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13322:5:40","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13332:6:40","type":""}],"src":"13291:102:40"},{"body":{"nodeType":"YulBlock","src":"13505:116:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13527:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"13535:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13523:3:40"},"nodeType":"YulFunctionCall","src":"13523:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"13539:34:40","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13516:6:40"},"nodeType":"YulFunctionCall","src":"13516:58:40"},"nodeType":"YulExpressionStatement","src":"13516:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13595:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"13603:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13591:3:40"},"nodeType":"YulFunctionCall","src":"13591:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"13608:5:40","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13584:6:40"},"nodeType":"YulFunctionCall","src":"13584:30:40"},"nodeType":"YulExpressionStatement","src":"13584:30:40"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13497:6:40","type":""}],"src":"13399:222:40"},{"body":{"nodeType":"YulBlock","src":"13733:119:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13755:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"13763:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13751:3:40"},"nodeType":"YulFunctionCall","src":"13751:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"13767:34:40","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13744:6:40"},"nodeType":"YulFunctionCall","src":"13744:58:40"},"nodeType":"YulExpressionStatement","src":"13744:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13823:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"13831:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13819:3:40"},"nodeType":"YulFunctionCall","src":"13819:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"13836:8:40","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13812:6:40"},"nodeType":"YulFunctionCall","src":"13812:33:40"},"nodeType":"YulExpressionStatement","src":"13812:33:40"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13725:6:40","type":""}],"src":"13627:225:40"},{"body":{"nodeType":"YulBlock","src":"13964:115:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13986:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"13994:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13982:3:40"},"nodeType":"YulFunctionCall","src":"13982:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"13998:34:40","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13975:6:40"},"nodeType":"YulFunctionCall","src":"13975:58:40"},"nodeType":"YulExpressionStatement","src":"13975:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14054:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"14062:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14050:3:40"},"nodeType":"YulFunctionCall","src":"14050:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"14067:4:40","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14043:6:40"},"nodeType":"YulFunctionCall","src":"14043:29:40"},"nodeType":"YulExpressionStatement","src":"14043:29:40"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13956:6:40","type":""}],"src":"13858:221:40"},{"body":{"nodeType":"YulBlock","src":"14191:73:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14213:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"14221:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14209:3:40"},"nodeType":"YulFunctionCall","src":"14209:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"14225:31:40","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14202:6:40"},"nodeType":"YulFunctionCall","src":"14202:55:40"},"nodeType":"YulExpressionStatement","src":"14202:55:40"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14183:6:40","type":""}],"src":"14085:179:40"},{"body":{"nodeType":"YulBlock","src":"14376:119:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14398:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"14406:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14394:3:40"},"nodeType":"YulFunctionCall","src":"14394:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"14410:34:40","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14387:6:40"},"nodeType":"YulFunctionCall","src":"14387:58:40"},"nodeType":"YulExpressionStatement","src":"14387:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14466:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"14474:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14462:3:40"},"nodeType":"YulFunctionCall","src":"14462:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"14479:8:40","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14455:6:40"},"nodeType":"YulFunctionCall","src":"14455:33:40"},"nodeType":"YulExpressionStatement","src":"14455:33:40"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14368:6:40","type":""}],"src":"14270:225:40"},{"body":{"nodeType":"YulBlock","src":"14607:76:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14629:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"14637:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14625:3:40"},"nodeType":"YulFunctionCall","src":"14625:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"14641:34:40","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14618:6:40"},"nodeType":"YulFunctionCall","src":"14618:58:40"},"nodeType":"YulExpressionStatement","src":"14618:58:40"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14599:6:40","type":""}],"src":"14501:182:40"},{"body":{"nodeType":"YulBlock","src":"14795:118:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14817:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"14825:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14813:3:40"},"nodeType":"YulFunctionCall","src":"14813:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"14829:34:40","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14806:6:40"},"nodeType":"YulFunctionCall","src":"14806:58:40"},"nodeType":"YulExpressionStatement","src":"14806:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14885:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"14893:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14881:3:40"},"nodeType":"YulFunctionCall","src":"14881:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"14898:7:40","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14874:6:40"},"nodeType":"YulFunctionCall","src":"14874:32:40"},"nodeType":"YulExpressionStatement","src":"14874:32:40"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14787:6:40","type":""}],"src":"14689:224:40"},{"body":{"nodeType":"YulBlock","src":"15025:117:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15047:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"15055:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15043:3:40"},"nodeType":"YulFunctionCall","src":"15043:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"15059:34:40","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15036:6:40"},"nodeType":"YulFunctionCall","src":"15036:58:40"},"nodeType":"YulExpressionStatement","src":"15036:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15115:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"15123:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15111:3:40"},"nodeType":"YulFunctionCall","src":"15111:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"15128:6:40","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15104:6:40"},"nodeType":"YulFunctionCall","src":"15104:31:40"},"nodeType":"YulExpressionStatement","src":"15104:31:40"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15017:6:40","type":""}],"src":"14919:223:40"},{"body":{"nodeType":"YulBlock","src":"15254:118:40","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15276:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"15284:1:40","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15272:3:40"},"nodeType":"YulFunctionCall","src":"15272:14:40"},{"kind":"string","nodeType":"YulLiteral","src":"15288:34:40","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15265:6:40"},"nodeType":"YulFunctionCall","src":"15265:58:40"},"nodeType":"YulExpressionStatement","src":"15265:58:40"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15344:6:40"},{"kind":"number","nodeType":"YulLiteral","src":"15352:2:40","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15340:3:40"},"nodeType":"YulFunctionCall","src":"15340:15:40"},{"kind":"string","nodeType":"YulLiteral","src":"15357:7:40","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15333:6:40"},"nodeType":"YulFunctionCall","src":"15333:32:40"},"nodeType":"YulExpressionStatement","src":"15333:32:40"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15246:6:40","type":""}],"src":"15148:224:40"},{"body":{"nodeType":"YulBlock","src":"15421:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"15478:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15487:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15490:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15480:6:40"},"nodeType":"YulFunctionCall","src":"15480:12:40"},"nodeType":"YulExpressionStatement","src":"15480:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15444:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15469:5:40"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"15451:17:40"},"nodeType":"YulFunctionCall","src":"15451:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15441:2:40"},"nodeType":"YulFunctionCall","src":"15441:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15434:6:40"},"nodeType":"YulFunctionCall","src":"15434:43:40"},"nodeType":"YulIf","src":"15431:2:40"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15414:5:40","type":""}],"src":"15378:122:40"},{"body":{"nodeType":"YulBlock","src":"15549:79:40","statements":[{"body":{"nodeType":"YulBlock","src":"15606:16:40","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15615:1:40","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15618:1:40","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15608:6:40"},"nodeType":"YulFunctionCall","src":"15608:12:40"},"nodeType":"YulExpressionStatement","src":"15608:12:40"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15572:5:40"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15597:5:40"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15579:17:40"},"nodeType":"YulFunctionCall","src":"15579:24:40"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15569:2:40"},"nodeType":"YulFunctionCall","src":"15569:35:40"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15562:6:40"},"nodeType":"YulFunctionCall","src":"15562:43:40"},"nodeType":"YulIf","src":"15559:2:40"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15542:5:40","type":""}],"src":"15506:122:40"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":40,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d71461024f578063a9059cbb1461027f578063dd62ed3e146102af578063f2fde38b146102df576100ea565b8063715018a6146102095780638da5cb5b1461021357806395d89b4114610231576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806370a08231146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102fb565b6040516101049190611076565b60405180910390f35b61012760048036038101906101229190610e54565b61038d565b604051610134919061105b565b60405180910390f35b6101456103b0565b60405161015291906111b8565b60405180910390f35b61017560048036038101906101709190610e05565b6103ba565b604051610182919061105b565b60405180910390f35b6101936103e9565b6040516101a091906111d3565b60405180910390f35b6101c360048036038101906101be9190610e54565b6103f2565b6040516101d0919061105b565b60405180910390f35b6101f360048036038101906101ee9190610da0565b610429565b60405161020091906111b8565b60405180910390f35b610211610472565b005b61021b6104fa565b6040516102289190611040565b60405180910390f35b610239610523565b6040516102469190611076565b60405180910390f35b61026960048036038101906102649190610e54565b6105b5565b604051610276919061105b565b60405180910390f35b61029960048036038101906102949190610e54565b61062c565b6040516102a6919061105b565b60405180910390f35b6102c960048036038101906102c49190610dc9565b61064f565b6040516102d691906111b8565b60405180910390f35b6102f960048036038101906102f49190610da0565b6106d6565b005b60606004805461030a906112e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610336906112e8565b80156103835780601f1061035857610100808354040283529160200191610383565b820191906000526020600020905b81548152906001019060200180831161036657829003601f168201915b5050505050905090565b6000806103986107ce565b90506103a58185856107d6565b600191505092915050565b6000600354905090565b6000806103c56107ce565b90506103d28582856109a1565b6103dd858585610a2d565b60019150509392505050565b60006012905090565b6000806103fd6107ce565b905061041e81858561040f858961064f565b610419919061120a565b6107d6565b600191505092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61047a6107ce565b73ffffffffffffffffffffffffffffffffffffffff166104986104fa565b73ffffffffffffffffffffffffffffffffffffffff16146104ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e590611138565b60405180910390fd5b6104f86000610ca8565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054610532906112e8565b80601f016020809104026020016040519081016040528092919081815260200182805461055e906112e8565b80156105ab5780601f10610580576101008083540402835291602001916105ab565b820191906000526020600020905b81548152906001019060200180831161058e57829003601f168201915b5050505050905090565b6000806105c06107ce565b905060006105ce828661064f565b905083811015610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a90611198565b60405180910390fd5b61062082868684036107d6565b60019250505092915050565b6000806106376107ce565b9050610644818585610a2d565b600191505092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106de6107ce565b73ffffffffffffffffffffffffffffffffffffffff166106fc6104fa565b73ffffffffffffffffffffffffffffffffffffffff1614610752576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074990611138565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b9906110b8565b60405180910390fd5b6107cb81610ca8565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083d90611178565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad906110d8565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161099491906111b8565b60405180910390a3505050565b60006109ad848461064f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a275781811015610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a10906110f8565b60405180910390fd5b610a2684848484036107d6565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9490611158565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0490611098565b60405180910390fd5b610b18838383610d6c565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9690611118565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c8f91906111b8565b60405180910390a3610ca2848484610d71565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081359050610d8581611604565b92915050565b600081359050610d9a8161161b565b92915050565b600060208284031215610db257600080fd5b6000610dc084828501610d76565b91505092915050565b60008060408385031215610ddc57600080fd5b6000610dea85828601610d76565b9250506020610dfb85828601610d76565b9150509250929050565b600080600060608486031215610e1a57600080fd5b6000610e2886828701610d76565b9350506020610e3986828701610d76565b9250506040610e4a86828701610d8b565b9150509250925092565b60008060408385031215610e6757600080fd5b6000610e7585828601610d76565b9250506020610e8685828601610d8b565b9150509250929050565b610e9981611260565b82525050565b610ea881611272565b82525050565b6000610eb9826111ee565b610ec381856111f9565b9350610ed38185602086016112b5565b610edc81611378565b840191505092915050565b6000610ef46023836111f9565b9150610eff82611389565b604082019050919050565b6000610f176026836111f9565b9150610f22826113d8565b604082019050919050565b6000610f3a6022836111f9565b9150610f4582611427565b604082019050919050565b6000610f5d601d836111f9565b9150610f6882611476565b602082019050919050565b6000610f806026836111f9565b9150610f8b8261149f565b604082019050919050565b6000610fa36020836111f9565b9150610fae826114ee565b602082019050919050565b6000610fc66025836111f9565b9150610fd182611517565b604082019050919050565b6000610fe96024836111f9565b9150610ff482611566565b604082019050919050565b600061100c6025836111f9565b9150611017826115b5565b604082019050919050565b61102b8161129e565b82525050565b61103a816112a8565b82525050565b60006020820190506110556000830184610e90565b92915050565b60006020820190506110706000830184610e9f565b92915050565b600060208201905081810360008301526110908184610eae565b905092915050565b600060208201905081810360008301526110b181610ee7565b9050919050565b600060208201905081810360008301526110d181610f0a565b9050919050565b600060208201905081810360008301526110f181610f2d565b9050919050565b6000602082019050818103600083015261111181610f50565b9050919050565b6000602082019050818103600083015261113181610f73565b9050919050565b6000602082019050818103600083015261115181610f96565b9050919050565b6000602082019050818103600083015261117181610fb9565b9050919050565b6000602082019050818103600083015261119181610fdc565b9050919050565b600060208201905081810360008301526111b181610fff565b9050919050565b60006020820190506111cd6000830184611022565b92915050565b60006020820190506111e86000830184611031565b92915050565b600081519050919050565b600082825260208201905092915050565b60006112158261129e565b91506112208361129e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112555761125461131a565b5b828201905092915050565b600061126b8261127e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156112d35780820151818401526020810190506112b8565b838111156112e2576000848401525b50505050565b6000600282049050600182168061130057607f821691505b6020821081141561131457611313611349565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61160d81611260565b811461161857600080fd5b50565b6116248161129e565b811461162f57600080fd5b5056fea2646970667358221220d17e160ac67f62310bc2db79ac4faad69577890942d8124defe36f5efbd8cc8d64736f6c63430008040033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DF JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x231 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D9 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0xDC9 JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x30A SWAP1 PUSH2 0x12E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x336 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x383 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x358 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x383 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x366 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x398 PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x3A5 DUP2 DUP6 DUP6 PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C5 PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x3D2 DUP6 DUP3 DUP6 PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x3DD DUP6 DUP6 DUP6 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3FD PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x41E DUP2 DUP6 DUP6 PUSH2 0x40F DUP6 DUP10 PUSH2 0x64F JUMP JUMPDEST PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47A PUSH2 0x7CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x498 PUSH2 0x4FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E5 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F8 PUSH1 0x0 PUSH2 0xCA8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x532 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x55E SWAP1 PUSH2 0x12E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x580 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5C0 PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5CE DUP3 DUP7 PUSH2 0x64F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60A SWAP1 PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x620 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x637 PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x644 DUP2 DUP6 DUP6 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6DE PUSH2 0x7CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6FC PUSH2 0x4FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x749 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B9 SWAP1 PUSH2 0x10B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0xCA8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83D SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AD SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AD DUP5 DUP5 PUSH2 0x64F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA27 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA10 SWAP1 PUSH2 0x10F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA26 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x7D6 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA94 SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB04 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB18 DUP4 DUP4 DUP4 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP1 PUSH2 0x1118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xC8F SWAP2 SWAP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xCA2 DUP5 DUP5 DUP5 PUSH2 0xD71 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD85 DUP2 PUSH2 0x1604 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9A DUP2 PUSH2 0x161B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDC0 DUP5 DUP3 DUP6 ADD PUSH2 0xD76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDEA DUP6 DUP3 DUP7 ADD PUSH2 0xD76 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDFB DUP6 DUP3 DUP7 ADD PUSH2 0xD76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE28 DUP7 DUP3 DUP8 ADD PUSH2 0xD76 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE39 DUP7 DUP3 DUP8 ADD PUSH2 0xD76 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE4A DUP7 DUP3 DUP8 ADD PUSH2 0xD8B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE75 DUP6 DUP3 DUP7 ADD PUSH2 0xD76 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE86 DUP6 DUP3 DUP7 ADD PUSH2 0xD8B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE99 DUP2 PUSH2 0x1260 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEA8 DUP2 PUSH2 0x1272 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB9 DUP3 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0xEC3 DUP2 DUP6 PUSH2 0x11F9 JUMP JUMPDEST SWAP4 POP PUSH2 0xED3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0xEDC DUP2 PUSH2 0x1378 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF4 PUSH1 0x23 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xEFF DUP3 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF17 PUSH1 0x26 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF22 DUP3 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3A PUSH1 0x22 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF45 DUP3 PUSH2 0x1427 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5D PUSH1 0x1D DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF68 DUP3 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF80 PUSH1 0x26 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8B DUP3 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA3 PUSH1 0x20 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAE DUP3 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC6 PUSH1 0x25 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD1 DUP3 PUSH2 0x1517 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE9 PUSH1 0x24 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF4 DUP3 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100C PUSH1 0x25 DUP4 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1017 DUP3 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102B DUP2 PUSH2 0x129E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x103A DUP2 PUSH2 0x12A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1055 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1070 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1090 DUP2 DUP5 PUSH2 0xEAE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10B1 DUP2 PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10D1 DUP2 PUSH2 0xF0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F1 DUP2 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1111 DUP2 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1131 DUP2 PUSH2 0xF73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1151 DUP2 PUSH2 0xF96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1171 DUP2 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1191 DUP2 PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11B1 DUP2 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1022 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1031 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1215 DUP3 PUSH2 0x129E JUMP JUMPDEST SWAP2 POP PUSH2 0x1220 DUP4 PUSH2 0x129E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1255 JUMPI PUSH2 0x1254 PUSH2 0x131A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126B DUP3 PUSH2 0x127E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12D3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12B8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x12E2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1300 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1314 JUMPI PUSH2 0x1313 PUSH2 0x1349 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x160D DUP2 PUSH2 0x1260 JUMP JUMPDEST DUP2 EQ PUSH2 0x1618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1624 DUP2 PUSH2 0x129E JUMP JUMPDEST DUP2 EQ PUSH2 0x162F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH31 0x160AC67F62310BC2DB79AC4FAAD69577890942D8124DEFE36F5EFBD8CC8D64 PUSH20 0x6F6C634300080400330000000000000000000000 ","sourceMap":"364:11164:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3614:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2425:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4373:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2274:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5054:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2589:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1548:102:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5775:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2910:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3157:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1337:98:39;1391:13;1423:5;1416:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:98;:::o;3614:197::-;3697:4;3713:13;3729:12;:10;:12::i;:::-;3713:28;;3751:32;3760:5;3767:7;3776:6;3751:8;:32::i;:::-;3800:4;3793:11;;;3614:197;;;;:::o;2425:106::-;2486:7;2512:12;;2505:19;;2425:106;:::o;4373:286::-;4500:4;4516:15;4534:12;:10;:12::i;:::-;4516:30;;4556:38;4572:4;4578:7;4587:6;4556:15;:38::i;:::-;4604:27;4614:4;4620:2;4624:6;4604:9;:27::i;:::-;4648:4;4641:11;;;4373:286;;;;;:::o;2274:91::-;2332:5;2356:2;2349:9;;2274:91;:::o;5054:234::-;5142:4;5158:13;5174:12;:10;:12::i;:::-;5158:28;;5196:64;5205:5;5212:7;5249:10;5221:25;5231:5;5238:7;5221:9;:25::i;:::-;:38;;;;:::i;:::-;5196:8;:64::i;:::-;5277:4;5270:11;;;5054:234;;;;:::o;2589:125::-;2663:7;2689:9;:18;2699:7;2689:18;;;;;;;;;;;;;;;;2682:25;;2589:125;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1548:102:39:-;1604:13;1636:7;1629:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1548:102;:::o;5775:427::-;5868:4;5884:13;5900:12;:10;:12::i;:::-;5884:28;;5922:24;5949:25;5959:5;5966:7;5949:9;:25::i;:::-;5922:52;;6012:15;5992:16;:35;;5984:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6103:60;6112:5;6119:7;6147:15;6128:16;:34;6103:8;:60::i;:::-;6191:4;6184:11;;;;5775:427;;;;:::o;2910:189::-;2989:4;3005:13;3021:12;:10;:12::i;:::-;3005:28;;3043;3053:5;3060:2;3064:6;3043:9;:28::i;:::-;3088:4;3081:11;;;2910:189;;;;:::o;3157:149::-;3246:7;3272:11;:18;3284:5;3272:18;;;;;;;;;;;;;;;:27;3291:7;3272:27;;;;;;;;;;;;;;;;3265:34;;3157:149;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;9021:370:39:-;9169:1;9152:19;;:5;:19;;;;9144:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9249:1;9230:21;;:7;:21;;;;9222:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9331:6;9301:11;:18;9313:5;9301:18;;;;;;;;;;;;;;;:27;9320:7;9301:27;;;;;;;;;;;;;;;:36;;;;9368:7;9352:32;;9361:5;9352:32;;;9377:6;9352:32;;;;;;:::i;:::-;;;;;;;;9021:370;;;:::o;9672:441::-;9802:24;9829:25;9839:5;9846:7;9829:9;:25::i;:::-;9802:52;;9888:17;9868:16;:37;9864:243;;9949:6;9929:16;:26;;9921:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10031:51;10040:5;10047:7;10075:6;10056:16;:25;10031:8;:51::i;:::-;9864:243;9672:441;;;;:::o;6656:818::-;6798:1;6782:18;;:4;:18;;;;6774:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6874:1;6860:16;;:2;:16;;;;6852:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6927:38;6948:4;6954:2;6958:6;6927:20;:38::i;:::-;6976:19;6998:9;:15;7008:4;6998:15;;;;;;;;;;;;;;;;6976:37;;7046:6;7031:11;:21;;7023:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7161:6;7147:11;:20;7129:9;:15;7139:4;7129:15;;;;;;;;;;;;;;;:38;;;;7361:6;7344:9;:13;7354:2;7344:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;7408:2;7393:26;;7402:4;7393:26;;;7412:6;7393:26;;;;;;:::i;:::-;;;;;;;;7430:37;7450:4;7456:2;7460:6;7430:19;:37::i;:::-;6656:818;;;;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;10697:121:39:-;;;;:::o;11406:120::-;;;;:::o;7:139:40:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;633:6;641;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;1055:6;1063;1071;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;1604:6;1612;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:118::-;2036:24;2054:5;2036:24;:::i;:::-;2031:3;2024:37;2014:53;;:::o;2073:109::-;2154:21;2169:5;2154:21;:::i;:::-;2149:3;2142:34;2132:50;;:::o;2188:364::-;2276:3;2304:39;2337:5;2304:39;:::i;:::-;2359:71;2423:6;2418:3;2359:71;:::i;:::-;2352:78;;2439:52;2484:6;2479:3;2472:4;2465:5;2461:16;2439:52;:::i;:::-;2516:29;2538:6;2516:29;:::i;:::-;2511:3;2507:39;2500:46;;2280:272;;;;;:::o;2558:366::-;2700:3;2721:67;2785:2;2780:3;2721:67;:::i;:::-;2714:74;;2797:93;2886:3;2797:93;:::i;:::-;2915:2;2910:3;2906:12;2899:19;;2704:220;;;:::o;2930:366::-;3072:3;3093:67;3157:2;3152:3;3093:67;:::i;:::-;3086:74;;3169:93;3258:3;3169:93;:::i;:::-;3287:2;3282:3;3278:12;3271:19;;3076:220;;;:::o;3302:366::-;3444:3;3465:67;3529:2;3524:3;3465:67;:::i;:::-;3458:74;;3541:93;3630:3;3541:93;:::i;:::-;3659:2;3654:3;3650:12;3643:19;;3448:220;;;:::o;3674:366::-;3816:3;3837:67;3901:2;3896:3;3837:67;:::i;:::-;3830:74;;3913:93;4002:3;3913:93;:::i;:::-;4031:2;4026:3;4022:12;4015:19;;3820:220;;;:::o;4046:366::-;4188:3;4209:67;4273:2;4268:3;4209:67;:::i;:::-;4202:74;;4285:93;4374:3;4285:93;:::i;:::-;4403:2;4398:3;4394:12;4387:19;;4192:220;;;:::o;4418:366::-;4560:3;4581:67;4645:2;4640:3;4581:67;:::i;:::-;4574:74;;4657:93;4746:3;4657:93;:::i;:::-;4775:2;4770:3;4766:12;4759:19;;4564:220;;;:::o;4790:366::-;4932:3;4953:67;5017:2;5012:3;4953:67;:::i;:::-;4946:74;;5029:93;5118:3;5029:93;:::i;:::-;5147:2;5142:3;5138:12;5131:19;;4936:220;;;:::o;5162:366::-;5304:3;5325:67;5389:2;5384:3;5325:67;:::i;:::-;5318:74;;5401:93;5490:3;5401:93;:::i;:::-;5519:2;5514:3;5510:12;5503:19;;5308:220;;;:::o;5534:366::-;5676:3;5697:67;5761:2;5756:3;5697:67;:::i;:::-;5690:74;;5773:93;5862:3;5773:93;:::i;:::-;5891:2;5886:3;5882:12;5875:19;;5680:220;;;:::o;5906:118::-;5993:24;6011:5;5993:24;:::i;:::-;5988:3;5981:37;5971:53;;:::o;6030:112::-;6113:22;6129:5;6113:22;:::i;:::-;6108:3;6101:35;6091:51;;:::o;6148:222::-;6241:4;6279:2;6268:9;6264:18;6256:26;;6292:71;6360:1;6349:9;6345:17;6336:6;6292:71;:::i;:::-;6246:124;;;;:::o;6376:210::-;6463:4;6501:2;6490:9;6486:18;6478:26;;6514:65;6576:1;6565:9;6561:17;6552:6;6514:65;:::i;:::-;6468:118;;;;:::o;6592:313::-;6705:4;6743:2;6732:9;6728:18;6720:26;;6792:9;6786:4;6782:20;6778:1;6767:9;6763:17;6756:47;6820:78;6893:4;6884:6;6820:78;:::i;:::-;6812:86;;6710:195;;;;:::o;6911:419::-;7077:4;7115:2;7104:9;7100:18;7092:26;;7164:9;7158:4;7154:20;7150:1;7139:9;7135:17;7128:47;7192:131;7318:4;7192:131;:::i;:::-;7184:139;;7082:248;;;:::o;7336:419::-;7502:4;7540:2;7529:9;7525:18;7517:26;;7589:9;7583:4;7579:20;7575:1;7564:9;7560:17;7553:47;7617:131;7743:4;7617:131;:::i;:::-;7609:139;;7507:248;;;:::o;7761:419::-;7927:4;7965:2;7954:9;7950:18;7942:26;;8014:9;8008:4;8004:20;8000:1;7989:9;7985:17;7978:47;8042:131;8168:4;8042:131;:::i;:::-;8034:139;;7932:248;;;:::o;8186:419::-;8352:4;8390:2;8379:9;8375:18;8367:26;;8439:9;8433:4;8429:20;8425:1;8414:9;8410:17;8403:47;8467:131;8593:4;8467:131;:::i;:::-;8459:139;;8357:248;;;:::o;8611:419::-;8777:4;8815:2;8804:9;8800:18;8792:26;;8864:9;8858:4;8854:20;8850:1;8839:9;8835:17;8828:47;8892:131;9018:4;8892:131;:::i;:::-;8884:139;;8782:248;;;:::o;9036:419::-;9202:4;9240:2;9229:9;9225:18;9217:26;;9289:9;9283:4;9279:20;9275:1;9264:9;9260:17;9253:47;9317:131;9443:4;9317:131;:::i;:::-;9309:139;;9207:248;;;:::o;9461:419::-;9627:4;9665:2;9654:9;9650:18;9642:26;;9714:9;9708:4;9704:20;9700:1;9689:9;9685:17;9678:47;9742:131;9868:4;9742:131;:::i;:::-;9734:139;;9632:248;;;:::o;9886:419::-;10052:4;10090:2;10079:9;10075:18;10067:26;;10139:9;10133:4;10129:20;10125:1;10114:9;10110:17;10103:47;10167:131;10293:4;10167:131;:::i;:::-;10159:139;;10057:248;;;:::o;10311:419::-;10477:4;10515:2;10504:9;10500:18;10492:26;;10564:9;10558:4;10554:20;10550:1;10539:9;10535:17;10528:47;10592:131;10718:4;10592:131;:::i;:::-;10584:139;;10482:248;;;:::o;10736:222::-;10829:4;10867:2;10856:9;10852:18;10844:26;;10880:71;10948:1;10937:9;10933:17;10924:6;10880:71;:::i;:::-;10834:124;;;;:::o;10964:214::-;11053:4;11091:2;11080:9;11076:18;11068:26;;11104:67;11168:1;11157:9;11153:17;11144:6;11104:67;:::i;:::-;11058:120;;;;:::o;11184:99::-;11236:6;11270:5;11264:12;11254:22;;11243:40;;;:::o;11289:169::-;11373:11;11407:6;11402:3;11395:19;11447:4;11442:3;11438:14;11423:29;;11385:73;;;;:::o;11464:305::-;11504:3;11523:20;11541:1;11523:20;:::i;:::-;11518:25;;11557:20;11575:1;11557:20;:::i;:::-;11552:25;;11711:1;11643:66;11639:74;11636:1;11633:81;11630:2;;;11717:18;;:::i;:::-;11630:2;11761:1;11758;11754:9;11747:16;;11508:261;;;;:::o;11775:96::-;11812:7;11841:24;11859:5;11841:24;:::i;:::-;11830:35;;11820:51;;;:::o;11877:90::-;11911:7;11954:5;11947:13;11940:21;11929:32;;11919:48;;;:::o;11973:126::-;12010:7;12050:42;12043:5;12039:54;12028:65;;12018:81;;;:::o;12105:77::-;12142:7;12171:5;12160:16;;12150:32;;;:::o;12188:86::-;12223:7;12263:4;12256:5;12252:16;12241:27;;12231:43;;;:::o;12280:307::-;12348:1;12358:113;12372:6;12369:1;12366:13;12358:113;;;12457:1;12452:3;12448:11;12442:18;12438:1;12433:3;12429:11;12422:39;12394:2;12391:1;12387:10;12382:15;;12358:113;;;12489:6;12486:1;12483:13;12480:2;;;12569:1;12560:6;12555:3;12551:16;12544:27;12480:2;12329:258;;;;:::o;12593:320::-;12637:6;12674:1;12668:4;12664:12;12654:22;;12721:1;12715:4;12711:12;12742:18;12732:2;;12798:4;12790:6;12786:17;12776:27;;12732:2;12860;12852:6;12849:14;12829:18;12826:38;12823:2;;;12879:18;;:::i;:::-;12823:2;12644:269;;;;:::o;12919:180::-;12967:77;12964:1;12957:88;13064:4;13061:1;13054:15;13088:4;13085:1;13078:15;13105:180;13153:77;13150:1;13143:88;13250:4;13247:1;13240:15;13274:4;13271:1;13264:15;13291:102;13332:6;13383:2;13379:7;13374:2;13367:5;13363:14;13359:28;13349:38;;13339:54;;;:::o;13399:222::-;13539:34;13535:1;13527:6;13523:14;13516:58;13608:5;13603:2;13595:6;13591:15;13584:30;13505:116;:::o;13627:225::-;13767:34;13763:1;13755:6;13751:14;13744:58;13836:8;13831:2;13823:6;13819:15;13812:33;13733:119;:::o;13858:221::-;13998:34;13994:1;13986:6;13982:14;13975:58;14067:4;14062:2;14054:6;14050:15;14043:29;13964:115;:::o;14085:179::-;14225:31;14221:1;14213:6;14209:14;14202:55;14191:73;:::o;14270:225::-;14410:34;14406:1;14398:6;14394:14;14387:58;14479:8;14474:2;14466:6;14462:15;14455:33;14376:119;:::o;14501:182::-;14641:34;14637:1;14629:6;14625:14;14618:58;14607:76;:::o;14689:224::-;14829:34;14825:1;14817:6;14813:14;14806:58;14898:7;14893:2;14885:6;14881:15;14874:32;14795:118;:::o;14919:223::-;15059:34;15055:1;15047:6;15043:14;15036:58;15128:6;15123:2;15115:6;15111:15;15104:31;15025:117;:::o;15148:224::-;15288:34;15284:1;15276:6;15272:14;15265:58;15357:7;15352:2;15344:6;15340:15;15333:32;15254:118;:::o;15378:122::-;15451:24;15469:5;15451:24;:::i;:::-;15444:5;15441:35;15431:2;;15490:1;15487;15480:12;15431:2;15421:79;:::o;15506:122::-;15579:24;15597:5;15579:24;:::i;:::-;15572:5;15569:35;15559:2;;15618:1;15615;15608:12;15559:2;15549:79;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"adminAccount_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}.    The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/manilla.sol\":\"Manilla\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/manilla.sol\":{\"keccak256\":\"0x3a49187ac2c2a42aa427712775c1488cff8a63a6b9505a138887c8f5e53ab835\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5909da715623334b01897bd256e23b3cea7374e158b3d44260fe9ecbb7d1d6df\",\"dweb:/ipfs/QmVRypyrDdoEkfrR4tK4VDZfCJSj2LWaDLLreRRWh2xHmj\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/manilla.sol:Manilla","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":7059,"contract":"contracts/manilla.sol:Manilla","label":"_balances","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":7065,"contract":"contracts/manilla.sol:Manilla","label":"_allowances","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":7067,"contract":"contracts/manilla.sol:Manilla","label":"_totalSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":7069,"contract":"contracts/manilla.sol:Manilla","label":"_name","offset":0,"slot":"4","type":"t_string_storage"},{"astId":7071,"contract":"contracts/manilla.sol:Manilla","label":"_symbol","offset":0,"slot":"5","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}